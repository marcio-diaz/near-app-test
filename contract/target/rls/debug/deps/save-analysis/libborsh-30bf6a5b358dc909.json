{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0","program":"/home/marcio/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","borsh","--edition=2018","/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=30bf6a5b358dc909","-C","extra-filename=-30bf6a5b358dc909","--out-dir","/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps","-L","dependency=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps","--extern","borsh_derive=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libborsh_derive-c4ef61e3d49d3372.so","--cap-lints","allow","--error-format=json","--sysroot","/home/marcio/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libborsh-30bf6a5b358dc909.rmeta"},"prelude":{"crate_id":{"name":"borsh","disambiguator":[7602794373605832025,15042717913599283710]},"crate_root":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src","external_crates":[{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[526428811945659246,13385786431852093568]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4150165762619742282,10084428854705346699]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17154149902455954331,10787439630250540476]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3551889228217061522,18098948565341830907]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[616005194320102788,15921775685612583979]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4310295892305589745,11285303825786314436]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3247569189967614495,15966786433993657917]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15680994173287911211,8587509387955096358]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11719660851090472004,3429704230356133145]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17594861313346837805,7275947389262704147]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11399954785695891892,14851098529173350963]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12494985972155115308,9730871930189483612]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15532488949252110002,6117296861090759943]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[1804911290426314532,6689449841577915250]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[8479710970850627223,6852362994577870122]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12659285667184348883,16807697831197910537]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3876717150818575906,15525448869101162932]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","num":18,"id":{"name":"borsh_derive","disambiguator":[16869764786505032177,12862934800151144214]}}],"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":0,"byte_end":303,"line_start":1,"line_end":11,"column_start":1,"column_end":29}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":23},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":23,"byte_end":39,"line_start":1,"line_end":1,"column_start":24,"column_end":40},"alias_span":null,"name":"BorshDeserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":24},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":41,"byte_end":52,"line_start":1,"line_end":1,"column_start":42,"column_end":53},"alias_span":null,"name":"BorshSchema","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":22},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":54,"byte_end":68,"line_start":1,"line_end":1,"column_start":55,"column_end":69},"alias_span":null,"name":"BorshSerialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":150,"byte_end":166,"line_start":8,"line_end":8,"column_start":13,"column_end":29},"alias_span":null,"name":"BorshDeserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":184,"byte_end":195,"line_start":9,"line_end":9,"column_start":17,"column_end":28},"alias_span":null,"name":"BorshSchema","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":222,"byte_end":248,"line_start":10,"line_end":10,"column_start":26,"column_end":52},"alias_span":null,"name":"try_from_slice_with_schema","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":250,"byte_end":272,"line_start":10,"line_end":10,"column_start":54,"column_end":76},"alias_span":null,"name":"try_to_vec_with_schema","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":288,"byte_end":302,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"alias_span":null,"name":"BorshSerialize","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":0,"byte_end":303,"line_start":1,"line_end":11,"column_start":1,"column_end":29},"name":"","qualname":"::","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":110},{"krate":0,"index":165},{"krate":0,"index":186},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":342},{"krate":0,"index":347},{"krate":0,"index":352},{"krate":0,"index":357},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":372},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":387},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":402},{"krate":0,"index":407},{"krate":0,"index":412},{"krate":0,"index":417},{"krate":0,"index":422},{"krate":0,"index":427},{"krate":0,"index":432},{"krate":0,"index":437},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":452},{"krate":0,"index":457},{"krate":0,"index":462},{"krate":0,"index":467},{"krate":0,"index":472},{"krate":0,"index":477},{"krate":0,"index":482},{"krate":0,"index":487},{"krate":0,"index":492},{"krate":0,"index":497},{"krate":0,"index":502},{"krate":0,"index":507},{"krate":0,"index":512},{"krate":0,"index":517},{"krate":0,"index":522},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":102},{"krate":0,"index":107},{"krate":0,"index":537},{"krate":0,"index":541},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":559},{"krate":0,"index":567},{"krate":0,"index":576},{"krate":0,"index":586},{"krate":0,"index":597},{"krate":0,"index":609},{"krate":0,"index":622},{"krate":0,"index":636},{"krate":0,"index":651},{"krate":0,"index":667},{"krate":0,"index":684},{"krate":0,"index":702},{"krate":0,"index":721},{"krate":0,"index":741},{"krate":0,"index":762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":688,"byte_end":704,"line_start":13,"line_end":13,"column_start":11,"column_end":27},"name":"BorshDeserialize","qualname":"::de::BorshDeserialize","value":"BorshDeserialize: Sized","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" A data-structure that can be de-serialized from binary format by NBOR.\n","sig":null,"attributes":[{"value":"/ A data-structure that can be de-serialized from binary format by NBOR.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":603,"byte_end":677,"line_start":12,"line_end":12,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":845,"byte_end":856,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::de::BorshDeserialize::deserialize","value":"pub fn deserialize(&mut &[u8]) -> io::Result<Self>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Deserializes this instance from a given slice of bytes.\n Updates the buffer to point at the remaining bytes.\n","sig":null,"attributes":[{"value":"/ Deserializes this instance from a given slice of bytes.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":718,"byte_end":777,"line_start":14,"line_end":14,"column_start":5,"column_end":64}},{"value":"/ Updates the buffer to point at the remaining bytes.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":782,"byte_end":837,"line_start":15,"line_end":15,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":960,"byte_end":974,"line_start":19,"line_end":19,"column_start":8,"column_end":22},"name":"try_from_slice","qualname":"::de::BorshDeserialize::try_from_slice","value":"pub fn try_from_slice(&[u8]) -> io::Result<Self>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Deserialize this instance from a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Deserialize this instance from a slice of bytes.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":900,"byte_end":952,"line_start":18,"line_end":18,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":1681,"byte_end":1686,"line_start":37,"line_end":37,"column_start":8,"column_end":13},"name":"is_u8","qualname":"::de::BorshDeserialize::is_u8","value":"pub fn is_u8() -> bool","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Whether Self is u8.\n NOTE: `Vec<u8>` is the most common use-case for serialization and deserialization, it's\n worth handling it as a special case to improve performance.\n It's a workaround for specific `Vec<u8>` implementation versus generic `Vec<T>`\n implementation. See https://github.com/rust-lang/rfcs/pull/1210 for details.\n","sig":null,"attributes":[{"value":"/ Whether Self is u8.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":1299,"byte_end":1322,"line_start":31,"line_end":31,"column_start":5,"column_end":28}},{"value":"/ NOTE: `Vec<u8>` is the most common use-case for serialization and deserialization, it's","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":1327,"byte_end":1418,"line_start":32,"line_end":32,"column_start":5,"column_end":96}},{"value":"/ worth handling it as a special case to improve performance.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":1423,"byte_end":1486,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"/ It's a workaround for specific `Vec<u8>` implementation versus generic `Vec<T>`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":1491,"byte_end":1574,"line_start":34,"line_end":34,"column_start":5,"column_end":88}},{"value":"/ implementation. See https://github.com/rust-lang/rfcs/pull/1210 for details.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":1579,"byte_end":1659,"line_start":35,"line_end":35,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":1664,"byte_end":1673,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema","qualname":"::schema","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":784},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":830},{"krate":0,"index":827},{"krate":0,"index":825},{"krate":0,"index":796},{"krate":0,"index":836},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":870},{"krate":0,"index":867},{"krate":0,"index":865},{"krate":0,"index":845},{"krate":0,"index":876},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":887},{"krate":0,"index":884},{"krate":0,"index":882},{"krate":0,"index":879},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":943},{"krate":0,"index":948},{"krate":0,"index":953},{"krate":0,"index":958},{"krate":0,"index":963},{"krate":0,"index":968},{"krate":0,"index":973},{"krate":0,"index":978},{"krate":0,"index":983},{"krate":0,"index":988},{"krate":0,"index":993},{"krate":0,"index":998},{"krate":0,"index":1003},{"krate":0,"index":1008},{"krate":0,"index":1013},{"krate":0,"index":1018},{"krate":0,"index":1023},{"krate":0,"index":1028},{"krate":0,"index":1033},{"krate":0,"index":1038},{"krate":0,"index":1043},{"krate":0,"index":1048},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":1053},{"krate":0,"index":1058},{"krate":0,"index":1064},{"krate":0,"index":1071},{"krate":0,"index":1079},{"krate":0,"index":1088},{"krate":0,"index":1098},{"krate":0,"index":1109},{"krate":0,"index":1121},{"krate":0,"index":1134},{"krate":0,"index":1148},{"krate":0,"index":1163},{"krate":0,"index":1179},{"krate":0,"index":1196},{"krate":0,"index":1214},{"krate":0,"index":1233},{"krate":0,"index":1253},{"krate":0,"index":1274},{"krate":0,"index":1296},{"krate":0,"index":1319}],"decl_id":null,"docs":" Since Borsh is not a self-descriptive format we have a way to describe types serialized with Borsh so that\n we can deserialize serialized blobs without having Rust types available. Additionally, this can be used to\n serialize content provided in a different format, e.g. JSON object `{\"user\": \"alice\", \"message\": \"Message\"}`\n can be serialized by JS code into Borsh format such that it can be deserialized into `struct UserMessage {user: String, message: String}`\n on Rust side.","sig":null,"attributes":[{"value":"/ Since Borsh is not a self-descriptive format we have a way to describe types serialized with Borsh so that","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":16518,"byte_end":16628,"line_start":1,"line_end":1,"column_start":1,"column_end":111}},{"value":"/ we can deserialize serialized blobs without having Rust types available. Additionally, this can be used to","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":16629,"byte_end":16739,"line_start":2,"line_end":2,"column_start":1,"column_end":111}},{"value":"/ serialize content provided in a different format, e.g. JSON object `{\"user\": \"alice\", \"message\": \"Message\"}`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":16740,"byte_end":16852,"line_start":3,"line_end":3,"column_start":1,"column_end":113}},{"value":"/ can be serialized by JS code into Borsh format such that it can be deserialized into `struct UserMessage {user: String, message: String}`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":16853,"byte_end":16994,"line_start":4,"line_end":4,"column_start":1,"column_end":142}},{"value":"/ on Rust side.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":16995,"byte_end":17012,"line_start":5,"line_end":5,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17013,"byte_end":17016,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The important components are: `BorshSchema` trait, `Definition` and `Declaration` types, and `BorshSchemaContainer` struct.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17017,"byte_end":17144,"line_start":7,"line_end":7,"column_start":1,"column_end":128}},{"value":"/ * `BorshSchema` trait allows any type that implements it to be self-descriptive, i.e. generate it's own schema;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17145,"byte_end":17260,"line_start":8,"line_end":8,"column_start":1,"column_end":116}},{"value":"/ * `Declaration` is used to describe the type identifier, e.g. `HashMap<u64, String>`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17261,"byte_end":17350,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ * `Definition` is used to describe the structure of the type;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17351,"byte_end":17416,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ * `BorshSchemaContainer` is used to store all declarations and defintions that are needed to work with a single type.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17417,"byte_end":17538,"line_start":11,"line_end":11,"column_start":1,"column_end":122}},{"value":"allow(dead_code)","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17540,"byte_end":17560,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17935,"byte_end":17946,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"Declaration","qualname":"::schema::Declaration","value":"String","parent":null,"children":[],"decl_id":null,"docs":" The type that we use to represent the declaration of the Borsh type.\n","sig":null,"attributes":[{"value":"/ The type that we use to represent the declaration of the Borsh type.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17853,"byte_end":17925,"line_start":19,"line_end":19,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18020,"byte_end":18031,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"VariantName","qualname":"::schema::VariantName","value":"String","parent":null,"children":[],"decl_id":null,"docs":" The type that we use for the name of the variant.\n","sig":null,"attributes":[{"value":"/ The type that we use for the name of the variant.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":17957,"byte_end":18010,"line_start":21,"line_end":21,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":130},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18148,"byte_end":18157,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"FieldName","qualname":"::schema::FieldName","value":"String","parent":null,"children":[],"decl_id":null,"docs":" The name of the field in the struct (can be used to convert JSON to Borsh using the schema).\n","sig":null,"attributes":[{"value":"/ The name of the field in the struct (can be used to convert JSON to Borsh using the schema).","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18042,"byte_end":18138,"line_start":23,"line_end":23,"column_start":1,"column_end":97}}]},{"kind":"StructVariant","id":{"krate":0,"index":785},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18443,"byte_end":18448,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Array","qualname":"::schema::Definition::Array","value":"Definition::Array { length, elements }","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" A fixed-size array with the length known at the compile time and the same-type elements.\n","sig":null,"attributes":[{"value":"/ A fixed-size array with the length known at the compile time and the same-type elements.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18346,"byte_end":18438,"line_start":28,"line_end":28,"column_start":5,"column_end":97}}]},{"kind":"StructVariant","id":{"krate":0,"index":788},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18584,"byte_end":18592,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Sequence","qualname":"::schema::Definition::Sequence","value":"Definition::Sequence { elements }","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" A sequence of elements of length known at the run time and the same-type elements.\n","sig":null,"attributes":[{"value":"/ A sequence of elements of length known at the run time and the same-type elements.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18493,"byte_end":18579,"line_start":30,"line_end":30,"column_start":5,"column_end":91}}]},{"kind":"StructVariant","id":{"krate":0,"index":790},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18738,"byte_end":18743,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Tuple","qualname":"::schema::Definition::Tuple","value":"Definition::Tuple { elements }","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" A fixed-size tuple with the length known at the compile time and the elements of different\n types.\n","sig":null,"attributes":[{"value":"/ A fixed-size tuple with the length known at the compile time and the elements of different","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18624,"byte_end":18718,"line_start":32,"line_end":32,"column_start":5,"column_end":99}},{"value":"/ types.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18723,"byte_end":18733,"line_start":33,"line_end":33,"column_start":5,"column_end":15}}]},{"kind":"StructVariant","id":{"krate":0,"index":792},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18872,"byte_end":18876,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Enum","qualname":"::schema::Definition::Enum","value":"Definition::Enum { variants }","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" A tagged union, a.k.a enum. Tagged-unions have variants with associated structures.\n","sig":null,"attributes":[{"value":"/ A tagged union, a.k.a enum. Tagged-unions have variants with associated structures.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18780,"byte_end":18867,"line_start":35,"line_end":35,"column_start":5,"column_end":92}}]},{"kind":"StructVariant","id":{"krate":0,"index":794},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18995,"byte_end":19001,"line_start":40,"line_end":40,"column_start":5,"column_end":11},"name":"Struct","qualname":"::schema::Definition::Struct","value":"Definition::Struct { fields }","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" A structure, structurally similar to a tuple.\n","sig":null,"attributes":[{"value":"/ A structure, structurally similar to a tuple.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18941,"byte_end":18990,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":784},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18329,"byte_end":18339,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"Definition","qualname":"::schema::Definition","value":"pub enum Definition {\n    Array {\n        length: u32,\n        elements: Declaration,\n    },\n    Sequence {\n        elements: Declaration,\n    },\n    Tuple {\n        elements: Vec<Declaration>,\n    },\n    Enum {\n        variants: Vec<(VariantName, Declaration)>,\n    },\n    Struct {\n        fields: Fields,\n    },\n}","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794}],"decl_id":null,"docs":" The type that we use to represent the definition of the Borsh type.\n","sig":null,"attributes":[{"value":"/ The type that we use to represent the definition of the Borsh type.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":18168,"byte_end":18239,"line_start":25,"line_end":25,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":837},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19221,"byte_end":19232,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"NamedFields","qualname":"::schema::Fields::NamedFields","value":"Fields::NamedFields(Vec<(FieldName, Declaration)>)","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" The struct with named fields.\n","sig":null,"attributes":[{"value":"/ The struct with named fields.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19183,"byte_end":19216,"line_start":46,"line_end":46,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":840},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19344,"byte_end":19357,"line_start":49,"line_end":49,"column_start":5,"column_end":18},"name":"UnnamedFields","qualname":"::schema::Fields::UnnamedFields","value":"Fields::UnnamedFields(Vec<Declaration>)","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" The struct with unnamed fields, structurally identical to a tuple.\n","sig":null,"attributes":[{"value":"/ The struct with unnamed fields, structurally identical to a tuple.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19269,"byte_end":19339,"line_start":48,"line_end":48,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":843},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19416,"byte_end":19421,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Empty","qualname":"::schema::Fields::Empty","value":"Fields::Empty","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" The struct with no fields.\n","sig":null,"attributes":[{"value":"/ The struct with no fields.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19381,"byte_end":19411,"line_start":50,"line_end":50,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":836},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19170,"byte_end":19176,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Fields","qualname":"::schema::Fields","value":"pub enum Fields {\n    NamedFields(Vec<(FieldName, Declaration)>),\n    UnnamedFields(Vec<Declaration>),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":843}],"decl_id":null,"docs":" The collection representing the fields of a struct.\n","sig":null,"attributes":[{"value":"/ The collection representing the fields of a struct.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19025,"byte_end":19080,"line_start":43,"line_end":43,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19581,"byte_end":19601,"line_start":56,"line_end":56,"column_start":12,"column_end":32},"name":"BorshSchemaContainer","qualname":"::schema::BorshSchemaContainer","value":"BorshSchemaContainer { declaration, definitions }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"decl_id":null,"docs":" All schema information needed to deserialize a single type.\n","sig":null,"attributes":[{"value":"/ All schema information needed to deserialize a single type.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19426,"byte_end":19489,"line_start":54,"line_end":54,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":877},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19645,"byte_end":19656,"line_start":58,"line_end":58,"column_start":9,"column_end":20},"name":"declaration","qualname":"::schema::BorshSchemaContainer::declaration","value":"std::string::String","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Declaration of the type.\n","sig":null,"attributes":[{"value":"/ Declaration of the type.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19608,"byte_end":19636,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":878},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19741,"byte_end":19752,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"definitions","qualname":"::schema::BorshSchemaContainer::definitions","value":"std::collections::HashMap<std::string::String, schema::Definition>","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" All definitions needed to deserialize the given type.\n","sig":null,"attributes":[{"value":"/ All definitions needed to deserialize the given type.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19675,"byte_end":19732,"line_start":59,"line_end":59,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19936,"byte_end":19947,"line_start":65,"line_end":65,"column_start":11,"column_end":22},"name":"BorshSchema","qualname":"::schema::BorshSchema","value":"BorshSchema","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" The declaration and the definition of the type that can be used to (de)serialize Borsh without\n the Rust type that produced it.\n","sig":null,"attributes":[{"value":"/ The declaration and the definition of the type that can be used to (de)serialize Borsh without","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19791,"byte_end":19889,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ the Rust type that produced it.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19890,"byte_end":19925,"line_start":64,"line_end":64,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":20146,"byte_end":20173,"line_start":68,"line_end":68,"column_start":8,"column_end":35},"name":"add_definitions_recursively","qualname":"::schema::BorshSchema::add_definitions_recursively","value":"pub fn add_definitions_recursively(&mut HashMap<Declaration, Definition>)","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Recursively, using DFS, add type definitions required for this type. For primitive types\n this is an empty map. Type definition explains how to serialize/deserialize a type.\n","sig":null,"attributes":[{"value":"/ Recursively, using DFS, add type definitions required for this type. For primitive types","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":19954,"byte_end":20046,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ this is an empty map. Type definition explains how to serialize/deserialize a type.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":20051,"byte_end":20138,"line_start":67,"line_end":67,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":20301,"byte_end":20315,"line_start":71,"line_end":71,"column_start":8,"column_end":22},"name":"add_definition","qualname":"::schema::BorshSchema::add_definition","value":"pub fn add_definition(Declaration, Definition,\n                      &mut HashMap<Declaration, Definition>)","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Helper method to add a single type definition to the map.\n","sig":null,"attributes":[{"value":"/ Helper method to add a single type definition to the map.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":20232,"byte_end":20293,"line_start":70,"line_end":70,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":20910,"byte_end":20921,"line_start":87,"line_end":87,"column_start":8,"column_end":19},"name":"declaration","qualname":"::schema::BorshSchema::declaration","value":"pub fn declaration() -> Declaration","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Get the name of the type without brackets.\n","sig":null,"attributes":[{"value":"/ Get the name of the type without brackets.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":20856,"byte_end":20902,"line_start":86,"line_end":86,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":20948,"byte_end":20964,"line_start":89,"line_end":89,"column_start":8,"column_end":24},"name":"schema_container","qualname":"::schema::BorshSchema::schema_container","value":"pub fn schema_container() -> BorshSchemaContainer","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema_helpers","qualname":"::schema_helpers","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":33286,"byte_end":33312,"line_start":8,"line_end":8,"column_start":8,"column_end":34},"name":"try_from_slice_with_schema","qualname":"::schema_helpers::try_from_slice_with_schema","value":"pub fn try_from_slice_with_schema<T: BorshDeserialize + BorshSchema>(&[u8])\n-> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize this instance from a slice of bytes, but assume that at the beginning we have\n bytes describing the schema of the type. We deserialize this schema and verify that it is\n correct.\n","sig":null,"attributes":[{"value":"/ Deserialize this instance from a slice of bytes, but assume that at the beginning we have","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":33078,"byte_end":33171,"line_start":5,"line_end":5,"column_start":1,"column_end":94}},{"value":"/ bytes describing the schema of the type. We deserialize this schema and verify that it is","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":33172,"byte_end":33265,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/ correct.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":33266,"byte_end":33278,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":33777,"byte_end":33799,"line_start":21,"line_end":21,"column_start":8,"column_end":30},"name":"try_to_vec_with_schema","qualname":"::schema_helpers::try_to_vec_with_schema","value":"pub fn try_to_vec_with_schema<T: BorshSerialize + BorshSchema>(&T)\n-> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serialize object into a vector of bytes and prefix with the schema serialized as vector of\n bytes in Borsh format.\n","sig":null,"attributes":[{"value":"/ Serialize object into a vector of bytes and prefix with the schema serialized as vector of","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":33648,"byte_end":33742,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ bytes in Borsh format.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema_helpers.rs","byte_start":33743,"byte_end":33769,"line_start":20,"line_end":20,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":186},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":262},{"krate":0,"index":269},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":295},{"krate":0,"index":1376},{"krate":0,"index":1381},{"krate":0,"index":1386},{"krate":0,"index":1391},{"krate":0,"index":1396},{"krate":0,"index":1401},{"krate":0,"index":1406},{"krate":0,"index":1411},{"krate":0,"index":1416},{"krate":0,"index":1421},{"krate":0,"index":1426},{"krate":0,"index":1431},{"krate":0,"index":1436},{"krate":0,"index":1441},{"krate":0,"index":1446},{"krate":0,"index":1451},{"krate":0,"index":1456},{"krate":0,"index":1461},{"krate":0,"index":1466},{"krate":0,"index":1471},{"krate":0,"index":1476},{"krate":0,"index":1481},{"krate":0,"index":1486},{"krate":0,"index":1491},{"krate":0,"index":1496},{"krate":0,"index":1501},{"krate":0,"index":1506},{"krate":0,"index":1511},{"krate":0,"index":1516},{"krate":0,"index":1521},{"krate":0,"index":1526},{"krate":0,"index":1531},{"krate":0,"index":1536},{"krate":0,"index":1541},{"krate":0,"index":1546},{"krate":0,"index":1551},{"krate":0,"index":1556},{"krate":0,"index":1561},{"krate":0,"index":1566},{"krate":0,"index":300},{"krate":0,"index":1571},{"krate":0,"index":1576},{"krate":0,"index":1582},{"krate":0,"index":1589},{"krate":0,"index":1597},{"krate":0,"index":1606},{"krate":0,"index":1616},{"krate":0,"index":1627},{"krate":0,"index":1639},{"krate":0,"index":1652},{"krate":0,"index":1666},{"krate":0,"index":1681},{"krate":0,"index":1697},{"krate":0,"index":1714},{"krate":0,"index":1732},{"krate":0,"index":1751},{"krate":0,"index":1771},{"krate":0,"index":1792},{"krate":0,"index":1814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":214},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34284,"byte_end":34298,"line_start":10,"line_end":10,"column_start":11,"column_end":25},"name":"BorshSerialize","qualname":"::ser::BorshSerialize","value":"BorshSerialize","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" A data-structure that can be serialized into binary format by NBOR.\n","sig":null,"attributes":[{"value":"/ A data-structure that can be serialized into binary format by NBOR.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34202,"byte_end":34273,"line_start":9,"line_end":9,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34308,"byte_end":34317,"line_start":11,"line_end":11,"column_start":8,"column_end":17},"name":"serialize","qualname":"::ser::BorshSerialize::serialize","value":"pub fn serialize<W: Write>(&Self, &mut W) -> io::Result<()>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34434,"byte_end":34444,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"try_to_vec","qualname":"::ser::BorshSerialize::try_to_vec","value":"pub fn try_to_vec(&Self) -> io::Result<Vec<u8>>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Serialize this instance into a vector of bytes.\n","sig":null,"attributes":[{"value":"/ Serialize this instance into a vector of bytes.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34375,"byte_end":34426,"line_start":13,"line_end":13,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":35001,"byte_end":35006,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"is_u8","qualname":"::ser::BorshSerialize::is_u8","value":"pub fn is_u8() -> bool","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":" Whether Self is u8.\n NOTE: `Vec<u8>` is the most common use-case for serialization and deserialization, it's\n worth handling it as a special case to improve performance.\n It's a workaround for specific `Vec<u8>` implementation versus generic `Vec<T>`\n implementation. See https://github.com/rust-lang/rfcs/pull/1210 for details.\n","sig":null,"attributes":[{"value":"/ Whether Self is u8.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34619,"byte_end":34642,"line_start":20,"line_end":20,"column_start":5,"column_end":28}},{"value":"/ NOTE: `Vec<u8>` is the most common use-case for serialization and deserialization, it's","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34647,"byte_end":34738,"line_start":21,"line_end":21,"column_start":5,"column_end":96}},{"value":"/ worth handling it as a special case to improve performance.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34743,"byte_end":34806,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"/ It's a workaround for specific `Vec<u8>` implementation versus generic `Vec<T>`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34811,"byte_end":34894,"line_start":23,"line_end":23,"column_start":5,"column_end":88}},{"value":"/ implementation. See https://github.com/rust-lang/rfcs/pull/1210 for details.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34899,"byte_end":34979,"line_start":24,"line_end":24,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":34984,"byte_end":34993,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":4865,"byte_end":4871,"line_start":147,"line_end":147,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":5668,"byte_end":5674,"line_start":177,"line_end":177,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":6499,"byte_end":6505,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":6786,"byte_end":6789,"line_start":217,"line_end":217,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":9178,"byte_end":9181,"line_start":277,"line_end":277,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":9461,"byte_end":9468,"line_start":289,"line_end":289,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":9764,"byte_end":9771,"line_start":301,"line_end":301,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":10339,"byte_end":10347,"line_start":321,"line_end":321,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":10845,"byte_end":10855,"line_start":340,"line_end":340,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":11418,"byte_end":11430,"line_start":356,"line_end":356,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":11723,"byte_end":11735,"line_start":366,"line_end":366,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":12034,"byte_end":12042,"line_start":376,"line_end":376,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":12525,"byte_end":12533,"line_start":393,"line_end":393,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":12992,"byte_end":12995,"line_start":409,"line_end":409,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":21245,"byte_end":21248,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":23015,"byte_end":23021,"line_start":164,"line_end":164,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":23629,"byte_end":23635,"line_start":184,"line_end":184,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":24266,"byte_end":24269,"line_start":205,"line_end":205,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":24747,"byte_end":24754,"line_start":222,"line_end":222,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":36642,"byte_end":36648,"line_start":91,"line_end":91,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":37016,"byte_end":37022,"line_start":107,"line_end":107,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":37623,"byte_end":37629,"line_start":134,"line_end":134,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":38708,"byte_end":38711,"line_start":166,"line_end":166,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":38966,"byte_end":38969,"line_start":177,"line_end":177,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":39190,"byte_end":39197,"line_start":188,"line_end":188,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":39711,"byte_end":39718,"line_start":207,"line_end":207,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":40313,"byte_end":40321,"line_start":228,"line_end":228,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":40809,"byte_end":40819,"line_start":247,"line_end":247,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41295,"byte_end":41307,"line_start":264,"line_end":264,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41537,"byte_end":41549,"line_start":273,"line_end":273,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41779,"byte_end":41787,"line_start":282,"line_end":282,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41982,"byte_end":41990,"line_start":290,"line_end":290,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":42179,"byte_end":42182,"line_start":297,"line_end":297,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":80,"byte_end":82,"line_start":3,"line_end":3,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":92,"byte_end":98,"line_start":4,"line_end":4,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":110}},{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":108,"byte_end":122,"line_start":5,"line_end":5,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":165}},{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/lib.rs","byte_start":132,"byte_end":135,"line_start":6,"line_end":6,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":186}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":706,"byte_end":711,"line_start":13,"line_end":13,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":4865,"byte_end":4871,"line_start":147,"line_end":147,"column_start":30,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":37378},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":5668,"byte_end":5674,"line_start":177,"line_end":177,"column_start":46,"column_end":52},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":37530},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":6499,"byte_end":6505,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":6786,"byte_end":6789,"line_start":217,"line_end":217,"column_start":30,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":6769},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":9178,"byte_end":9181,"line_start":277,"line_end":277,"column_start":30,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":9461,"byte_end":9468,"line_start":289,"line_end":289,"column_start":30,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":1800},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":9764,"byte_end":9771,"line_start":301,"line_end":301,"column_start":33,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":10339,"byte_end":10347,"line_start":321,"line_end":321,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":10845,"byte_end":10855,"line_start":340,"line_end":340,"column_start":37,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":9568},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":11418,"byte_end":11430,"line_start":356,"line_end":356,"column_start":37,"column_end":49},"kind":{"Impl":{"id":11}},"from":{"krate":1,"index":9592},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":11723,"byte_end":11735,"line_start":366,"line_end":366,"column_start":37,"column_end":49},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":9595},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":12034,"byte_end":12042,"line_start":376,"line_end":376,"column_start":37,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":9622},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":12525,"byte_end":12533,"line_start":393,"line_end":393,"column_start":37,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":9625},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/de/mod.rs","byte_start":12992,"byte_end":12995,"line_start":409,"line_end":409,"column_start":33,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":21245,"byte_end":21248,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":23015,"byte_end":23021,"line_start":164,"line_end":164,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":37378},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":23629,"byte_end":23635,"line_start":184,"line_end":184,"column_start":41,"column_end":47},"kind":{"Impl":{"id":27}},"from":{"krate":2,"index":37530},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":24266,"byte_end":24269,"line_start":205,"line_end":205,"column_start":25,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":6769},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/schema.rs","byte_start":24747,"byte_end":24754,"line_start":222,"line_end":222,"column_start":28,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":36642,"byte_end":36648,"line_start":91,"line_end":91,"column_start":28,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":37378},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":37016,"byte_end":37022,"line_start":107,"line_end":107,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":2,"index":37530},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":37623,"byte_end":37629,"line_start":134,"line_end":134,"column_start":25,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":5,"index":7282},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":38708,"byte_end":38711,"line_start":166,"line_end":166,"column_start":28,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":38966,"byte_end":38969,"line_start":177,"line_end":177,"column_start":28,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":6769},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":39190,"byte_end":39197,"line_start":188,"line_end":188,"column_start":28,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":1,"index":1800},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":39711,"byte_end":39718,"line_start":207,"line_end":207,"column_start":31,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":40313,"byte_end":40321,"line_start":228,"line_end":228,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":1217},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":40809,"byte_end":40819,"line_start":247,"line_end":247,"column_start":35,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":9568},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41295,"byte_end":41307,"line_start":264,"line_end":264,"column_start":35,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":9592},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41537,"byte_end":41549,"line_start":273,"line_end":273,"column_start":35,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":1,"index":9595},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41779,"byte_end":41787,"line_start":282,"line_end":282,"column_start":35,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":9622},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":41982,"byte_end":41990,"line_start":290,"line_end":290,"column_start":35,"column_end":43},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":9625},"to":{"krate":0,"index":214}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/borsh-0.7.0/src/ser/mod.rs","byte_start":42179,"byte_end":42182,"line_start":297,"line_end":297,"column_start":53,"column_end":56},"kind":{"Impl":{"id":46}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":214}}]}