{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0","program":"/home/marcio/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","near_vm_logic","--edition=2018","/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"costs_counting\"","--cfg","feature=\"default\"","-C","metadata=e1ea2b84fe8ed1a5","-C","extra-filename=-e1ea2b84fe8ed1a5","--out-dir","/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps","-L","dependency=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps","--extern","base64=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libbase64-ddfd7e228e7728de.rmeta","--extern","bs58=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libbs58-694dea9a8e69c203.rmeta","--extern","byteorder=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libbyteorder-6cff13e263182f19.rmeta","--extern","near_runtime_fees=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libnear_runtime_fees-897237ddcd99dc54.rmeta","--extern","near_vm_errors=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libnear_vm_errors-74a34a4b011df231.rmeta","--extern","serde=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libserde-f900b6e661477103.rmeta","--extern","sha2=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libsha2-7890f0858ab978ee.rmeta","--extern","sha3=/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libsha3-bc2b7167b63a2402.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/marcio/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/marcio/blockchain_engineer/near/new-awesome-app/contract/target/rls/debug/deps/libnear_vm_logic-e1ea2b84fe8ed1a5.rmeta"},"prelude":{"crate_id":{"name":"near_vm_logic","disambiguator":[16992984354221131579,3582006815873170732]},"crate_root":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src","external_crates":[{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[526428811945659246,13385786431852093568]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","num":2,"id":{"name":"core","disambiguator":[4150165762619742282,10084428854705346699]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17154149902455954331,10787439630250540476]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3551889228217061522,18098948565341830907]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[616005194320102788,15921775685612583979]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4310295892305589745,11285303825786314436]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3247569189967614495,15966786433993657917]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15680994173287911211,8587509387955096358]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11719660851090472004,3429704230356133145]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17594861313346837805,7275947389262704147]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11399954785695891892,14851098529173350963]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12494985972155115308,9730871930189483612]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15532488949252110002,6117296861090759943]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[1804911290426314532,6689449841577915250]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[8479710970850627223,6852362994577870122]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12659285667184348883,16807697831197910537]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3876717150818575906,15525448869101162932]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","num":18,"id":{"name":"serde","disambiguator":[14727224076599150467,4061600906874926676]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","num":19,"id":{"name":"serde_derive","disambiguator":[4123331963961848088,12234722127218845924]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","num":20,"id":{"name":"near_vm_errors","disambiguator":[4847440217473383751,11190917315700668822]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","num":21,"id":{"name":"borsh","disambiguator":[7602794373605832025,15042717913599283710]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","num":22,"id":{"name":"borsh_derive","disambiguator":[16869764786505032177,12862934800151144214]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","num":23,"id":{"name":"near_rpc_error_macro","disambiguator":[8654507268143232261,14311061150886251367]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","num":24,"id":{"name":"near_runtime_fees","disambiguator":[1051955838192693007,15825084125598876559]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","num":25,"id":{"name":"num_rational","disambiguator":[10620158960140438447,17341415176772870530]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","num":26,"id":{"name":"num_bigint","disambiguator":[17344640198178369196,16630347277231154677]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","num":27,"id":{"name":"num_integer","disambiguator":[17221760042232882116,13970133470186184800]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","num":28,"id":{"name":"num_traits","disambiguator":[16257295423274124901,9877853585065119572]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":29,"id":{"name":"byteorder","disambiguator":[11511728884907686039,10352226345943294015]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":30,"id":{"name":"sha2","disambiguator":[5066831171948946143,6135090605032805460]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":31,"id":{"name":"block_buffer","disambiguator":[9861066061972863909,11014966111842379102]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":32,"id":{"name":"block_padding","disambiguator":[11347598195785849790,5342392964924192611]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":33,"id":{"name":"byte_tools","disambiguator":[6509630734129695950,8100302498682908125]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":34,"id":{"name":"generic_array","disambiguator":[510539500996699102,2235526122203124163]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":35,"id":{"name":"typenum","disambiguator":[6459932081943617401,1801159595425946597]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":36,"id":{"name":"fake_simd","disambiguator":[9620350524673416440,5256596828643687374]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":37,"id":{"name":"opaque_debug","disambiguator":[12496424331164021486,17960546159043270837]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":38,"id":{"name":"digest","disambiguator":[16169479128231989343,14409974006663046442]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":39,"id":{"name":"sha3","disambiguator":[11202740940435311636,14160923066131118916]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","num":40,"id":{"name":"keccak","disambiguator":[4974093081981906764,13197270908153658796]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","num":41,"id":{"name":"base64","disambiguator":[9222209610922826634,12479592141320931767]}},{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","num":42,"id":{"name":"bs58","disambiguator":[820607436928815405,16851212704611750734]}}],"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":0,"byte_end":497,"line_start":1,"line_end":19,"column_start":1,"column_end":40}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":574},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157899,"byte_end":157908,"line_start":137,"line_end":137,"column_start":37,"column_end":46},"alias_span":null,"name":"serialize","value":"","parent":{"krate":0,"index":579}},{"kind":"Use","ref_id":{"krate":0,"index":1271},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":150,"byte_end":161,"line_start":11,"line_end":11,"column_start":18,"column_end":29},"alias_span":null,"name":"ActionCosts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1154},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":163,"byte_end":171,"line_start":11,"line_end":11,"column_start":31,"column_end":39},"alias_span":null,"name":"ExtCosts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":947},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":173,"byte_end":187,"line_start":11,"line_end":11,"column_start":41,"column_end":55},"alias_span":null,"name":"ExtCostsConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":189,"byte_end":197,"line_start":11,"line_end":11,"column_start":57,"column_end":65},"alias_span":null,"name":"VMConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":199,"byte_end":205,"line_start":11,"line_end":11,"column_start":67,"column_end":73},"alias_span":null,"name":"VMKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":207,"byte_end":220,"line_start":11,"line_end":11,"column_start":75,"column_end":88},"alias_span":null,"name":"VMLimitConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1310},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":240,"byte_end":249,"line_start":12,"line_end":12,"column_start":18,"column_end":27},"alias_span":null,"name":"VMContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":274,"byte_end":282,"line_start":13,"line_end":13,"column_start":24,"column_end":32},"alias_span":null,"name":"External","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":284,"byte_end":294,"line_start":13,"line_end":13,"column_start":34,"column_end":44},"alias_span":null,"name":"MemoryLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":296,"byte_end":304,"line_start":13,"line_end":13,"column_start":46,"column_end":54},"alias_span":null,"name":"ValuePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":323,"byte_end":330,"line_start":14,"line_end":14,"column_start":17,"column_end":24},"alias_span":null,"name":"VMLogic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":332,"byte_end":341,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"alias_span":null,"name":"VMOutcome","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":630},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":369,"byte_end":378,"line_start":15,"line_end":15,"column_start":26,"column_end":35},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1407},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":380,"byte_end":392,"line_start":15,"line_end":15,"column_start":37,"column_end":49},"alias_span":null,"name":"VMLogicError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2501},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":410,"byte_end":420,"line_start":16,"line_end":16,"column_start":16,"column_end":26},"alias_span":null,"name":"ReturnData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1568},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":479,"byte_end":496,"line_start":19,"line_end":19,"column_start":22,"column_end":39},"alias_span":null,"name":"EXT_COSTS_COUNTER","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":0,"byte_end":497,"line_start":1,"line_end":19,"column_start":1,"column_end":40},"name":"","qualname":"::","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":53},{"krate":0,"index":83},{"krate":0,"index":133},{"krate":0,"index":190},{"krate":0,"index":398},{"krate":0,"index":477},{"krate":0,"index":596},{"krate":0,"index":629},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":695},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":754,"byte_end":760,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Wasmer","qualname":"::config::VMKind::Wasmer","value":"VMKind::Wasmer","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Wasmer VM.\n","sig":null,"attributes":[{"value":"/ Wasmer VM.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":735,"byte_end":749,"line_start":9,"line_end":9,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":787,"byte_end":795,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"Wasmtime","qualname":"::config::VMKind::Wasmtime","value":"VMKind::Wasmtime","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Wasmtime VM.\n","sig":null,"attributes":[{"value":"/ Wasmtime VM.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":766,"byte_end":782,"line_start":11,"line_end":11,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":694},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":722,"byte_end":728,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"VMKind","qualname":"::config::VMKind","value":"pub enum VMKind { Wasmer, Wasmtime, }","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1245,"byte_end":1253,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"VMConfig","qualname":"::config::VMConfig","value":"VMConfig { ext_costs, grow_mem_cost, regular_op_cost, limit_config }","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":753},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1300,"byte_end":1309,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"name":"ext_costs","qualname":"::config::VMConfig::ext_costs","value":"config::ExtCostsConfig","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Costs for runtime externals\n","sig":null,"attributes":[{"value":"/ Costs for runtime externals","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1260,"byte_end":1291,"line_start":34,"line_end":34,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":754},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1389,"byte_end":1402,"line_start":38,"line_end":38,"column_start":9,"column_end":22},"name":"grow_mem_cost","qualname":"::config::VMConfig::grow_mem_cost","value":"u32","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Gas cost of a growing memory by single page.\n","sig":null,"attributes":[{"value":"/ Gas cost of a growing memory by single page.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1332,"byte_end":1380,"line_start":37,"line_end":37,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":755},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1458,"byte_end":1473,"line_start":40,"line_end":40,"column_start":9,"column_end":24},"name":"regular_op_cost","qualname":"::config::VMConfig::regular_op_cost","value":"u32","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Gas cost of a regular operation.\n","sig":null,"attributes":[{"value":"/ Gas cost of a regular operation.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1413,"byte_end":1449,"line_start":39,"line_end":39,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":756},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1534,"byte_end":1546,"line_start":43,"line_end":43,"column_start":9,"column_end":21},"name":"limit_config","qualname":"::config::VMConfig::limit_config","value":"config::VMLimitConfig","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Describes limits for VM and Runtime.\n","sig":null,"attributes":[{"value":"/ Describes limits for VM and Runtime.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1485,"byte_end":1525,"line_start":42,"line_end":42,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1687,"byte_end":1700,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"VMLimitConfig","qualname":"::config::VMLimitConfig","value":"VMLimitConfig { max_gas_burnt, max_gas_burnt_view, max_stack_height, initial_memory_pages, max_memory_pages, registers_memory_limit, max_register_size, max_number_registers, max_number_logs, max_total_log_length, max_total_prepaid_gas, max_actions_per_receipt, max_number_bytes_method_names, max_length_method_name, max_arguments_length, max_length_returned_data, max_contract_size, max_length_storage_key, max_length_storage_value, max_promises_per_function_call_action, max_number_input_data_dependencies }","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" Describes limits for VM and Runtime.\n","sig":null,"attributes":[{"value":"/ Describes limits for VM and Runtime.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1566,"byte_end":1606,"line_start":46,"line_end":46,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":825},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1791,"byte_end":1804,"line_start":50,"line_end":50,"column_start":9,"column_end":22},"name":"max_gas_burnt","qualname":"::config::VMLimitConfig::max_gas_burnt","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max amount of gas that can be used, excluding gas attached to promises.\n","sig":null,"attributes":[{"value":"/ Max amount of gas that can be used, excluding gas attached to promises.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1707,"byte_end":1782,"line_start":49,"line_end":49,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":826},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1858,"byte_end":1876,"line_start":52,"line_end":52,"column_start":9,"column_end":27},"name":"max_gas_burnt_view","qualname":"::config::VMLimitConfig::max_gas_burnt_view","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max burnt gas per view method.\n","sig":null,"attributes":[{"value":"/ Max burnt gas per view method.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1815,"byte_end":1849,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":827},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2066,"byte_end":2082,"line_start":58,"line_end":58,"column_start":9,"column_end":25},"name":"max_stack_height","qualname":"::config::VMLimitConfig::max_stack_height","value":"u32","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" How tall the stack is allowed to grow?","sig":null,"attributes":[{"value":"/ How tall the stack is allowed to grow?","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1888,"byte_end":1930,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1935,"byte_end":1938,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ See https://wiki.parity.io/WebAssembly-StackHeight to find out","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":1943,"byte_end":2009,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/ how the stack frame cost is calculated.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2014,"byte_end":2057,"line_start":57,"line_end":57,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":828},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2233,"byte_end":2253,"line_start":62,"line_end":62,"column_start":9,"column_end":29},"name":"initial_memory_pages","qualname":"::config::VMLimitConfig::initial_memory_pages","value":"u32","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" The initial number of memory pages.\n NOTE: It's not a limiter itself, but it's a value we use for initial_memory_pages.\n","sig":null,"attributes":[{"value":"/ The initial number of memory pages.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2094,"byte_end":2133,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ NOTE: It's not a limiter itself, but it's a value we use for initial_memory_pages.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2138,"byte_end":2224,"line_start":61,"line_end":61,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":829},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2359,"byte_end":2375,"line_start":65,"line_end":65,"column_start":9,"column_end":25},"name":"max_memory_pages","qualname":"::config::VMLimitConfig::max_memory_pages","value":"u32","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" What is the maximal memory pages amount is allowed to have for\n a contract.\n","sig":null,"attributes":[{"value":"/ What is the maximal memory pages amount is allowed to have for","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2264,"byte_end":2330,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ a contract.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2335,"byte_end":2350,"line_start":64,"line_end":64,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":830},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2434,"byte_end":2456,"line_start":68,"line_end":68,"column_start":9,"column_end":31},"name":"registers_memory_limit","qualname":"::config::VMLimitConfig::registers_memory_limit","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Limit of memory used by registers.\n","sig":null,"attributes":[{"value":"/ Limit of memory used by registers.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2387,"byte_end":2425,"line_start":67,"line_end":67,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":831},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2544,"byte_end":2561,"line_start":70,"line_end":70,"column_start":9,"column_end":26},"name":"max_register_size","qualname":"::config::VMLimitConfig::max_register_size","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Maximum number of bytes that can be stored in a single register.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes that can be stored in a single register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2467,"byte_end":2535,"line_start":69,"line_end":69,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":832},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2645,"byte_end":2665,"line_start":72,"line_end":72,"column_start":9,"column_end":29},"name":"max_number_registers","qualname":"::config::VMLimitConfig::max_number_registers","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Maximum number of registers that can be used simultaneously.\n","sig":null,"attributes":[{"value":"/ Maximum number of registers that can be used simultaneously.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2572,"byte_end":2636,"line_start":71,"line_end":71,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":833},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2720,"byte_end":2735,"line_start":75,"line_end":75,"column_start":9,"column_end":24},"name":"max_number_logs","qualname":"::config::VMLimitConfig::max_number_logs","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Maximum number of log entries.\n","sig":null,"attributes":[{"value":"/ Maximum number of log entries.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2677,"byte_end":2711,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":834},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2809,"byte_end":2829,"line_start":77,"line_end":77,"column_start":9,"column_end":29},"name":"max_total_log_length","qualname":"::config::VMLimitConfig::max_total_log_length","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Maximum total length in bytes of all log messages.\n","sig":null,"attributes":[{"value":"/ Maximum total length in bytes of all log messages.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2746,"byte_end":2800,"line_start":76,"line_end":76,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":835},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2918,"byte_end":2939,"line_start":80,"line_end":80,"column_start":9,"column_end":30},"name":"max_total_prepaid_gas","qualname":"::config::VMLimitConfig::max_total_prepaid_gas","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max total prepaid gas for all function call actions per receipt.\n","sig":null,"attributes":[{"value":"/ Max total prepaid gas for all function call actions per receipt.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2841,"byte_end":2909,"line_start":79,"line_end":79,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":836},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2998,"byte_end":3021,"line_start":83,"line_end":83,"column_start":9,"column_end":32},"name":"max_actions_per_receipt","qualname":"::config::VMLimitConfig::max_actions_per_receipt","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max number of actions per receipt.\n","sig":null,"attributes":[{"value":"/ Max number of actions per receipt.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":2951,"byte_end":2989,"line_start":82,"line_end":82,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":837},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3166,"byte_end":3195,"line_start":86,"line_end":86,"column_start":9,"column_end":38},"name":"max_number_bytes_method_names","qualname":"::config::VMLimitConfig::max_number_bytes_method_names","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max total length of all method names (including terminating character) for a function call\n permission access key.\n","sig":null,"attributes":[{"value":"/ Max total length of all method names (including terminating character) for a function call","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3032,"byte_end":3126,"line_start":84,"line_end":84,"column_start":5,"column_end":99}},{"value":"/ permission access key.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3131,"byte_end":3157,"line_start":85,"line_end":85,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":838},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3281,"byte_end":3303,"line_start":88,"line_end":88,"column_start":9,"column_end":31},"name":"max_length_method_name","qualname":"::config::VMLimitConfig::max_length_method_name","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max length of any method name (without terminating character).\n","sig":null,"attributes":[{"value":"/ Max length of any method name (without terminating character).","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3206,"byte_end":3272,"line_start":87,"line_end":87,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":839},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3377,"byte_end":3397,"line_start":90,"line_end":90,"column_start":9,"column_end":29},"name":"max_arguments_length","qualname":"::config::VMLimitConfig::max_arguments_length","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max length of arguments in a function call action.\n","sig":null,"attributes":[{"value":"/ Max length of arguments in a function call action.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3314,"byte_end":3368,"line_start":89,"line_end":89,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":840},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3448,"byte_end":3472,"line_start":92,"line_end":92,"column_start":9,"column_end":33},"name":"max_length_returned_data","qualname":"::config::VMLimitConfig::max_length_returned_data","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max length of returned data\n","sig":null,"attributes":[{"value":"/ Max length of returned data","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3408,"byte_end":3439,"line_start":91,"line_end":91,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":841},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3513,"byte_end":3530,"line_start":94,"line_end":94,"column_start":9,"column_end":26},"name":"max_contract_size","qualname":"::config::VMLimitConfig::max_contract_size","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max contract size\n","sig":null,"attributes":[{"value":"/ Max contract size","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3483,"byte_end":3504,"line_start":93,"line_end":93,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":842},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3574,"byte_end":3596,"line_start":96,"line_end":96,"column_start":9,"column_end":31},"name":"max_length_storage_key","qualname":"::config::VMLimitConfig::max_length_storage_key","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max storage key size\n","sig":null,"attributes":[{"value":"/ Max storage key size","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3541,"byte_end":3565,"line_start":95,"line_end":95,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":843},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3642,"byte_end":3666,"line_start":98,"line_end":98,"column_start":9,"column_end":33},"name":"max_length_storage_value","qualname":"::config::VMLimitConfig::max_length_storage_value","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max storage value size\n","sig":null,"attributes":[{"value":"/ Max storage value size","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3607,"byte_end":3633,"line_start":97,"line_end":97,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":844},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3744,"byte_end":3781,"line_start":100,"line_end":100,"column_start":9,"column_end":46},"name":"max_promises_per_function_call_action","qualname":"::config::VMLimitConfig::max_promises_per_function_call_action","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max number of promises that a function call can create\n","sig":null,"attributes":[{"value":"/ Max number of promises that a function call can create","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3677,"byte_end":3735,"line_start":99,"line_end":99,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":845},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3842,"byte_end":3876,"line_start":102,"line_end":102,"column_start":9,"column_end":43},"name":"max_number_input_data_dependencies","qualname":"::config::VMLimitConfig::max_number_input_data_dependencies","value":"u64","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Max number of input data dependencies\n","sig":null,"attributes":[{"value":"/ Max number of input data dependencies","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3792,"byte_end":3833,"line_start":101,"line_end":101,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4297,"byte_end":4312,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"non_crypto_hash","qualname":"<VMConfig>::non_crypto_hash","value":"pub fn non_crypto_hash(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Computes non-cryptographically-proof hash. The computation is fast but not cryptographically\n secure.\n","sig":null,"attributes":[{"value":"/ Computes non-cryptographically-proof hash. The computation is fast but not cryptographically","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4173,"byte_end":4269,"line_start":117,"line_end":117,"column_start":5,"column_end":101}},{"value":"/ secure.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4274,"byte_end":4285,"line_start":118,"line_end":118,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4435,"byte_end":4439,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"free","qualname":"<VMConfig>::free","value":"pub fn free() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":947},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7192,"byte_end":7206,"line_start":188,"line_end":188,"column_start":12,"column_end":26},"name":"ExtCostsConfig","qualname":"::config::ExtCostsConfig","value":"ExtCostsConfig { base, contract_compile_base, contract_compile_bytes, read_memory_base, read_memory_byte, write_memory_base, write_memory_byte, read_register_base, read_register_byte, write_register_base, write_register_byte, utf8_decoding_base, utf8_decoding_byte, utf16_decoding_base, utf16_decoding_byte, sha256_base, sha256_byte, keccak256_base, keccak256_byte, keccak512_base, keccak512_byte, log_base, log_byte, storage_write_base, storage_write_key_byte, storage_write_value_byte, storage_write_evicted_byte, storage_read_base, storage_read_key_byte, storage_read_value_byte, storage_remove_base, storage_remove_key_byte, storage_remove_ret_value_byte, storage_has_key_base, storage_has_key_byte, storage_iter_create_prefix_base, storage_iter_create_prefix_byte, storage_iter_create_range_base, storage_iter_create_from_byte, storage_iter_create_to_byte, storage_iter_next_base, storage_iter_next_key_byte, storage_iter_next_value_byte, touching_trie_node, promise_and_base, promise_and_per_promise, promise_return, validator_stake_base, validator_total_stake_base }","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":948},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7264,"byte_end":7268,"line_start":190,"line_end":190,"column_start":9,"column_end":13},"name":"base","qualname":"::config::ExtCostsConfig::base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost for calling a host function.\n","sig":null,"attributes":[{"value":"/ Base cost for calling a host function.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7213,"byte_end":7255,"line_start":189,"line_end":189,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":949},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7336,"byte_end":7357,"line_start":193,"line_end":193,"column_start":9,"column_end":30},"name":"contract_compile_base","qualname":"::config::ExtCostsConfig::contract_compile_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost of loading and compiling contract\n","sig":null,"attributes":[{"value":"/ Base cost of loading and compiling contract","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7280,"byte_end":7327,"line_start":192,"line_end":192,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":950},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7431,"byte_end":7453,"line_start":195,"line_end":195,"column_start":9,"column_end":31},"name":"contract_compile_bytes","qualname":"::config::ExtCostsConfig::contract_compile_bytes","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of the execution to load and compile contract\n","sig":null,"attributes":[{"value":"/ Cost of the execution to load and compile contract","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7368,"byte_end":7422,"line_start":194,"line_end":194,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":951},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7509,"byte_end":7525,"line_start":198,"line_end":198,"column_start":9,"column_end":25},"name":"read_memory_base","qualname":"::config::ExtCostsConfig::read_memory_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost for guest memory read\n","sig":null,"attributes":[{"value":"/ Base cost for guest memory read","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7465,"byte_end":7500,"line_start":197,"line_end":197,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":952},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7575,"byte_end":7591,"line_start":200,"line_end":200,"column_start":9,"column_end":25},"name":"read_memory_byte","qualname":"::config::ExtCostsConfig::read_memory_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for guest memory read\n","sig":null,"attributes":[{"value":"/ Cost for guest memory read","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7536,"byte_end":7566,"line_start":199,"line_end":199,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":953},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7648,"byte_end":7665,"line_start":203,"line_end":203,"column_start":9,"column_end":26},"name":"write_memory_base","qualname":"::config::ExtCostsConfig::write_memory_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost for guest memory write\n","sig":null,"attributes":[{"value":"/ Base cost for guest memory write","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7603,"byte_end":7639,"line_start":202,"line_end":202,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":954},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7725,"byte_end":7742,"line_start":205,"line_end":205,"column_start":9,"column_end":26},"name":"write_memory_byte","qualname":"::config::ExtCostsConfig::write_memory_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for guest memory write per byte\n","sig":null,"attributes":[{"value":"/ Cost for guest memory write per byte","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7676,"byte_end":7716,"line_start":204,"line_end":204,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":955},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7802,"byte_end":7820,"line_start":208,"line_end":208,"column_start":9,"column_end":27},"name":"read_register_base","qualname":"::config::ExtCostsConfig::read_register_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost for reading from register\n","sig":null,"attributes":[{"value":"/ Base cost for reading from register","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7754,"byte_end":7793,"line_start":207,"line_end":207,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":956},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7879,"byte_end":7897,"line_start":210,"line_end":210,"column_start":9,"column_end":27},"name":"read_register_byte","qualname":"::config::ExtCostsConfig::read_register_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for reading byte from register\n","sig":null,"attributes":[{"value":"/ Cost for reading byte from register","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7831,"byte_end":7870,"line_start":209,"line_end":209,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":957},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7957,"byte_end":7976,"line_start":213,"line_end":213,"column_start":9,"column_end":28},"name":"write_register_base","qualname":"::config::ExtCostsConfig::write_register_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost for writing into register\n","sig":null,"attributes":[{"value":"/ Base cost for writing into register","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7909,"byte_end":7948,"line_start":212,"line_end":212,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":958},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8035,"byte_end":8054,"line_start":215,"line_end":215,"column_start":9,"column_end":28},"name":"write_register_byte","qualname":"::config::ExtCostsConfig::write_register_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for writing byte into register\n","sig":null,"attributes":[{"value":"/ Cost for writing byte into register","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":7987,"byte_end":8026,"line_start":214,"line_end":214,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":959},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8106,"byte_end":8124,"line_start":218,"line_end":218,"column_start":9,"column_end":27},"name":"utf8_decoding_base","qualname":"::config::ExtCostsConfig::utf8_decoding_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost of decoding utf8.\n","sig":null,"attributes":[{"value":"/ Base cost of decoding utf8.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8066,"byte_end":8097,"line_start":217,"line_end":217,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":960},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8178,"byte_end":8196,"line_start":220,"line_end":220,"column_start":9,"column_end":27},"name":"utf8_decoding_byte","qualname":"::config::ExtCostsConfig::utf8_decoding_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost per bye of decoding utf8.\n","sig":null,"attributes":[{"value":"/ Cost per bye of decoding utf8.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8135,"byte_end":8169,"line_start":219,"line_end":219,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":961},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8249,"byte_end":8268,"line_start":223,"line_end":223,"column_start":9,"column_end":28},"name":"utf16_decoding_base","qualname":"::config::ExtCostsConfig::utf16_decoding_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Base cost of decoding utf16.\n","sig":null,"attributes":[{"value":"/ Base cost of decoding utf16.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8208,"byte_end":8240,"line_start":222,"line_end":222,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":962},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8323,"byte_end":8342,"line_start":225,"line_end":225,"column_start":9,"column_end":28},"name":"utf16_decoding_byte","qualname":"::config::ExtCostsConfig::utf16_decoding_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost per bye of decoding utf16.\n","sig":null,"attributes":[{"value":"/ Cost per bye of decoding utf16.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8279,"byte_end":8314,"line_start":224,"line_end":224,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":963},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8394,"byte_end":8405,"line_start":228,"line_end":228,"column_start":9,"column_end":20},"name":"sha256_base","qualname":"::config::ExtCostsConfig::sha256_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of getting sha256 base\n","sig":null,"attributes":[{"value":"/ Cost of getting sha256 base","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8354,"byte_end":8385,"line_start":227,"line_end":227,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":964},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8460,"byte_end":8471,"line_start":230,"line_end":230,"column_start":9,"column_end":20},"name":"sha256_byte","qualname":"::config::ExtCostsConfig::sha256_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of getting sha256 per byte\n","sig":null,"attributes":[{"value":"/ Cost of getting sha256 per byte","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8416,"byte_end":8451,"line_start":229,"line_end":229,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":965},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8523,"byte_end":8537,"line_start":233,"line_end":233,"column_start":9,"column_end":23},"name":"keccak256_base","qualname":"::config::ExtCostsConfig::keccak256_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of getting sha256 base\n","sig":null,"attributes":[{"value":"/ Cost of getting sha256 base","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8483,"byte_end":8514,"line_start":232,"line_end":232,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":966},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8592,"byte_end":8606,"line_start":235,"line_end":235,"column_start":9,"column_end":23},"name":"keccak256_byte","qualname":"::config::ExtCostsConfig::keccak256_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of getting sha256 per byte\n","sig":null,"attributes":[{"value":"/ Cost of getting sha256 per byte","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8548,"byte_end":8583,"line_start":234,"line_end":234,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":967},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8658,"byte_end":8672,"line_start":238,"line_end":238,"column_start":9,"column_end":23},"name":"keccak512_base","qualname":"::config::ExtCostsConfig::keccak512_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of getting sha256 base\n","sig":null,"attributes":[{"value":"/ Cost of getting sha256 base","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8618,"byte_end":8649,"line_start":237,"line_end":237,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":968},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8727,"byte_end":8741,"line_start":240,"line_end":240,"column_start":9,"column_end":23},"name":"keccak512_byte","qualname":"::config::ExtCostsConfig::keccak512_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of getting sha256 per byte\n","sig":null,"attributes":[{"value":"/ Cost of getting sha256 per byte","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8683,"byte_end":8718,"line_start":239,"line_end":239,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":969},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8791,"byte_end":8799,"line_start":243,"line_end":243,"column_start":9,"column_end":17},"name":"log_base","qualname":"::config::ExtCostsConfig::log_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for calling logging.\n","sig":null,"attributes":[{"value":"/ Cost for calling logging.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8753,"byte_end":8782,"line_start":242,"line_end":242,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":970},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8848,"byte_end":8856,"line_start":245,"line_end":245,"column_start":9,"column_end":17},"name":"log_byte","qualname":"::config::ExtCostsConfig::log_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for logging per byte\n","sig":null,"attributes":[{"value":"/ Cost for logging per byte","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8810,"byte_end":8839,"line_start":244,"line_end":244,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":971},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8982,"byte_end":9000,"line_start":251,"line_end":251,"column_start":9,"column_end":27},"name":"storage_write_base","qualname":"::config::ExtCostsConfig::storage_write_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie write key base cost\n","sig":null,"attributes":[{"value":"/ Storage trie write key base cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":8937,"byte_end":8973,"line_start":250,"line_end":250,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":972},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9060,"byte_end":9082,"line_start":253,"line_end":253,"column_start":9,"column_end":31},"name":"storage_write_key_byte","qualname":"::config::ExtCostsConfig::storage_write_key_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie write key per byte cost\n","sig":null,"attributes":[{"value":"/ Storage trie write key per byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9011,"byte_end":9051,"line_start":252,"line_end":252,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":973},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9144,"byte_end":9168,"line_start":255,"line_end":255,"column_start":9,"column_end":33},"name":"storage_write_value_byte","qualname":"::config::ExtCostsConfig::storage_write_value_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie write value per byte cost\n","sig":null,"attributes":[{"value":"/ Storage trie write value per byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9093,"byte_end":9135,"line_start":254,"line_end":254,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":974},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9242,"byte_end":9268,"line_start":257,"line_end":257,"column_start":9,"column_end":35},"name":"storage_write_evicted_byte","qualname":"::config::ExtCostsConfig::storage_write_evicted_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie write cost per byte of evicted value.\n","sig":null,"attributes":[{"value":"/ Storage trie write cost per byte of evicted value.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9179,"byte_end":9233,"line_start":256,"line_end":256,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":975},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9324,"byte_end":9341,"line_start":260,"line_end":260,"column_start":9,"column_end":26},"name":"storage_read_base","qualname":"::config::ExtCostsConfig::storage_read_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie read key base cost\n","sig":null,"attributes":[{"value":"/ Storage trie read key base cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9280,"byte_end":9315,"line_start":259,"line_end":259,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":976},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9400,"byte_end":9421,"line_start":262,"line_end":262,"column_start":9,"column_end":30},"name":"storage_read_key_byte","qualname":"::config::ExtCostsConfig::storage_read_key_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie read key per byte cost\n","sig":null,"attributes":[{"value":"/ Storage trie read key per byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9352,"byte_end":9391,"line_start":261,"line_end":261,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":977},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9487,"byte_end":9510,"line_start":264,"line_end":264,"column_start":9,"column_end":32},"name":"storage_read_value_byte","qualname":"::config::ExtCostsConfig::storage_read_value_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie read value cost per byte cost\n","sig":null,"attributes":[{"value":"/ Storage trie read value cost per byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9432,"byte_end":9478,"line_start":263,"line_end":263,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":978},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9565,"byte_end":9584,"line_start":267,"line_end":267,"column_start":9,"column_end":28},"name":"storage_remove_base","qualname":"::config::ExtCostsConfig::storage_remove_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Remove key from trie base cost\n","sig":null,"attributes":[{"value":"/ Remove key from trie base cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9522,"byte_end":9556,"line_start":266,"line_end":266,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":979},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9642,"byte_end":9665,"line_start":269,"line_end":269,"column_start":9,"column_end":32},"name":"storage_remove_key_byte","qualname":"::config::ExtCostsConfig::storage_remove_key_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Remove key from trie per byte cost\n","sig":null,"attributes":[{"value":"/ Remove key from trie per byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9595,"byte_end":9633,"line_start":268,"line_end":268,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":980},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9729,"byte_end":9758,"line_start":271,"line_end":271,"column_start":9,"column_end":38},"name":"storage_remove_ret_value_byte","qualname":"::config::ExtCostsConfig::storage_remove_ret_value_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Remove key from trie ret value byte cost\n","sig":null,"attributes":[{"value":"/ Remove key from trie ret value byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9676,"byte_end":9720,"line_start":270,"line_end":270,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":981},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9829,"byte_end":9849,"line_start":274,"line_end":274,"column_start":9,"column_end":29},"name":"storage_has_key_base","qualname":"::config::ExtCostsConfig::storage_has_key_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie check for key existence cost base\n","sig":null,"attributes":[{"value":"/ Storage trie check for key existence cost base","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9770,"byte_end":9820,"line_start":273,"line_end":273,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":982},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9922,"byte_end":9942,"line_start":276,"line_end":276,"column_start":9,"column_end":29},"name":"storage_has_key_byte","qualname":"::config::ExtCostsConfig::storage_has_key_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Storage trie check for key existence per key byte\n","sig":null,"attributes":[{"value":"/ Storage trie check for key existence per key byte","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9860,"byte_end":9913,"line_start":275,"line_end":275,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":983},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10004,"byte_end":10035,"line_start":279,"line_end":279,"column_start":9,"column_end":40},"name":"storage_iter_create_prefix_base","qualname":"::config::ExtCostsConfig::storage_iter_create_prefix_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Create trie prefix iterator cost base\n","sig":null,"attributes":[{"value":"/ Create trie prefix iterator cost base","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":9954,"byte_end":9995,"line_start":278,"line_end":278,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":984},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10101,"byte_end":10132,"line_start":281,"line_end":281,"column_start":9,"column_end":40},"name":"storage_iter_create_prefix_byte","qualname":"::config::ExtCostsConfig::storage_iter_create_prefix_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Create trie prefix iterator cost per byte.\n","sig":null,"attributes":[{"value":"/ Create trie prefix iterator cost per byte.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10046,"byte_end":10092,"line_start":280,"line_end":280,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":985},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10193,"byte_end":10223,"line_start":284,"line_end":284,"column_start":9,"column_end":39},"name":"storage_iter_create_range_base","qualname":"::config::ExtCostsConfig::storage_iter_create_range_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Create trie range iterator cost base\n","sig":null,"attributes":[{"value":"/ Create trie range iterator cost base","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10144,"byte_end":10184,"line_start":283,"line_end":283,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":986},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10300,"byte_end":10329,"line_start":286,"line_end":286,"column_start":9,"column_end":38},"name":"storage_iter_create_from_byte","qualname":"::config::ExtCostsConfig::storage_iter_create_from_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Create trie range iterator cost per byte of from key.\n","sig":null,"attributes":[{"value":"/ Create trie range iterator cost per byte of from key.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10234,"byte_end":10291,"line_start":285,"line_end":285,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":987},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10404,"byte_end":10431,"line_start":288,"line_end":288,"column_start":9,"column_end":36},"name":"storage_iter_create_to_byte","qualname":"::config::ExtCostsConfig::storage_iter_create_to_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Create trie range iterator cost per byte of to key.\n","sig":null,"attributes":[{"value":"/ Create trie range iterator cost per byte of to key.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10340,"byte_end":10395,"line_start":287,"line_end":287,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":988},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10487,"byte_end":10509,"line_start":291,"line_end":291,"column_start":9,"column_end":31},"name":"storage_iter_next_base","qualname":"::config::ExtCostsConfig::storage_iter_next_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Trie iterator per key base cost\n","sig":null,"attributes":[{"value":"/ Trie iterator per key base cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10443,"byte_end":10478,"line_start":290,"line_end":290,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10565,"byte_end":10591,"line_start":293,"line_end":293,"column_start":9,"column_end":35},"name":"storage_iter_next_key_byte","qualname":"::config::ExtCostsConfig::storage_iter_next_key_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Trie iterator next key byte cost\n","sig":null,"attributes":[{"value":"/ Trie iterator next key byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10520,"byte_end":10556,"line_start":292,"line_end":292,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":990},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10647,"byte_end":10675,"line_start":295,"line_end":295,"column_start":9,"column_end":37},"name":"storage_iter_next_value_byte","qualname":"::config::ExtCostsConfig::storage_iter_next_value_byte","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Trie iterator next key byte cost\n","sig":null,"attributes":[{"value":"/ Trie iterator next key byte cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10602,"byte_end":10638,"line_start":294,"line_end":294,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":991},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10726,"byte_end":10744,"line_start":298,"line_end":298,"column_start":9,"column_end":27},"name":"touching_trie_node","qualname":"::config::ExtCostsConfig::touching_trie_node","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost per touched trie node\n","sig":null,"attributes":[{"value":"/ Cost per touched trie node","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10687,"byte_end":10717,"line_start":297,"line_end":297,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":992},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10866,"byte_end":10882,"line_start":304,"line_end":304,"column_start":9,"column_end":25},"name":"promise_and_base","qualname":"::config::ExtCostsConfig::promise_and_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for calling promise_and\n","sig":null,"attributes":[{"value":"/ Cost for calling promise_and","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10825,"byte_end":10857,"line_start":303,"line_end":303,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":993},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10951,"byte_end":10974,"line_start":306,"line_end":306,"column_start":9,"column_end":32},"name":"promise_and_per_promise","qualname":"::config::ExtCostsConfig::promise_and_per_promise","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for calling promise_and for each promise\n","sig":null,"attributes":[{"value":"/ Cost for calling promise_and for each promise","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10893,"byte_end":10942,"line_start":305,"line_end":305,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":994},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":11029,"byte_end":11043,"line_start":308,"line_end":308,"column_start":9,"column_end":23},"name":"promise_return","qualname":"::config::ExtCostsConfig::promise_return","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost for calling promise_return\n","sig":null,"attributes":[{"value":"/ Cost for calling promise_return","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":10985,"byte_end":11020,"line_start":307,"line_end":307,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":995},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":11173,"byte_end":11193,"line_start":314,"line_end":314,"column_start":9,"column_end":29},"name":"validator_stake_base","qualname":"::config::ExtCostsConfig::validator_stake_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of calling `validator_stake`.\n","sig":null,"attributes":[{"value":"/ Cost of calling `validator_stake`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":11126,"byte_end":11164,"line_start":313,"line_end":313,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":996},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":11257,"byte_end":11283,"line_start":316,"line_end":316,"column_start":9,"column_end":35},"name":"validator_total_stake_base","qualname":"::config::ExtCostsConfig::validator_total_stake_base","value":"u64","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Cost of calling `validator_total_stake`.\n","sig":null,"attributes":[{"value":"/ Cost of calling `validator_total_stake`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":11204,"byte_end":11248,"line_start":315,"line_end":315,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1155},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16730,"byte_end":16734,"line_start":439,"line_end":439,"column_start":5,"column_end":9},"name":"base","qualname":"::config::ExtCosts::base","value":"ExtCosts::base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16740,"byte_end":16761,"line_start":440,"line_end":440,"column_start":5,"column_end":26},"name":"contract_compile_base","qualname":"::config::ExtCosts::contract_compile_base","value":"ExtCosts::contract_compile_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1159},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16767,"byte_end":16789,"line_start":441,"line_end":441,"column_start":5,"column_end":27},"name":"contract_compile_bytes","qualname":"::config::ExtCosts::contract_compile_bytes","value":"ExtCosts::contract_compile_bytes","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1161},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16795,"byte_end":16811,"line_start":442,"line_end":442,"column_start":5,"column_end":21},"name":"read_memory_base","qualname":"::config::ExtCosts::read_memory_base","value":"ExtCosts::read_memory_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1163},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16817,"byte_end":16833,"line_start":443,"line_end":443,"column_start":5,"column_end":21},"name":"read_memory_byte","qualname":"::config::ExtCosts::read_memory_byte","value":"ExtCosts::read_memory_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1165},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16839,"byte_end":16856,"line_start":444,"line_end":444,"column_start":5,"column_end":22},"name":"write_memory_base","qualname":"::config::ExtCosts::write_memory_base","value":"ExtCosts::write_memory_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1167},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16862,"byte_end":16879,"line_start":445,"line_end":445,"column_start":5,"column_end":22},"name":"write_memory_byte","qualname":"::config::ExtCosts::write_memory_byte","value":"ExtCosts::write_memory_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1169},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16885,"byte_end":16903,"line_start":446,"line_end":446,"column_start":5,"column_end":23},"name":"read_register_base","qualname":"::config::ExtCosts::read_register_base","value":"ExtCosts::read_register_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1171},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16909,"byte_end":16927,"line_start":447,"line_end":447,"column_start":5,"column_end":23},"name":"read_register_byte","qualname":"::config::ExtCosts::read_register_byte","value":"ExtCosts::read_register_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1173},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16933,"byte_end":16952,"line_start":448,"line_end":448,"column_start":5,"column_end":24},"name":"write_register_base","qualname":"::config::ExtCosts::write_register_base","value":"ExtCosts::write_register_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1175},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16958,"byte_end":16977,"line_start":449,"line_end":449,"column_start":5,"column_end":24},"name":"write_register_byte","qualname":"::config::ExtCosts::write_register_byte","value":"ExtCosts::write_register_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1177},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16983,"byte_end":17001,"line_start":450,"line_end":450,"column_start":5,"column_end":23},"name":"utf8_decoding_base","qualname":"::config::ExtCosts::utf8_decoding_base","value":"ExtCosts::utf8_decoding_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1179},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17007,"byte_end":17025,"line_start":451,"line_end":451,"column_start":5,"column_end":23},"name":"utf8_decoding_byte","qualname":"::config::ExtCosts::utf8_decoding_byte","value":"ExtCosts::utf8_decoding_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1181},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17031,"byte_end":17050,"line_start":452,"line_end":452,"column_start":5,"column_end":24},"name":"utf16_decoding_base","qualname":"::config::ExtCosts::utf16_decoding_base","value":"ExtCosts::utf16_decoding_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1183},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17056,"byte_end":17075,"line_start":453,"line_end":453,"column_start":5,"column_end":24},"name":"utf16_decoding_byte","qualname":"::config::ExtCosts::utf16_decoding_byte","value":"ExtCosts::utf16_decoding_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17081,"byte_end":17092,"line_start":454,"line_end":454,"column_start":5,"column_end":16},"name":"sha256_base","qualname":"::config::ExtCosts::sha256_base","value":"ExtCosts::sha256_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1187},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17098,"byte_end":17109,"line_start":455,"line_end":455,"column_start":5,"column_end":16},"name":"sha256_byte","qualname":"::config::ExtCosts::sha256_byte","value":"ExtCosts::sha256_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17115,"byte_end":17129,"line_start":456,"line_end":456,"column_start":5,"column_end":19},"name":"keccak256_base","qualname":"::config::ExtCosts::keccak256_base","value":"ExtCosts::keccak256_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17135,"byte_end":17149,"line_start":457,"line_end":457,"column_start":5,"column_end":19},"name":"keccak256_byte","qualname":"::config::ExtCosts::keccak256_byte","value":"ExtCosts::keccak256_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17155,"byte_end":17169,"line_start":458,"line_end":458,"column_start":5,"column_end":19},"name":"keccak512_base","qualname":"::config::ExtCosts::keccak512_base","value":"ExtCosts::keccak512_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1195},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17175,"byte_end":17189,"line_start":459,"line_end":459,"column_start":5,"column_end":19},"name":"keccak512_byte","qualname":"::config::ExtCosts::keccak512_byte","value":"ExtCosts::keccak512_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17195,"byte_end":17203,"line_start":460,"line_end":460,"column_start":5,"column_end":13},"name":"log_base","qualname":"::config::ExtCosts::log_base","value":"ExtCosts::log_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17209,"byte_end":17217,"line_start":461,"line_end":461,"column_start":5,"column_end":13},"name":"log_byte","qualname":"::config::ExtCosts::log_byte","value":"ExtCosts::log_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17223,"byte_end":17241,"line_start":462,"line_end":462,"column_start":5,"column_end":23},"name":"storage_write_base","qualname":"::config::ExtCosts::storage_write_base","value":"ExtCosts::storage_write_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1203},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17247,"byte_end":17269,"line_start":463,"line_end":463,"column_start":5,"column_end":27},"name":"storage_write_key_byte","qualname":"::config::ExtCosts::storage_write_key_byte","value":"ExtCosts::storage_write_key_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17275,"byte_end":17299,"line_start":464,"line_end":464,"column_start":5,"column_end":29},"name":"storage_write_value_byte","qualname":"::config::ExtCosts::storage_write_value_byte","value":"ExtCosts::storage_write_value_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17305,"byte_end":17331,"line_start":465,"line_end":465,"column_start":5,"column_end":31},"name":"storage_write_evicted_byte","qualname":"::config::ExtCosts::storage_write_evicted_byte","value":"ExtCosts::storage_write_evicted_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17337,"byte_end":17354,"line_start":466,"line_end":466,"column_start":5,"column_end":22},"name":"storage_read_base","qualname":"::config::ExtCosts::storage_read_base","value":"ExtCosts::storage_read_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1211},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17360,"byte_end":17381,"line_start":467,"line_end":467,"column_start":5,"column_end":26},"name":"storage_read_key_byte","qualname":"::config::ExtCosts::storage_read_key_byte","value":"ExtCosts::storage_read_key_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17387,"byte_end":17410,"line_start":468,"line_end":468,"column_start":5,"column_end":28},"name":"storage_read_value_byte","qualname":"::config::ExtCosts::storage_read_value_byte","value":"ExtCosts::storage_read_value_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1215},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17416,"byte_end":17435,"line_start":469,"line_end":469,"column_start":5,"column_end":24},"name":"storage_remove_base","qualname":"::config::ExtCosts::storage_remove_base","value":"ExtCosts::storage_remove_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1217},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17441,"byte_end":17464,"line_start":470,"line_end":470,"column_start":5,"column_end":28},"name":"storage_remove_key_byte","qualname":"::config::ExtCosts::storage_remove_key_byte","value":"ExtCosts::storage_remove_key_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17470,"byte_end":17499,"line_start":471,"line_end":471,"column_start":5,"column_end":34},"name":"storage_remove_ret_value_byte","qualname":"::config::ExtCosts::storage_remove_ret_value_byte","value":"ExtCosts::storage_remove_ret_value_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17505,"byte_end":17525,"line_start":472,"line_end":472,"column_start":5,"column_end":25},"name":"storage_has_key_base","qualname":"::config::ExtCosts::storage_has_key_base","value":"ExtCosts::storage_has_key_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17531,"byte_end":17551,"line_start":473,"line_end":473,"column_start":5,"column_end":25},"name":"storage_has_key_byte","qualname":"::config::ExtCosts::storage_has_key_byte","value":"ExtCosts::storage_has_key_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17557,"byte_end":17588,"line_start":474,"line_end":474,"column_start":5,"column_end":36},"name":"storage_iter_create_prefix_base","qualname":"::config::ExtCosts::storage_iter_create_prefix_base","value":"ExtCosts::storage_iter_create_prefix_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17594,"byte_end":17625,"line_start":475,"line_end":475,"column_start":5,"column_end":36},"name":"storage_iter_create_prefix_byte","qualname":"::config::ExtCosts::storage_iter_create_prefix_byte","value":"ExtCosts::storage_iter_create_prefix_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1229},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17631,"byte_end":17661,"line_start":476,"line_end":476,"column_start":5,"column_end":35},"name":"storage_iter_create_range_base","qualname":"::config::ExtCosts::storage_iter_create_range_base","value":"ExtCosts::storage_iter_create_range_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17667,"byte_end":17696,"line_start":477,"line_end":477,"column_start":5,"column_end":34},"name":"storage_iter_create_from_byte","qualname":"::config::ExtCosts::storage_iter_create_from_byte","value":"ExtCosts::storage_iter_create_from_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17702,"byte_end":17729,"line_start":478,"line_end":478,"column_start":5,"column_end":32},"name":"storage_iter_create_to_byte","qualname":"::config::ExtCosts::storage_iter_create_to_byte","value":"ExtCosts::storage_iter_create_to_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17735,"byte_end":17757,"line_start":479,"line_end":479,"column_start":5,"column_end":27},"name":"storage_iter_next_base","qualname":"::config::ExtCosts::storage_iter_next_base","value":"ExtCosts::storage_iter_next_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17763,"byte_end":17789,"line_start":480,"line_end":480,"column_start":5,"column_end":31},"name":"storage_iter_next_key_byte","qualname":"::config::ExtCosts::storage_iter_next_key_byte","value":"ExtCosts::storage_iter_next_key_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17795,"byte_end":17823,"line_start":481,"line_end":481,"column_start":5,"column_end":33},"name":"storage_iter_next_value_byte","qualname":"::config::ExtCosts::storage_iter_next_value_byte","value":"ExtCosts::storage_iter_next_value_byte","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17829,"byte_end":17847,"line_start":482,"line_end":482,"column_start":5,"column_end":23},"name":"touching_trie_node","qualname":"::config::ExtCosts::touching_trie_node","value":"ExtCosts::touching_trie_node","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17853,"byte_end":17869,"line_start":483,"line_end":483,"column_start":5,"column_end":21},"name":"promise_and_base","qualname":"::config::ExtCosts::promise_and_base","value":"ExtCosts::promise_and_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17875,"byte_end":17898,"line_start":484,"line_end":484,"column_start":5,"column_end":28},"name":"promise_and_per_promise","qualname":"::config::ExtCosts::promise_and_per_promise","value":"ExtCosts::promise_and_per_promise","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17904,"byte_end":17918,"line_start":485,"line_end":485,"column_start":5,"column_end":19},"name":"promise_return","qualname":"::config::ExtCosts::promise_return","value":"ExtCosts::promise_return","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17924,"byte_end":17944,"line_start":486,"line_end":486,"column_start":5,"column_end":25},"name":"validator_stake_base","qualname":"::config::ExtCosts::validator_stake_base","value":"ExtCosts::validator_stake_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":17950,"byte_end":17976,"line_start":487,"line_end":487,"column_start":5,"column_end":31},"name":"validator_total_stake_base","qualname":"::config::ExtCosts::validator_total_stake_base","value":"ExtCosts::validator_total_stake_base","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1154},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16715,"byte_end":16723,"line_start":438,"line_end":438,"column_start":10,"column_end":18},"name":"ExtCosts","qualname":"::config::ExtCosts","value":"pub enum ExtCosts {\n    base,\n    contract_compile_base,\n    contract_compile_bytes,\n    read_memory_base,\n    read_memory_byte,\n    write_memory_base,\n    write_memory_byte,\n    read_register_base,\n    read_register_byte,\n    write_register_base,\n    write_register_byte,\n    utf8_decoding_base,\n    utf8_decoding_byte,\n    utf16_decoding_base,\n    utf16_decoding_byte,\n    sha256_base,\n    sha256_byte,\n    keccak256_base,\n    keccak256_byte,\n    keccak512_base,\n    keccak512_byte,\n    log_base,\n    log_byte,\n    storage_write_base,\n    storage_write_key_byte,\n    storage_write_value_byte,\n    storage_write_evicted_byte,\n    storage_read_base,\n    storage_read_key_byte,\n    storage_read_value_byte,\n    storage_remove_base,\n    storage_remove_key_byte,\n    storage_remove_ret_value_byte,\n    storage_has_key_base,\n    storage_has_key_byte,\n    storage_iter_create_prefix_base,\n    storage_iter_create_prefix_byte,\n    storage_iter_create_range_base,\n    storage_iter_create_from_byte,\n    storage_iter_create_to_byte,\n    storage_iter_next_base,\n    storage_iter_next_key_byte,\n    storage_iter_next_value_byte,\n    touching_trie_node,\n    promise_and_base,\n    promise_and_per_promise,\n    promise_return,\n    validator_stake_base,\n    validator_total_stake_base,\n}","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251}],"decl_id":null,"docs":" Strongly-typed representation of the fees for counting.\n","sig":null,"attributes":[{"value":"/ Strongly-typed representation of the fees for counting.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16547,"byte_end":16606,"line_start":435,"line_end":435,"column_start":1,"column_end":60}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":16675,"byte_end":16705,"line_start":437,"line_end":437,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18149,"byte_end":18163,"line_start":494,"line_end":494,"column_start":5,"column_end":19},"name":"create_account","qualname":"::config::ActionCosts::create_account","value":"ActionCosts::create_account","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1274},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18169,"byte_end":18183,"line_start":495,"line_end":495,"column_start":5,"column_end":19},"name":"delete_account","qualname":"::config::ActionCosts::delete_account","value":"ActionCosts::delete_account","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1276},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18189,"byte_end":18204,"line_start":496,"line_end":496,"column_start":5,"column_end":20},"name":"deploy_contract","qualname":"::config::ActionCosts::deploy_contract","value":"ActionCosts::deploy_contract","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18210,"byte_end":18223,"line_start":497,"line_end":497,"column_start":5,"column_end":18},"name":"function_call","qualname":"::config::ActionCosts::function_call","value":"ActionCosts::function_call","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18229,"byte_end":18237,"line_start":498,"line_end":498,"column_start":5,"column_end":13},"name":"transfer","qualname":"::config::ActionCosts::transfer","value":"ActionCosts::transfer","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18243,"byte_end":18248,"line_start":499,"line_end":499,"column_start":5,"column_end":10},"name":"stake","qualname":"::config::ActionCosts::stake","value":"ActionCosts::stake","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18254,"byte_end":18261,"line_start":500,"line_end":500,"column_start":5,"column_end":12},"name":"add_key","qualname":"::config::ActionCosts::add_key","value":"ActionCosts::add_key","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18267,"byte_end":18277,"line_start":501,"line_end":501,"column_start":5,"column_end":15},"name":"delete_key","qualname":"::config::ActionCosts::delete_key","value":"ActionCosts::delete_key","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18283,"byte_end":18295,"line_start":502,"line_end":502,"column_start":5,"column_end":17},"name":"value_return","qualname":"::config::ActionCosts::value_return","value":"ActionCosts::value_return","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1290},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18301,"byte_end":18312,"line_start":503,"line_end":503,"column_start":5,"column_end":16},"name":"new_receipt","qualname":"::config::ActionCosts::new_receipt","value":"ActionCosts::new_receipt","parent":{"krate":0,"index":1271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1271},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18131,"byte_end":18142,"line_start":493,"line_end":493,"column_start":10,"column_end":21},"name":"ActionCosts","qualname":"::config::ActionCosts","value":"pub enum ActionCosts {\n    create_account,\n    delete_account,\n    deploy_contract,\n    function_call,\n    transfer,\n    stake,\n    add_key,\n    delete_key,\n    value_return,\n    new_receipt,\n}","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18091,"byte_end":18121,"line_start":492,"line_end":492,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18523,"byte_end":18528,"line_start":513,"line_end":513,"column_start":18,"column_end":23},"name":"count","qualname":"<ActionCosts>::count","value":"pub const fn count() -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18606,"byte_end":18613,"line_start":517,"line_end":517,"column_start":12,"column_end":19},"name":"name_of","qualname":"<ActionCosts>::name_of","value":"pub fn name_of(usize) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":19146,"byte_end":19151,"line_start":540,"line_end":540,"column_start":12,"column_end":17},"name":"value","qualname":"<ExtCosts>::value","value":"pub fn value(Self, &ExtCostsConfig) -> Gas","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":22413,"byte_end":22418,"line_start":595,"line_end":595,"column_start":18,"column_end":23},"name":"count","qualname":"<ExtCosts>::count","value":"pub const fn count() -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":22508,"byte_end":22515,"line_start":599,"line_end":599,"column_start":12,"column_end":19},"name":"name_of","qualname":"<ExtCosts>::name_of","value":"pub fn name_of(usize) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24556,"byte_end":24565,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"VMContext","qualname":"::context::VMContext","value":"VMContext { current_account_id, signer_account_id, signer_account_pk, predecessor_account_id, input, block_index, block_timestamp, epoch_height, account_balance, account_locked_balance, storage_usage, attached_deposit, prepaid_gas, random_seed, is_view, output_data_receivers }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1321},{"krate":0,"index":1313},{"krate":0,"index":1322},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1317},{"krate":0,"index":1325},{"krate":0,"index":1318},{"krate":0,"index":1326},{"krate":0,"index":1319},{"krate":0,"index":1320}],"decl_id":null,"docs":" Context for the contract execution.\n","sig":null,"attributes":[{"value":"/ Context for the contract execution.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24505,"byte_end":24544,"line_start":5,"line_end":5,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1311},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24646,"byte_end":24664,"line_start":8,"line_end":8,"column_start":9,"column_end":27},"name":"current_account_id","qualname":"::context::VMContext::current_account_id","value":"std::string::String","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The account id of the current contract that we are executing.\n","sig":null,"attributes":[{"value":"/ The account id of the current contract that we are executing.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24572,"byte_end":24637,"line_start":7,"line_end":7,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1312},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24784,"byte_end":24801,"line_start":11,"line_end":11,"column_start":9,"column_end":26},"name":"signer_account_id","qualname":"::context::VMContext::signer_account_id","value":"std::string::String","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The account id of that signed the original transaction that led to this\n execution.\n","sig":null,"attributes":[{"value":"/ The account id of that signed the original transaction that led to this","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24681,"byte_end":24756,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/ execution.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24761,"byte_end":24775,"line_start":10,"line_end":10,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1321},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24986,"byte_end":25003,"line_start":15,"line_end":15,"column_start":9,"column_end":26},"name":"signer_account_pk","qualname":"::context::VMContext::signer_account_pk","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The public key that was used to sign the original transaction that led to\n this execution.\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24818,"byte_end":24871,"line_start":12,"line_end":12,"column_start":5,"column_end":58}},{"value":"/ The public key that was used to sign the original transaction that led to","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24876,"byte_end":24953,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"/ this execution.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":24958,"byte_end":24977,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1313},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25281,"byte_end":25303,"line_start":20,"line_end":20,"column_start":9,"column_end":31},"name":"predecessor_account_id","qualname":"::context::VMContext::predecessor_account_id","value":"std::string::String","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" If this execution is the result of cross-contract call or a callback then\n predecessor is the account that called it.\n If this execution is the result of direct execution of transaction then it\n is equal to `signer_account_id`.\n","sig":null,"attributes":[{"value":"/ If this execution is the result of cross-contract call or a callback then","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25020,"byte_end":25097,"line_start":16,"line_end":16,"column_start":5,"column_end":82}},{"value":"/ predecessor is the account that called it.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25102,"byte_end":25148,"line_start":17,"line_end":17,"column_start":5,"column_end":51}},{"value":"/ If this execution is the result of direct execution of transaction then it","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25153,"byte_end":25231,"line_start":18,"line_end":18,"column_start":5,"column_end":83}},{"value":"/ is equal to `signer_account_id`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25236,"byte_end":25272,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1322},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25504,"byte_end":25509,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"input","qualname":"::context::VMContext::input","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The input to the contract call.\n Encoded as base64 string to be able to pass input in borsh binary format.\n","sig":null,"attributes":[{"value":"/ The input to the contract call.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25320,"byte_end":25355,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"/ Encoded as base64 string to be able to pass input in borsh binary format.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25360,"byte_end":25437,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"serde(with = \"crate::serde_with::bytes_as_base64\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25442,"byte_end":25495,"line_start":23,"line_end":23,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1314},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25605,"byte_end":25616,"line_start":27,"line_end":27,"column_start":9,"column_end":20},"name":"block_index","qualname":"::context::VMContext::block_index","value":"u64","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The current block height.\n","sig":null,"attributes":[{"value":"/ The current block height.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25524,"byte_end":25553,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1315},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25743,"byte_end":25758,"line_start":29,"line_end":29,"column_start":9,"column_end":24},"name":"block_timestamp","qualname":"::context::VMContext::block_timestamp","value":"u64","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).\n","sig":null,"attributes":[{"value":"/ The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25635,"byte_end":25734,"line_start":28,"line_end":28,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":1316},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25807,"byte_end":25819,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"name":"epoch_height","qualname":"::context::VMContext::epoch_height","value":"u64","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The current epoch height.\n","sig":null,"attributes":[{"value":"/ The current epoch height.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25769,"byte_end":25798,"line_start":30,"line_end":30,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1323},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26041,"byte_end":26056,"line_start":36,"line_end":36,"column_start":9,"column_end":24},"name":"account_balance","qualname":"::context::VMContext::account_balance","value":"u128","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The balance attached to the given account. Excludes the `attached_deposit` that was\n attached to the transaction.\n","sig":null,"attributes":[{"value":"/ The balance attached to the given account. Excludes the `attached_deposit` that was","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25839,"byte_end":25926,"line_start":33,"line_end":33,"column_start":5,"column_end":92}},{"value":"/ attached to the transaction.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25931,"byte_end":25963,"line_start":34,"line_end":34,"column_start":5,"column_end":37}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":25968,"byte_end":26032,"line_start":35,"line_end":35,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26203,"byte_end":26225,"line_start":39,"line_end":39,"column_start":9,"column_end":31},"name":"account_locked_balance","qualname":"::context::VMContext::account_locked_balance","value":"u128","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The balance of locked tokens on the given account.\n","sig":null,"attributes":[{"value":"/ The balance of locked tokens on the given account.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26071,"byte_end":26125,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26130,"byte_end":26194,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1317},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26310,"byte_end":26323,"line_start":41,"line_end":41,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::context::VMContext::storage_usage","value":"u64","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The account's storage usage before the contract execution\n","sig":null,"attributes":[{"value":"/ The account's storage usage before the contract execution","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26240,"byte_end":26301,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26547,"byte_end":26563,"line_start":45,"line_end":45,"column_start":9,"column_end":25},"name":"attached_deposit","qualname":"::context::VMContext::attached_deposit","value":"u128","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.\n","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26343,"byte_end":26434,"line_start":42,"line_end":42,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26439,"byte_end":26469,"line_start":43,"line_end":43,"column_start":5,"column_end":35}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26474,"byte_end":26538,"line_start":44,"line_end":44,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1318},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26661,"byte_end":26672,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"prepaid_gas","qualname":"::context::VMContext::prepaid_gas","value":"u64","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" The gas attached to the call that can be used to pay for the gas fees.\n","sig":null,"attributes":[{"value":"/ The gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26578,"byte_end":26652,"line_start":46,"line_end":46,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26781,"byte_end":26792,"line_start":50,"line_end":50,"column_start":9,"column_end":20},"name":"random_seed","qualname":"::context::VMContext::random_seed","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" Initial seed for randomness\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26683,"byte_end":26736,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/ Initial seed for randomness","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26741,"byte_end":26772,"line_start":49,"line_end":49,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26870,"byte_end":26877,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"is_view","qualname":"::context::VMContext::is_view","value":"bool","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" Whether the execution should not charge any costs.\n","sig":null,"attributes":[{"value":"/ Whether the execution should not charge any costs.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26807,"byte_end":26861,"line_start":51,"line_end":51,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1320},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":27067,"byte_end":27088,"line_start":55,"line_end":55,"column_start":9,"column_end":30},"name":"output_data_receivers","qualname":"::context::VMContext::output_data_receivers","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":" How many `DataReceipt`'s should receive this execution result. This should be empty if\n this function call is a part of a batch and it is not the last action.\n","sig":null,"attributes":[{"value":"/ How many `DataReceipt`'s should receive this execution result. This should be empty if","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26889,"byte_end":26979,"line_start":53,"line_end":53,"column_start":5,"column_end":95}},{"value":"/ this function call is a part of a batch and it is not the last action.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/context.rs","byte_start":26984,"byte_end":27058,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27331,"byte_end":27341,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"MemoryLike","qualname":"::dependencies::MemoryLike","value":"MemoryLike","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" An abstraction over the memory of the smart contract.\n","sig":null,"attributes":[{"value":"/ An abstraction over the memory of the smart contract.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27263,"byte_end":27320,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27443,"byte_end":27454,"line_start":9,"line_end":9,"column_start":8,"column_end":19},"name":"fits_memory","qualname":"::dependencies::MemoryLike::fits_memory","value":"pub fn fits_memory(&Self, u64, u64) -> bool","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Returns whether the memory interval is completely inside the smart contract memory.\n","sig":null,"attributes":[{"value":"/ Returns whether the memory interval is completely inside the smart contract memory.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27348,"byte_end":27435,"line_start":8,"line_end":8,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27656,"byte_end":27667,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"read_memory","qualname":"::dependencies::MemoryLike::read_memory","value":"pub fn read_memory(&Self, u64, &mut [u8])","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Reads the content of the given memory interval.","sig":null,"attributes":[{"value":"/ Reads the content of the given memory interval.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27499,"byte_end":27550,"line_start":11,"line_end":11,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27555,"byte_end":27558,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27563,"byte_end":27575,"line_start":13,"line_end":13,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27580,"byte_end":27583,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ If memory interval is outside the smart contract memory.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27588,"byte_end":27648,"line_start":15,"line_end":15,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27851,"byte_end":27865,"line_start":23,"line_end":23,"column_start":8,"column_end":22},"name":"read_memory_u8","qualname":"::dependencies::MemoryLike::read_memory_u8","value":"pub fn read_memory_u8(&Self, u64) -> u8","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Reads a single byte from the memory.","sig":null,"attributes":[{"value":"/ Reads a single byte from the memory.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27713,"byte_end":27753,"line_start":18,"line_end":18,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27758,"byte_end":27761,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27766,"byte_end":27778,"line_start":20,"line_end":20,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27783,"byte_end":27786,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If pointer is outside the smart contract memory.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27791,"byte_end":27843,"line_start":22,"line_end":22,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28065,"byte_end":28077,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"write_memory","qualname":"::dependencies::MemoryLike::write_memory","value":"pub fn write_memory(&mut Self, u64, &[u8])","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Writes the buffer into the smart contract memory.","sig":null,"attributes":[{"value":"/ Writes the buffer into the smart contract memory.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27898,"byte_end":27951,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27956,"byte_end":27959,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27964,"byte_end":27976,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27981,"byte_end":27984,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If `offset + buffer.len()` is outside the smart contract memory.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":27989,"byte_end":28057,"line_start":29,"line_end":29,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28395,"byte_end":28403,"line_start":38,"line_end":38,"column_start":11,"column_end":19},"name":"ValuePtr","qualname":"::dependencies::ValuePtr","value":"ValuePtr","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Logical pointer to a value in storage.\n Allows getting value length before getting the value itself. This is needed so that runtime\n can charge gas before accessing a potentially large value.\n","sig":null,"attributes":[{"value":"/ Logical pointer to a value in storage.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28183,"byte_end":28225,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ Allows getting value length before getting the value itself. This is needed so that runtime","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28226,"byte_end":28321,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ can charge gas before accessing a potentially large value.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28322,"byte_end":28384,"line_start":37,"line_end":37,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28453,"byte_end":28456,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"len","qualname":"::dependencies::ValuePtr::len","value":"pub fn len(&Self) -> u32","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Returns the length of the value\n","sig":null,"attributes":[{"value":"/ Returns the length of the value","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28410,"byte_end":28445,"line_start":39,"line_end":39,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28656,"byte_end":28661,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"deref","qualname":"::dependencies::ValuePtr::deref","value":"pub fn deref(&Self) -> Result<Vec<u8>>","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Dereferences the pointer.\n Takes a box because currently runtime code uses dynamic dispatch.\n # Errors\n StorageError if reading from storage fails\n","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28477,"byte_end":28506,"line_start":42,"line_end":42,"column_start":5,"column_end":34}},{"value":"/ Takes a box because currently runtime code uses dynamic dispatch.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28511,"byte_end":28580,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28585,"byte_end":28597,"line_start":44,"line_end":44,"column_start":5,"column_end":17}},{"value":"/ StorageError if reading from storage fails","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28602,"byte_end":28648,"line_start":45,"line_end":45,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28761,"byte_end":28769,"line_start":50,"line_end":50,"column_start":11,"column_end":19},"name":"External","qualname":"::dependencies::External","value":"External","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" An external blockchain interface for the Runtime logic\n","sig":null,"attributes":[{"value":"/ An external blockchain interface for the Runtime logic","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28692,"byte_end":28750,"line_start":49,"line_end":49,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29505,"byte_end":29516,"line_start":72,"line_end":72,"column_start":8,"column_end":19},"name":"storage_set","qualname":"::dependencies::External::storage_set","value":"pub fn storage_set(&mut Self, &[u8], &[u8]) -> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Write to the storage trie of the current account","sig":null,"attributes":[{"value":"/ Write to the storage trie of the current account","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28776,"byte_end":28828,"line_start":51,"line_end":51,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28833,"byte_end":28836,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28841,"byte_end":28856,"line_start":53,"line_end":53,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28861,"byte_end":28864,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key for a new value","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28869,"byte_end":28904,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/ * `value` - a new value to be set","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28909,"byte_end":28946,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28951,"byte_end":28954,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28959,"byte_end":28971,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28976,"byte_end":28979,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":28984,"byte_end":29077,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29082,"byte_end":29085,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29090,"byte_end":29103,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29108,"byte_end":29115,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29120,"byte_end":29182,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29187,"byte_end":29221,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29226,"byte_end":29229,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29234,"byte_end":29281,"line_start":67,"line_end":67,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"value1337\"), Ok(()));","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29286,"byte_end":29355,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ // Should return an old value if the key exists","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29360,"byte_end":29411,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"new_value\"), Ok(()));","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29416,"byte_end":29485,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29490,"byte_end":29497,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30409,"byte_end":30420,"line_start":95,"line_end":95,"column_start":8,"column_end":19},"name":"storage_get","qualname":"::dependencies::External::storage_get","value":"pub fn storage_get<'a>(&'a Self, &[u8])\n-> Result<Option<Box<dyn ValuePtr + 'a>>>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Reads from the storage trie of the current account","sig":null,"attributes":[{"value":"/ Reads from the storage trie of the current account","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29574,"byte_end":29628,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29633,"byte_end":29636,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29641,"byte_end":29656,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29661,"byte_end":29664,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to read","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29669,"byte_end":29696,"line_start":78,"line_end":78,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29701,"byte_end":29704,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29709,"byte_end":29721,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29726,"byte_end":29729,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29734,"byte_end":29827,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29832,"byte_end":29835,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29840,"byte_end":29853,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29858,"byte_end":29865,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::{MockedExternal};","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29870,"byte_end":29934,"line_start":86,"line_end":86,"column_start":5,"column_end":69}},{"value":"/ # use near_vm_logic::{External, ValuePtr};","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29939,"byte_end":29985,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29990,"byte_end":29993,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":29998,"byte_end":30045,"line_start":89,"line_end":89,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30050,"byte_end":30108,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(external.storage_get(b\"key42\").unwrap().map(|ptr| ptr.deref().unwrap()), Some(b\"value1337\".to_vec()));","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30113,"byte_end":30230,"line_start":91,"line_end":91,"column_start":5,"column_end":122}},{"value":"/ // Returns Ok(None) if there is no value for a key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30235,"byte_end":30289,"line_start":92,"line_end":92,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(external.storage_get(b\"no_key\").unwrap().map(|ptr| ptr.deref().unwrap()), None);","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30294,"byte_end":30389,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30394,"byte_end":30401,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31233,"byte_end":31247,"line_start":119,"line_end":119,"column_start":8,"column_end":22},"name":"storage_remove","qualname":"::dependencies::External::storage_remove","value":"pub fn storage_remove(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Removes the key from the storage","sig":null,"attributes":[{"value":"/ Removes the key from the storage","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30495,"byte_end":30531,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30536,"byte_end":30539,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30544,"byte_end":30559,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30564,"byte_end":30567,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to remove","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30572,"byte_end":30601,"line_start":101,"line_end":101,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30606,"byte_end":30609,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30614,"byte_end":30626,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30631,"byte_end":30634,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30639,"byte_end":30732,"line_start":105,"line_end":105,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30737,"byte_end":30740,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30745,"byte_end":30758,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30763,"byte_end":30770,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30775,"byte_end":30837,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30842,"byte_end":30876,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30881,"byte_end":30884,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30889,"byte_end":30936,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":30941,"byte_end":30999,"line_start":113,"line_end":113,"column_start":5,"column_end":63}},{"value":"/ // Returns value if exists","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31004,"byte_end":31034,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(external.storage_remove(b\"key42\"), Ok(()));","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31039,"byte_end":31097,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ // Returns None if there was no value","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31102,"byte_end":31143,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(external.storage_remove(b\"no_value_key\"), Ok(()));","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31148,"byte_end":31213,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31218,"byte_end":31225,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32082,"byte_end":32097,"line_start":143,"line_end":143,"column_start":8,"column_end":23},"name":"storage_has_key","qualname":"::dependencies::External::storage_has_key","value":"pub fn storage_has_key(&mut Self, &[u8]) -> Result<bool>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Check whether key exists. Returns Ok(true) if key exists or Ok(false) otherwise","sig":null,"attributes":[{"value":"/ Check whether key exists. Returns Ok(true) if key exists or Ok(false) otherwise","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31291,"byte_end":31374,"line_start":121,"line_end":121,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31379,"byte_end":31382,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31387,"byte_end":31402,"line_start":123,"line_end":123,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31407,"byte_end":31410,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to check","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31415,"byte_end":31443,"line_start":125,"line_end":125,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31448,"byte_end":31451,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31456,"byte_end":31468,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31473,"byte_end":31476,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31481,"byte_end":31574,"line_start":129,"line_end":129,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31579,"byte_end":31582,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31587,"byte_end":31600,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31605,"byte_end":31612,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31617,"byte_end":31679,"line_start":133,"line_end":133,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31684,"byte_end":31718,"line_start":134,"line_end":134,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31723,"byte_end":31726,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31731,"byte_end":31778,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31783,"byte_end":31841,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/ // Returns value if exists","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31846,"byte_end":31876,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(external.storage_has_key(b\"key42\"), Ok(true));","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31881,"byte_end":31942,"line_start":139,"line_end":139,"column_start":5,"column_end":66}},{"value":"/ // Returns None if there was no value","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31947,"byte_end":31988,"line_start":140,"line_end":140,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(external.storage_has_key(b\"no_value_key\"), Ok(false));","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":31993,"byte_end":32062,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32067,"byte_end":32074,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32848,"byte_end":32862,"line_start":164,"line_end":164,"column_start":8,"column_end":22},"name":"create_receipt","qualname":"::dependencies::External::create_receipt","value":"pub fn create_receipt(&mut Self, Vec<ReceiptIndex>, AccountId)\n-> Result<ReceiptIndex>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Creates a receipt which will be executed after `receipt_indices`","sig":null,"attributes":[{"value":"/ Creates a receipt which will be executed after `receipt_indices`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32143,"byte_end":32211,"line_start":145,"line_end":145,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32216,"byte_end":32219,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32224,"byte_end":32239,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32244,"byte_end":32247,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ * `receipt_indices` - a list of receipt indices the new receipt is depend on","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32252,"byte_end":32332,"line_start":149,"line_end":149,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32337,"byte_end":32340,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32345,"byte_end":32358,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32363,"byte_end":32370,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32375,"byte_end":32437,"line_start":153,"line_end":153,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32442,"byte_end":32476,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32481,"byte_end":32484,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32489,"byte_end":32536,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/ let receipt_index_one = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32541,"byte_end":32636,"line_start":157,"line_end":157,"column_start":5,"column_end":100}},{"value":"/ let receipt_index_two = external.create_receipt(vec![receipt_index_one], \"bob.near\".to_owned());","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32641,"byte_end":32741,"line_start":158,"line_end":158,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32746,"byte_end":32749,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32754,"byte_end":32761,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32766,"byte_end":32769,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32774,"byte_end":32786,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/ Panics if one of `receipt_indices` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32791,"byte_end":32840,"line_start":163,"line_end":163,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33637,"byte_end":33665,"line_start":189,"line_end":189,"column_start":8,"column_end":36},"name":"append_action_create_account","qualname":"::dependencies::External::append_action_create_account","value":"pub fn append_action_create_account(&mut Self, ReceiptIndex) -> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `Action::CreateAccount` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `Action::CreateAccount` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":32995,"byte_end":33064,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33069,"byte_end":33072,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33077,"byte_end":33092,"line_start":172,"line_end":172,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33097,"byte_end":33100,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33105,"byte_end":33168,"line_start":174,"line_end":174,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33173,"byte_end":33176,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33181,"byte_end":33194,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33199,"byte_end":33206,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33211,"byte_end":33273,"line_start":178,"line_end":178,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33278,"byte_end":33312,"line_start":179,"line_end":179,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33317,"byte_end":33320,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33325,"byte_end":33372,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33377,"byte_end":33468,"line_start":182,"line_end":182,"column_start":5,"column_end":96}},{"value":"/ external.append_action_create_account(receipt_index).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33473,"byte_end":33539,"line_start":183,"line_end":183,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33544,"byte_end":33547,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33552,"byte_end":33559,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33564,"byte_end":33567,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33572,"byte_end":33584,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33589,"byte_end":33629,"line_start":188,"line_end":188,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34445,"byte_end":34474,"line_start":211,"line_end":211,"column_start":8,"column_end":37},"name":"append_action_deploy_contract","qualname":"::dependencies::External::append_action_deploy_contract","value":"pub fn append_action_deploy_contract(&mut Self, ReceiptIndex, Vec<u8>)\n-> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `Action::DeployContract` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `Action::DeployContract` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33726,"byte_end":33796,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33801,"byte_end":33804,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33809,"byte_end":33824,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33829,"byte_end":33832,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33837,"byte_end":33900,"line_start":195,"line_end":195,"column_start":5,"column_end":68}},{"value":"/ * `code` - a Wasm code to attach","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33905,"byte_end":33941,"line_start":196,"line_end":196,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33946,"byte_end":33949,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33954,"byte_end":33967,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33972,"byte_end":33979,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":33984,"byte_end":34046,"line_start":200,"line_end":200,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34051,"byte_end":34085,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34090,"byte_end":34093,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34098,"byte_end":34145,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34150,"byte_end":34241,"line_start":204,"line_end":204,"column_start":5,"column_end":96}},{"value":"/ external.append_action_deploy_contract(receipt_index, b\"some valid Wasm code\".to_vec()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34246,"byte_end":34347,"line_start":205,"line_end":205,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34352,"byte_end":34355,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34360,"byte_end":34367,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34372,"byte_end":34375,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34380,"byte_end":34392,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34397,"byte_end":34437,"line_start":210,"line_end":210,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35627,"byte_end":35654,"line_start":246,"line_end":246,"column_start":8,"column_end":35},"name":"append_action_function_call","qualname":"::dependencies::External::append_action_function_call","value":"pub fn append_action_function_call(&mut Self, ReceiptIndex, Vec<u8>, Vec<u8>,\n                                   Balance, Gas) -> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `Action::FunctionCall` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `Action::FunctionCall` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34581,"byte_end":34649,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34654,"byte_end":34657,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34662,"byte_end":34677,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34682,"byte_end":34685,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34690,"byte_end":34753,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/ * `method_name` - a name of the contract method to call","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34758,"byte_end":34817,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/ * `arguments` - a Wasm code to attach","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34822,"byte_end":34863,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/ * `attached_deposit` - amount of tokens to transfer with the call","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34868,"byte_end":34937,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/ * `prepaid_gas` - amount of prepaid gas to attach to the call","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":34942,"byte_end":35007,"line_start":225,"line_end":225,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35012,"byte_end":35015,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35020,"byte_end":35033,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35038,"byte_end":35045,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35050,"byte_end":35112,"line_start":229,"line_end":229,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35117,"byte_end":35151,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35156,"byte_end":35159,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35164,"byte_end":35211,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35216,"byte_end":35307,"line_start":233,"line_end":233,"column_start":5,"column_end":96}},{"value":"/ external.append_action_function_call(","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35312,"byte_end":35353,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/     receipt_index,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35358,"byte_end":35380,"line_start":235,"line_end":235,"column_start":5,"column_end":27}},{"value":"/     b\"method_name\".to_vec(),","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35385,"byte_end":35417,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/     b\"{serialised: arguments}\".to_vec(),","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35422,"byte_end":35466,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/     100000u128,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35471,"byte_end":35490,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/     100u64","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35495,"byte_end":35509,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ ).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35514,"byte_end":35529,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35534,"byte_end":35537,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35542,"byte_end":35549,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35554,"byte_end":35557,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35562,"byte_end":35574,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35579,"byte_end":35619,"line_start":245,"line_end":245,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36583,"byte_end":36605,"line_start":278,"line_end":278,"column_start":8,"column_end":30},"name":"append_action_transfer","qualname":"::dependencies::External::append_action_transfer","value":"pub fn append_action_transfer(&mut Self, ReceiptIndex, Balance) -> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `TransferAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `TransferAction` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35857,"byte_end":35919,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35924,"byte_end":35927,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35932,"byte_end":35947,"line_start":257,"line_end":257,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35952,"byte_end":35955,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":35960,"byte_end":36023,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ * `amount` - amount of tokens to transfer","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36028,"byte_end":36073,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36078,"byte_end":36081,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36086,"byte_end":36099,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36104,"byte_end":36111,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36116,"byte_end":36178,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36183,"byte_end":36217,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36222,"byte_end":36225,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36230,"byte_end":36277,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36282,"byte_end":36373,"line_start":268,"line_end":268,"column_start":5,"column_end":96}},{"value":"/ external.append_action_transfer(","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36378,"byte_end":36414,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/     receipt_index,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36419,"byte_end":36441,"line_start":270,"line_end":270,"column_start":5,"column_end":27}},{"value":"/     100000u128,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36446,"byte_end":36465,"line_start":271,"line_end":271,"column_start":5,"column_end":24}},{"value":"/ ).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36470,"byte_end":36485,"line_start":272,"line_end":272,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36490,"byte_end":36493,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36498,"byte_end":36505,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36510,"byte_end":36513,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36518,"byte_end":36530,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36535,"byte_end":36575,"line_start":277,"line_end":277,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37518,"byte_end":37537,"line_start":309,"line_end":309,"column_start":8,"column_end":27},"name":"append_action_stake","qualname":"::dependencies::External::append_action_stake","value":"pub fn append_action_stake(&mut Self, ReceiptIndex, Balance, PublicKey)\n-> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `StakeAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `StakeAction` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36714,"byte_end":36773,"line_start":284,"line_end":284,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36778,"byte_end":36781,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36786,"byte_end":36801,"line_start":286,"line_end":286,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36806,"byte_end":36809,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36814,"byte_end":36877,"line_start":288,"line_end":288,"column_start":5,"column_end":68}},{"value":"/ * `stake` - amount of tokens to stake","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36882,"byte_end":36923,"line_start":289,"line_end":289,"column_start":5,"column_end":46}},{"value":"/ * `public_key` - a validator public key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36928,"byte_end":36971,"line_start":290,"line_end":290,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36976,"byte_end":36979,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":36984,"byte_end":36997,"line_start":292,"line_end":292,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37002,"byte_end":37009,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37014,"byte_end":37076,"line_start":294,"line_end":294,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37081,"byte_end":37115,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37120,"byte_end":37123,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37128,"byte_end":37175,"line_start":297,"line_end":297,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37180,"byte_end":37271,"line_start":298,"line_end":298,"column_start":5,"column_end":96}},{"value":"/ external.append_action_stake(","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37276,"byte_end":37309,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/     receipt_index,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37314,"byte_end":37336,"line_start":300,"line_end":300,"column_start":5,"column_end":27}},{"value":"/     100000u128,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37341,"byte_end":37360,"line_start":301,"line_end":301,"column_start":5,"column_end":24}},{"value":"/     b\"some public key\".to_vec()","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37365,"byte_end":37400,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/ ).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37405,"byte_end":37420,"line_start":303,"line_end":303,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37425,"byte_end":37428,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37433,"byte_end":37440,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37445,"byte_end":37448,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37453,"byte_end":37465,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37470,"byte_end":37510,"line_start":308,"line_end":308,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38484,"byte_end":38522,"line_start":341,"line_end":341,"column_start":8,"column_end":46},"name":"append_action_add_key_with_full_access","qualname":"::dependencies::External::append_action_add_key_with_full_access","value":"pub fn append_action_add_key_with_full_access(&mut Self, ReceiptIndex,\n                                              PublicKey, u64) -> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `AddKeyAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `AddKeyAction` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37676,"byte_end":37736,"line_start":316,"line_end":316,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37741,"byte_end":37744,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37749,"byte_end":37764,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37769,"byte_end":37772,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37777,"byte_end":37840,"line_start":320,"line_end":320,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37845,"byte_end":37896,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/ * `nonce` - a nonce","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37901,"byte_end":37924,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37929,"byte_end":37932,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37937,"byte_end":37950,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37955,"byte_end":37962,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":37967,"byte_end":38029,"line_start":326,"line_end":326,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38034,"byte_end":38068,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38073,"byte_end":38076,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38081,"byte_end":38128,"line_start":329,"line_end":329,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38133,"byte_end":38224,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/ external.append_action_add_key_with_full_access(","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38229,"byte_end":38281,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/     receipt_index,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38286,"byte_end":38308,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec(),","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38313,"byte_end":38349,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/     0u64","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38354,"byte_end":38366,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/ ).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38371,"byte_end":38386,"line_start":335,"line_end":335,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38391,"byte_end":38394,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38399,"byte_end":38406,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38411,"byte_end":38414,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38419,"byte_end":38431,"line_start":339,"line_end":339,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38436,"byte_end":38476,"line_start":340,"line_end":340,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39889,"byte_end":39929,"line_start":379,"line_end":379,"column_start":8,"column_end":48},"name":"append_action_add_key_with_function_call","qualname":"::dependencies::External::append_action_add_key_with_function_call","value":"pub fn append_action_add_key_with_function_call(&mut Self, ReceiptIndex,\n                                                PublicKey, u64,\n                                                Option<Balance>, AccountId,\n                                                Vec<Vec<u8>>) -> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `AddKeyAction` action to an existing receipt with `AccessKeyPermission::FunctionCall`","sig":null,"attributes":[{"value":"/ Attaches an `AddKeyAction` action to an existing receipt with `AccessKeyPermission::FunctionCall`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38657,"byte_end":38758,"line_start":348,"line_end":348,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38763,"byte_end":38766,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38771,"byte_end":38786,"line_start":350,"line_end":350,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38791,"byte_end":38794,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38799,"byte_end":38862,"line_start":352,"line_end":352,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38867,"byte_end":38918,"line_start":353,"line_end":353,"column_start":5,"column_end":56}},{"value":"/ * `nonce` - a nonce","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38923,"byte_end":38946,"line_start":354,"line_end":354,"column_start":5,"column_end":28}},{"value":"/ * `allowance` - amount of tokens allowed to spend by this access key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":38951,"byte_end":39023,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ * `receiver_id` - a contract witch will be allowed to call with this access key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39028,"byte_end":39111,"line_start":356,"line_end":356,"column_start":5,"column_end":88}},{"value":"/ * `method_names` - a list of method names is allowed to call with this access key (empty = any method)","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39116,"byte_end":39222,"line_start":357,"line_end":357,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39227,"byte_end":39230,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39235,"byte_end":39248,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39253,"byte_end":39260,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39265,"byte_end":39327,"line_start":361,"line_end":361,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39332,"byte_end":39366,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39371,"byte_end":39374,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39379,"byte_end":39426,"line_start":364,"line_end":364,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39431,"byte_end":39522,"line_start":365,"line_end":365,"column_start":5,"column_end":96}},{"value":"/ external.append_action_add_key_with_function_call(","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39527,"byte_end":39581,"line_start":366,"line_end":366,"column_start":5,"column_end":59}},{"value":"/     receipt_index,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39586,"byte_end":39608,"line_start":367,"line_end":367,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec(),","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39613,"byte_end":39649,"line_start":368,"line_end":368,"column_start":5,"column_end":41}},{"value":"/     0u64,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39654,"byte_end":39667,"line_start":369,"line_end":369,"column_start":5,"column_end":18}},{"value":"/     None,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39672,"byte_end":39685,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/     \"bob.near\".to_owned(),","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39690,"byte_end":39720,"line_start":371,"line_end":371,"column_start":5,"column_end":35}},{"value":"/     vec![b\"foo\".to_vec(), b\"bar\".to_vec()]","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39725,"byte_end":39771,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/ ).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39776,"byte_end":39791,"line_start":373,"line_end":373,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39796,"byte_end":39799,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39804,"byte_end":39811,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39816,"byte_end":39819,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39824,"byte_end":39836,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":39841,"byte_end":39881,"line_start":378,"line_end":378,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40929,"byte_end":40953,"line_start":412,"line_end":412,"column_start":8,"column_end":32},"name":"append_action_delete_key","qualname":"::dependencies::External::append_action_delete_key","value":"pub fn append_action_delete_key(&mut Self, ReceiptIndex, PublicKey)\n-> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `DeleteKeyAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `DeleteKeyAction` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40168,"byte_end":40231,"line_start":389,"line_end":389,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40236,"byte_end":40239,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40244,"byte_end":40259,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40264,"byte_end":40267,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40272,"byte_end":40335,"line_start":393,"line_end":393,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key to delete","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40340,"byte_end":40401,"line_start":394,"line_end":394,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40406,"byte_end":40409,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40414,"byte_end":40427,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40432,"byte_end":40439,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40444,"byte_end":40506,"line_start":398,"line_end":398,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40511,"byte_end":40545,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40550,"byte_end":40553,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40558,"byte_end":40605,"line_start":401,"line_end":401,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40610,"byte_end":40701,"line_start":402,"line_end":402,"column_start":5,"column_end":96}},{"value":"/ external.append_action_delete_key(","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40706,"byte_end":40744,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/     receipt_index,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40749,"byte_end":40771,"line_start":404,"line_end":404,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec()","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40776,"byte_end":40811,"line_start":405,"line_end":405,"column_start":5,"column_end":40}},{"value":"/ ).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40816,"byte_end":40831,"line_start":406,"line_end":406,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40836,"byte_end":40839,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40844,"byte_end":40851,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40856,"byte_end":40859,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40864,"byte_end":40876,"line_start":410,"line_end":410,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":40881,"byte_end":40921,"line_start":411,"line_end":411,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41877,"byte_end":41905,"line_start":441,"line_end":441,"column_start":8,"column_end":36},"name":"append_action_delete_account","qualname":"::dependencies::External::append_action_delete_account","value":"pub fn append_action_delete_account(&mut Self, ReceiptIndex, AccountId)\n-> Result<()>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Attaches an `DeleteAccountAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `DeleteAccountAction` action to an existing receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41068,"byte_end":41135,"line_start":418,"line_end":418,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41140,"byte_end":41143,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41148,"byte_end":41163,"line_start":420,"line_end":420,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41168,"byte_end":41171,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41176,"byte_end":41239,"line_start":422,"line_end":422,"column_start":5,"column_end":68}},{"value":"/ * `beneficiary_id` - an account id to which the rest of the funds of the removed account will be transferred","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41244,"byte_end":41356,"line_start":423,"line_end":423,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41361,"byte_end":41364,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41369,"byte_end":41382,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41387,"byte_end":41394,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41399,"byte_end":41461,"line_start":427,"line_end":427,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41466,"byte_end":41500,"line_start":428,"line_end":428,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41505,"byte_end":41508,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41513,"byte_end":41560,"line_start":430,"line_end":430,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41565,"byte_end":41656,"line_start":431,"line_end":431,"column_start":5,"column_end":96}},{"value":"/ external.append_action_delete_account(","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41661,"byte_end":41703,"line_start":432,"line_end":432,"column_start":5,"column_end":47}},{"value":"/     receipt_index,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41708,"byte_end":41730,"line_start":433,"line_end":433,"column_start":5,"column_end":27}},{"value":"/     \"sam\".to_owned()","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41735,"byte_end":41759,"line_start":434,"line_end":434,"column_start":5,"column_end":29}},{"value":"/ ).unwrap();","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41764,"byte_end":41779,"line_start":435,"line_end":435,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41784,"byte_end":41787,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41792,"byte_end":41799,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41804,"byte_end":41807,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41812,"byte_end":41824,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":41829,"byte_end":41869,"line_start":440,"line_end":440,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42094,"byte_end":42117,"line_start":448,"line_end":448,"column_start":8,"column_end":31},"name":"get_touched_nodes_count","qualname":"::dependencies::External::get_touched_nodes_count","value":"pub fn get_touched_nodes_count(&Self) -> u64","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Returns amount of touched trie nodes by storage operations\n","sig":null,"attributes":[{"value":"/ Returns amount of touched trie nodes by storage operations","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42024,"byte_end":42086,"line_start":447,"line_end":447,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42207,"byte_end":42234,"line_start":451,"line_end":451,"column_start":8,"column_end":35},"name":"reset_touched_nodes_counter","qualname":"::dependencies::External::reset_touched_nodes_counter","value":"pub fn reset_touched_nodes_counter(&mut Self)","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Resets amount of touched trie nodes by storage operations\n","sig":null,"attributes":[{"value":"/ Resets amount of touched trie nodes by storage operations","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42138,"byte_end":42199,"line_start":450,"line_end":450,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42390,"byte_end":42405,"line_start":455,"line_end":455,"column_start":8,"column_end":23},"name":"validator_stake","qualname":"::dependencies::External::validator_stake","value":"pub fn validator_stake(&Self, &AccountId) -> Result<Option<Balance>>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Returns the validator stake for given account in the current epoch.\n If the account is not a validator, returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns the validator stake for given account in the current epoch.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42252,"byte_end":42323,"line_start":453,"line_end":453,"column_start":5,"column_end":76}},{"value":"/ If the account is not a validator, returns `None`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42328,"byte_end":42382,"line_start":454,"line_end":454,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42537,"byte_end":42558,"line_start":458,"line_end":458,"column_start":8,"column_end":29},"name":"validator_total_stake","qualname":"::dependencies::External::validator_total_stake","value":"pub fn validator_total_stake(&Self) -> Result<Balance>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Returns total stake of validators in the current epoch.\n","sig":null,"attributes":[{"value":"/ Returns total stake of validators in the current epoch.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/dependencies.rs","byte_start":42470,"byte_end":42529,"line_start":457,"line_end":457,"column_start":5,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":1568},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","byte_start":42820,"byte_end":42837,"line_start":8,"line_end":8,"column_start":16,"column_end":33},"name":"EXT_COSTS_COUNTER","qualname":"::gas_counter::EXT_COSTS_COUNTER","value":"::std::thread::LocalKey<std::cell::RefCell<std::collections::HashMap<ExtCosts,\n                                                                     u64>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":50702,"byte_end":50709,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"VMLogic","qualname":"::logic::VMLogic","value":"VMLogic {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":53613,"byte_end":53616,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<VMLogic>::new","value":"pub fn new(&'a mut dyn External, VMContext, &'a VMConfig,\n           &'a RuntimeFeesConfig, &'a [PromiseResult], &'a mut dyn MemoryLike,\n           Option<ProfileData>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":58825,"byte_end":58856,"line_start":239,"line_end":239,"column_start":12,"column_end":43},"name":"wrapped_internal_write_register","qualname":"<VMLogic>::wrapped_internal_write_register","value":"pub fn wrapped_internal_write_register(&mut Self, u64, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for testing.\n","sig":null,"attributes":[{"value":"/ Convenience function for testing.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":58776,"byte_end":58813,"line_start":238,"line_end":238,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60003,"byte_end":60016,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"read_register","qualname":"<VMLogic>::read_register","value":"pub fn read_register(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","sig":null,"attributes":[{"value":"/ Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":58991,"byte_end":59102,"line_start":243,"line_end":243,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59107,"byte_end":59110,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59115,"byte_end":59130,"line_start":245,"line_end":245,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59135,"byte_end":59138,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59143,"byte_end":59208,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ * `ptr` -- location on guest memory where to copy the data.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59213,"byte_end":59276,"line_start":248,"line_end":248,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59281,"byte_end":59284,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59289,"byte_end":59301,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59306,"byte_end":59309,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ * If the content extends outside the memory allocated to the guest. In Wasmer, it returns `MemoryAccessViolation` error message;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59314,"byte_end":59446,"line_start":252,"line_end":252,"column_start":5,"column_end":137}},{"value":"/ * If `register_id` is pointing to unused register returns `InvalidRegisterId` error message.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59451,"byte_end":59547,"line_start":253,"line_end":253,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59552,"byte_end":59555,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Undefined Behavior","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59560,"byte_end":59584,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59589,"byte_end":59592,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If the content of register extends outside the preallocated memory on the host side, or the pointer points to a","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59597,"byte_end":59712,"line_start":257,"line_end":257,"column_start":5,"column_end":120}},{"value":"/ wrong location this function will overwrite memory that it is not supposed to overwrite causing an undefined behavior.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59717,"byte_end":59839,"line_start":258,"line_end":258,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59844,"byte_end":59847,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59852,"byte_end":59862,"line_start":260,"line_end":260,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59867,"byte_end":59870,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `base + read_register_base + read_register_byte * num_bytes + write_memory_base + write_memory_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":59875,"byte_end":59991,"line_start":262,"line_end":262,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60594,"byte_end":60606,"line_start":280,"line_end":280,"column_start":12,"column_end":24},"name":"register_len","qualname":"<VMLogic>::register_len","value":"pub fn register_len(&mut Self, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the blob stored in the given register.\n * If register is used, then returns the size, which can potentially be zero;\n * If register is not used, returns `u64::MAX`","sig":null,"attributes":[{"value":"/ Returns the size of the blob stored in the given register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60229,"byte_end":60291,"line_start":269,"line_end":269,"column_start":5,"column_end":67}},{"value":"/ * If register is used, then returns the size, which can potentially be zero;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60296,"byte_end":60376,"line_start":270,"line_end":270,"column_start":5,"column_end":85}},{"value":"/ * If register is not used, returns `u64::MAX`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60381,"byte_end":60430,"line_start":271,"line_end":271,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60435,"byte_end":60438,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60443,"byte_end":60458,"line_start":273,"line_end":273,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60463,"byte_end":60466,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60471,"byte_end":60536,"line_start":275,"line_end":275,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60541,"byte_end":60544,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60549,"byte_end":60559,"line_start":277,"line_end":277,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60564,"byte_end":60567,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60572,"byte_end":60582,"line_start":279,"line_end":279,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61449,"byte_end":61463,"line_start":298,"line_end":298,"column_start":12,"column_end":26},"name":"write_register","qualname":"<VMLogic>::write_register","value":"pub fn write_register(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies `data` from the guest memory into the register. If register is unused will initialize\n it. If register has larger capacity than needed for `data` will not re-allocate it. The\n register will lose the pre-existing data if any.","sig":null,"attributes":[{"value":"/ Copies `data` from the guest memory into the register. If register is unused will initialize","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60798,"byte_end":60894,"line_start":285,"line_end":285,"column_start":5,"column_end":101}},{"value":"/ it. If register has larger capacity than needed for `data` will not re-allocate it. The","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60899,"byte_end":60990,"line_start":286,"line_end":286,"column_start":5,"column_end":96}},{"value":"/ register will lose the pre-existing data if any.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":60995,"byte_end":61047,"line_start":287,"line_end":287,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61052,"byte_end":61055,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61060,"byte_end":61075,"line_start":289,"line_end":289,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61080,"byte_end":61083,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id where to write the data;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61088,"byte_end":61149,"line_start":291,"line_end":291,"column_start":5,"column_end":66}},{"value":"/ * `data_len` -- length of the data in bytes;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61154,"byte_end":61202,"line_start":292,"line_end":292,"column_start":5,"column_end":53}},{"value":"/ * `data_ptr` -- pointer in the guest memory where to read the data from.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61207,"byte_end":61283,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61288,"byte_end":61291,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61296,"byte_end":61306,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61311,"byte_end":61314,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ `base + read_memory_base + read_memory_bytes * num_bytes + write_register_base + write_register_bytes * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":61319,"byte_end":61437,"line_start":297,"line_end":297,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69326,"byte_end":69344,"line_start":483,"line_end":483,"column_start":12,"column_end":30},"name":"current_account_id","qualname":"<VMLogic>::current_account_id","value":"pub fn current_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the account id of the current contract that we execute into the register.","sig":null,"attributes":[{"value":"/ Saves the account id of the current contract that we execute into the register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69014,"byte_end":69097,"line_start":474,"line_end":474,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69102,"byte_end":69105,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69110,"byte_end":69122,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69127,"byte_end":69130,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69135,"byte_end":69212,"line_start":478,"line_end":478,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69217,"byte_end":69220,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69225,"byte_end":69235,"line_start":480,"line_end":480,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69240,"byte_end":69243,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69248,"byte_end":69314,"line_start":482,"line_end":482,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70209,"byte_end":70226,"line_start":505,"line_end":505,"column_start":12,"column_end":29},"name":"signer_account_id","qualname":"<VMLogic>::signer_account_id","value":"pub fn signer_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of some transaction that was signed by some account using\n some access key and submitted into a memory pool (either through the wallet using RPC or by\n a node itself). This function returns the id of that account. Saves the bytes of the signer\n account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of some transaction that was signed by some account using","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69582,"byte_end":69675,"line_start":492,"line_end":492,"column_start":5,"column_end":98}},{"value":"/ some access key and submitted into a memory pool (either through the wallet using RPC or by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69680,"byte_end":69775,"line_start":493,"line_end":493,"column_start":5,"column_end":100}},{"value":"/ a node itself). This function returns the id of that account. Saves the bytes of the signer","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69780,"byte_end":69875,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ account id into the register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69880,"byte_end":69913,"line_start":495,"line_end":495,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69918,"byte_end":69921,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69926,"byte_end":69938,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69943,"byte_end":69946,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":69951,"byte_end":70030,"line_start":499,"line_end":499,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70035,"byte_end":70095,"line_start":500,"line_end":500,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70100,"byte_end":70103,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70108,"byte_end":70118,"line_start":502,"line_end":502,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70123,"byte_end":70126,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70131,"byte_end":70197,"line_start":504,"line_end":504,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71247,"byte_end":71264,"line_start":532,"line_end":532,"column_start":12,"column_end":29},"name":"signer_account_pk","qualname":"<VMLogic>::signer_account_pk","value":"pub fn signer_account_pk(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the public key fo the access key that was used by the signer into the register. In\n rare situations smart contract might want to know the exact access key that was used to send\n the original transaction, e.g. to increase the allowance or manipulate with the public key.","sig":null,"attributes":[{"value":"/ Saves the public key fo the access key that was used by the signer into the register. In","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70658,"byte_end":70750,"line_start":520,"line_end":520,"column_start":5,"column_end":97}},{"value":"/ rare situations smart contract might want to know the exact access key that was used to send","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70755,"byte_end":70851,"line_start":521,"line_end":521,"column_start":5,"column_end":101}},{"value":"/ the original transaction, e.g. to increase the allowance or manipulate with the public key.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70856,"byte_end":70951,"line_start":522,"line_end":522,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70956,"byte_end":70959,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70964,"byte_end":70976,"line_start":524,"line_end":524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70981,"byte_end":70984,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":70989,"byte_end":71068,"line_start":526,"line_end":526,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71073,"byte_end":71133,"line_start":527,"line_end":527,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71138,"byte_end":71141,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71146,"byte_end":71156,"line_start":529,"line_end":529,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71161,"byte_end":71164,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71169,"byte_end":71235,"line_start":531,"line_end":531,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72224,"byte_end":72246,"line_start":556,"line_end":556,"column_start":12,"column_end":34},"name":"predecessor_account_id","qualname":"<VMLogic>::predecessor_account_id","value":"pub fn predecessor_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of a receipt, this receipt might be created by a transaction\n that does function invocation on the contract or another contract as a result of\n cross-contract call. Saves the bytes of the predecessor account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of a receipt, this receipt might be created by a transaction","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71649,"byte_end":71745,"line_start":544,"line_end":544,"column_start":5,"column_end":101}},{"value":"/ that does function invocation on the contract or another contract as a result of","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71750,"byte_end":71834,"line_start":545,"line_end":545,"column_start":5,"column_end":89}},{"value":"/ cross-contract call. Saves the bytes of the predecessor account id into the register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71839,"byte_end":71928,"line_start":546,"line_end":546,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71933,"byte_end":71936,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71941,"byte_end":71953,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71958,"byte_end":71961,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":71966,"byte_end":72045,"line_start":550,"line_end":550,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72050,"byte_end":72110,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72115,"byte_end":72118,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72123,"byte_end":72133,"line_start":553,"line_end":553,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72138,"byte_end":72141,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72146,"byte_end":72212,"line_start":555,"line_end":555,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73052,"byte_end":73057,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"input","qualname":"<VMLogic>::input","value":"pub fn input(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads input to the contract call into the register. Input is expected to be in JSON-format.\n If input is provided saves the bytes (potentially zero) of input into register. If input is\n not provided writes 0 bytes into the register.","sig":null,"attributes":[{"value":"/ Reads input to the contract call into the register. Input is expected to be in JSON-format.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72688,"byte_end":72783,"line_start":571,"line_end":571,"column_start":5,"column_end":100}},{"value":"/ If input is provided saves the bytes (potentially zero) of input into register. If input is","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72788,"byte_end":72883,"line_start":572,"line_end":572,"column_start":5,"column_end":100}},{"value":"/ not provided writes 0 bytes into the register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72888,"byte_end":72938,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72943,"byte_end":72946,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72951,"byte_end":72961,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72966,"byte_end":72969,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":72974,"byte_end":73040,"line_start":577,"line_end":577,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73373,"byte_end":73384,"line_start":590,"line_end":590,"column_start":12,"column_end":23},"name":"block_index","qualname":"<VMLogic>::block_index","value":"pub fn block_index(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block height.","sig":null,"attributes":[{"value":"/ Returns the current block height.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73235,"byte_end":73272,"line_start":584,"line_end":584,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73277,"byte_end":73280,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73285,"byte_end":73295,"line_start":586,"line_end":586,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73300,"byte_end":73303,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73308,"byte_end":73318,"line_start":588,"line_end":588,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73668,"byte_end":73683,"line_start":600,"line_end":600,"column_start":12,"column_end":27},"name":"block_timestamp","qualname":"<VMLogic>::block_timestamp","value":"pub fn block_timestamp(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","sig":null,"attributes":[{"value":"/ Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73503,"byte_end":73610,"line_start":595,"line_end":595,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73615,"byte_end":73618,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73623,"byte_end":73633,"line_start":597,"line_end":597,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73638,"byte_end":73641,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73646,"byte_end":73656,"line_start":599,"line_end":599,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73901,"byte_end":73913,"line_start":610,"line_end":610,"column_start":12,"column_end":24},"name":"epoch_height","qualname":"<VMLogic>::epoch_height","value":"pub fn epoch_height(&mut Self) -> Result<EpochHeight>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current epoch height.","sig":null,"attributes":[{"value":"/ Returns the current epoch height.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73806,"byte_end":73843,"line_start":605,"line_end":605,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73848,"byte_end":73851,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73856,"byte_end":73866,"line_start":607,"line_end":607,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73871,"byte_end":73874,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":73879,"byte_end":73889,"line_start":609,"line_end":609,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74395,"byte_end":74410,"line_start":621,"line_end":621,"column_start":12,"column_end":27},"name":"validator_stake","qualname":"<VMLogic>::validator_stake","value":"pub fn validator_stake(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the stake of an account, if the account is currently a validator. Otherwise returns 0.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the stake of an account, if the account is currently a validator. Otherwise returns 0.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74041,"byte_end":74135,"line_start":615,"line_end":615,"column_start":5,"column_end":99}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74140,"byte_end":74209,"line_start":616,"line_end":616,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74214,"byte_end":74217,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74222,"byte_end":74232,"line_start":618,"line_end":618,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74237,"byte_end":74240,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + utf8_decoding_base + utf8_decoding_byte * account_id_len + validator_stake_base`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74245,"byte_end":74383,"line_start":620,"line_end":620,"column_start":5,"column_end":143}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75175,"byte_end":75196,"line_start":641,"line_end":641,"column_start":12,"column_end":33},"name":"validator_total_stake","qualname":"<VMLogic>::validator_total_stake","value":"pub fn validator_total_stake(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the total validator stake of the current epoch.\n Write the u128 value into `stake_ptr`.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the total validator stake of the current epoch.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74867,"byte_end":74922,"line_start":634,"line_end":634,"column_start":5,"column_end":60}},{"value":"/ Write the u128 value into `stake_ptr`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74927,"byte_end":74969,"line_start":635,"line_end":635,"column_start":5,"column_end":47}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":74974,"byte_end":75043,"line_start":636,"line_end":636,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75048,"byte_end":75051,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75056,"byte_end":75066,"line_start":638,"line_end":638,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75071,"byte_end":75074,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + validator_total_stake_base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75079,"byte_end":75163,"line_start":640,"line_end":640,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75907,"byte_end":75920,"line_start":658,"line_end":658,"column_start":12,"column_end":25},"name":"storage_usage","qualname":"<VMLogic>::storage_usage","value":"pub fn storage_usage(&mut Self) -> Result<StorageUsage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes used by the contract if it was saved to the trie as of the\n invocation. This includes:\n * The data written with storage_* functions during current and previous execution;\n * The bytes needed to store the access keys of the given account.\n * The contract code size\n * A small fixed overhead for account metadata.","sig":null,"attributes":[{"value":"/ Returns the number of bytes used by the contract if it was saved to the trie as of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75471,"byte_end":75561,"line_start":648,"line_end":648,"column_start":5,"column_end":95}},{"value":"/ invocation. This includes:","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75566,"byte_end":75596,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/ * The data written with storage_* functions during current and previous execution;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75601,"byte_end":75687,"line_start":650,"line_end":650,"column_start":5,"column_end":91}},{"value":"/ * The bytes needed to store the access keys of the given account.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75692,"byte_end":75761,"line_start":651,"line_end":651,"column_start":5,"column_end":74}},{"value":"/ * The contract code size","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75766,"byte_end":75794,"line_start":652,"line_end":652,"column_start":5,"column_end":33}},{"value":"/ * A small fixed overhead for account metadata.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75799,"byte_end":75849,"line_start":653,"line_end":653,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75854,"byte_end":75857,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75862,"byte_end":75872,"line_start":655,"line_end":655,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75877,"byte_end":75880,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":75885,"byte_end":75895,"line_start":657,"line_end":657,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76355,"byte_end":76370,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"account_balance","qualname":"<VMLogic>::account_balance","value":"pub fn account_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current balance of the given account. This includes the attached_deposit that was\n attached to the transaction.","sig":null,"attributes":[{"value":"/ The current balance of the given account. This includes the attached_deposit that was","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76126,"byte_end":76215,"line_start":667,"line_end":667,"column_start":5,"column_end":94}},{"value":"/ attached to the transaction.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76220,"byte_end":76252,"line_start":668,"line_end":668,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76257,"byte_end":76260,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76265,"byte_end":76275,"line_start":670,"line_end":670,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76280,"byte_end":76283,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76288,"byte_end":76343,"line_start":672,"line_end":672,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76699,"byte_end":76721,"line_start":683,"line_end":683,"column_start":12,"column_end":34},"name":"account_locked_balance","qualname":"<VMLogic>::account_locked_balance","value":"pub fn account_locked_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current amount of tokens locked due to staking.","sig":null,"attributes":[{"value":"/ The current amount of tokens locked due to staking.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76541,"byte_end":76596,"line_start":678,"line_end":678,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76601,"byte_end":76604,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76609,"byte_end":76619,"line_start":680,"line_end":680,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76624,"byte_end":76627,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76632,"byte_end":76687,"line_start":682,"line_end":682,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77225,"byte_end":77241,"line_start":698,"line_end":698,"column_start":12,"column_end":28},"name":"attached_deposit","qualname":"<VMLogic>::attached_deposit","value":"pub fn attached_deposit(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76899,"byte_end":76990,"line_start":688,"line_end":688,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":76995,"byte_end":77025,"line_start":689,"line_end":689,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77030,"byte_end":77033,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77038,"byte_end":77050,"line_start":691,"line_end":691,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77055,"byte_end":77058,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77063,"byte_end":77122,"line_start":693,"line_end":693,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77127,"byte_end":77130,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77135,"byte_end":77145,"line_start":695,"line_end":695,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77150,"byte_end":77153,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77158,"byte_end":77213,"line_start":697,"line_end":697,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77846,"byte_end":77857,"line_start":719,"line_end":719,"column_start":12,"column_end":23},"name":"prepaid_gas","qualname":"<VMLogic>::prepaid_gas","value":"pub fn prepaid_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The amount of gas attached to the call that can be used to pay for the gas fees.","sig":null,"attributes":[{"value":"/ The amount of gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77608,"byte_end":77692,"line_start":710,"line_end":710,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77697,"byte_end":77700,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77705,"byte_end":77717,"line_start":712,"line_end":712,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77722,"byte_end":77725,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77730,"byte_end":77788,"line_start":714,"line_end":714,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77793,"byte_end":77796,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77801,"byte_end":77811,"line_start":716,"line_end":716,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77816,"byte_end":77819,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":77824,"byte_end":77834,"line_start":718,"line_end":718,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78401,"byte_end":78409,"line_start":738,"line_end":738,"column_start":12,"column_end":20},"name":"used_gas","qualname":"<VMLogic>::used_gas","value":"pub fn used_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","sig":null,"attributes":[{"value":"/ The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78153,"byte_end":78247,"line_start":729,"line_end":729,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78252,"byte_end":78255,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78260,"byte_end":78272,"line_start":731,"line_end":731,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78277,"byte_end":78280,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78285,"byte_end":78343,"line_start":733,"line_end":733,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78348,"byte_end":78351,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78356,"byte_end":78366,"line_start":735,"line_end":735,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78371,"byte_end":78374,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78379,"byte_end":78389,"line_start":737,"line_end":737,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79008,"byte_end":79019,"line_start":759,"line_end":759,"column_start":12,"column_end":23},"name":"random_seed","qualname":"<VMLogic>::random_seed","value":"pub fn random_seed(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes random seed into the register.","sig":null,"attributes":[{"value":"/ Writes random seed into the register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78736,"byte_end":78777,"line_start":750,"line_end":750,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78782,"byte_end":78785,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78790,"byte_end":78802,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78807,"byte_end":78810,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ If the size of the registers exceed the set limit `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78815,"byte_end":78893,"line_start":754,"line_end":754,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78898,"byte_end":78901,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78906,"byte_end":78916,"line_start":756,"line_end":756,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78921,"byte_end":78924,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":78929,"byte_end":78996,"line_start":758,"line_end":758,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79610,"byte_end":79616,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"sha256","qualname":"<VMLogic>::sha256","value":"pub fn sha256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using sha256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using sha256 and returns it into `register_id`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79202,"byte_end":79276,"line_start":764,"line_end":764,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79281,"byte_end":79284,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79289,"byte_end":79301,"line_start":766,"line_end":766,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79306,"byte_end":79309,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79314,"byte_end":79408,"line_start":768,"line_end":768,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79413,"byte_end":79456,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79461,"byte_end":79464,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79469,"byte_end":79479,"line_start":771,"line_end":771,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79484,"byte_end":79487,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + sha256_base + sha256_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":79492,"byte_end":79598,"line_start":773,"line_end":773,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80488,"byte_end":80497,"line_start":795,"line_end":795,"column_start":12,"column_end":21},"name":"keccak256","qualname":"<VMLogic>::keccak256","value":"pub fn keccak256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak256 and returns it into `register_id`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80071,"byte_end":80148,"line_start":785,"line_end":785,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80153,"byte_end":80156,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80161,"byte_end":80173,"line_start":787,"line_end":787,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80178,"byte_end":80181,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80186,"byte_end":80280,"line_start":789,"line_end":789,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80285,"byte_end":80328,"line_start":790,"line_end":790,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80333,"byte_end":80336,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80341,"byte_end":80351,"line_start":792,"line_end":792,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80356,"byte_end":80359,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak256_base + keccak256_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80364,"byte_end":80476,"line_start":794,"line_end":794,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81378,"byte_end":81387,"line_start":816,"line_end":816,"column_start":12,"column_end":21},"name":"keccak512","qualname":"<VMLogic>::keccak512","value":"pub fn keccak512(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak512 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak512 and returns it into `register_id`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":80961,"byte_end":81038,"line_start":806,"line_end":806,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81043,"byte_end":81046,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81051,"byte_end":81063,"line_start":808,"line_end":808,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81068,"byte_end":81071,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81076,"byte_end":81170,"line_start":810,"line_end":810,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81175,"byte_end":81218,"line_start":811,"line_end":811,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81223,"byte_end":81226,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81231,"byte_end":81241,"line_start":813,"line_end":813,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81246,"byte_end":81249,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak512_base + keccak512_byte * num_bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81254,"byte_end":81366,"line_start":815,"line_end":815,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":82241,"byte_end":82244,"line_start":834,"line_end":834,"column_start":12,"column_end":15},"name":"gas","qualname":"<VMLogic>::gas","value":"pub fn gas(&mut Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","sig":null,"attributes":[{"value":"/ Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81851,"byte_end":81945,"line_start":827,"line_end":827,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81950,"byte_end":81953,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81958,"byte_end":81970,"line_start":829,"line_end":829,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81975,"byte_end":81978,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ * If passed gas amount somehow overflows internal gas counters returns `IntegerOverflow`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":81983,"byte_end":82076,"line_start":831,"line_end":831,"column_start":5,"column_end":98}},{"value":"/ * If we exceed usage limit imposed on burnt gas returns `GasLimitExceeded`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":82081,"byte_end":82160,"line_start":832,"line_end":832,"column_start":5,"column_end":84}},{"value":"/ * If we exceed the `prepaid_gas` then returns `GasExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":82165,"byte_end":82229,"line_start":833,"line_end":833,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85659,"byte_end":85673,"line_start":901,"line_end":901,"column_start":12,"column_end":26},"name":"promise_create","qualname":"<VMLogic>::promise_create","value":"pub fn promise_create(&mut Self, u64, u64, u64, u64, u64, u64, u64, Gas)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a promise that will execute a method on account with given arguments and attaches\n the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","sig":null,"attributes":[{"value":"/ Creates a promise that will execute a method on account with given arguments and attaches","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":84765,"byte_end":84858,"line_start":882,"line_end":882,"column_start":5,"column_end":98}},{"value":"/ the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":84863,"byte_end":84951,"line_start":883,"line_end":883,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":84956,"byte_end":84959,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":84964,"byte_end":84976,"line_start":885,"line_end":885,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":84981,"byte_end":84984,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":84989,"byte_end":85073,"line_start":887,"line_end":887,"column_start":5,"column_end":89}},{"value":"/ `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the guest","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85078,"byte_end":85173,"line_start":888,"line_end":888,"column_start":5,"column_end":100}},{"value":"/ or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85178,"byte_end":85222,"line_start":889,"line_end":889,"column_start":5,"column_end":49}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85227,"byte_end":85287,"line_start":890,"line_end":890,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85292,"byte_end":85295,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85300,"byte_end":85313,"line_start":892,"line_end":892,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85318,"byte_end":85321,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85326,"byte_end":85418,"line_start":894,"line_end":894,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85423,"byte_end":85434,"line_start":895,"line_end":895,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85439,"byte_end":85442,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85447,"byte_end":85457,"line_start":897,"line_end":897,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85462,"byte_end":85465,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_create` and","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85470,"byte_end":85555,"line_start":899,"line_end":899,"column_start":5,"column_end":90}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":85560,"byte_end":85647,"line_start":900,"line_end":900,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":87211,"byte_end":87223,"line_start":944,"line_end":944,"column_start":12,"column_end":24},"name":"promise_then","qualname":"<VMLogic>::promise_then","value":"pub fn promise_then(&mut Self, u64, u64, u64, u64, u64, u64, u64, u64, u64)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86306,"byte_end":86400,"line_start":925,"line_end":925,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86405,"byte_end":86408,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86413,"byte_end":86425,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86430,"byte_end":86433,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86438,"byte_end":86534,"line_start":929,"line_end":929,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86539,"byte_end":86623,"line_start":930,"line_end":930,"column_start":5,"column_end":89}},{"value":"/   `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86628,"byte_end":86719,"line_start":931,"line_end":931,"column_start":5,"column_end":96}},{"value":"/   guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86724,"byte_end":86776,"line_start":932,"line_end":932,"column_start":5,"column_end":57}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86781,"byte_end":86841,"line_start":933,"line_end":933,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86846,"byte_end":86849,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86854,"byte_end":86867,"line_start":935,"line_end":935,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86872,"byte_end":86875,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86880,"byte_end":86972,"line_start":937,"line_end":937,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86977,"byte_end":86988,"line_start":938,"line_end":938,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":86993,"byte_end":86996,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":87001,"byte_end":87011,"line_start":940,"line_end":940,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":87016,"byte_end":87019,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_then` and","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":87024,"byte_end":87107,"line_start":942,"line_end":942,"column_start":5,"column_end":88}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":87112,"byte_end":87199,"line_start":943,"line_end":943,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":89200,"byte_end":89211,"line_start":995,"line_end":995,"column_start":12,"column_end":23},"name":"promise_and","qualname":"<VMLogic>::promise_and","value":"pub fn promise_and(&mut Self, u64, u64) -> Result<PromiseIndex>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise which completes when time all promises passed as arguments complete.\n Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with\n `promise_idx_count` denoting the number of elements. The array contains indices of promises\n that need to be waited on jointly.","sig":null,"attributes":[{"value":"/ Creates a new promise which completes when time all promises passed as arguments complete.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":87905,"byte_end":87999,"line_start":970,"line_end":970,"column_start":5,"column_end":99}},{"value":"/ Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88004,"byte_end":88099,"line_start":971,"line_end":971,"column_start":5,"column_end":100}},{"value":"/ `promise_idx_count` denoting the number of elements. The array contains indices of promises","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88104,"byte_end":88199,"line_start":972,"line_end":972,"column_start":5,"column_end":100}},{"value":"/ that need to be waited on jointly.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88204,"byte_end":88242,"line_start":973,"line_end":973,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88247,"byte_end":88250,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88255,"byte_end":88267,"line_start":975,"line_end":975,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88272,"byte_end":88275,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ * If `promise_ids_ptr + 8 * promise_idx_count` extend outside the guest memory returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88280,"byte_end":88370,"line_start":977,"line_end":977,"column_start":5,"column_end":95}},{"value":"/   `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88375,"byte_end":88405,"line_start":978,"line_end":978,"column_start":5,"column_end":35}},{"value":"/ * If any of the promises in the array do not correspond to existing promises returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88410,"byte_end":88498,"line_start":979,"line_end":979,"column_start":5,"column_end":93}},{"value":"/   `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88503,"byte_end":88531,"line_start":980,"line_end":980,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88536,"byte_end":88596,"line_start":981,"line_end":981,"column_start":5,"column_end":65}},{"value":"/ * If the total number of receipt dependencies exceeds `max_number_input_data_dependencies`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88601,"byte_end":88695,"line_start":982,"line_end":982,"column_start":5,"column_end":99}},{"value":"/   limit returns `NumInputDataDependenciesExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88700,"byte_end":88755,"line_start":983,"line_end":983,"column_start":5,"column_end":60}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88760,"byte_end":88851,"line_start":984,"line_end":984,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88856,"byte_end":88892,"line_start":985,"line_end":985,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88897,"byte_end":88900,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88905,"byte_end":88918,"line_start":987,"line_end":987,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88923,"byte_end":88926,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":88931,"byte_end":89023,"line_start":989,"line_end":989,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":89028,"byte_end":89039,"line_start":990,"line_end":990,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":89044,"byte_end":89047,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":89052,"byte_end":89062,"line_start":992,"line_end":992,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":89067,"byte_end":89070,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ `base + promise_and_base + promise_and_per_promise * num_promises + cost of reading promise ids from memory`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":89075,"byte_end":89188,"line_start":994,"line_end":994,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91973,"byte_end":91993,"line_start":1063,"line_end":1063,"column_start":12,"column_end":32},"name":"promise_batch_create","qualname":"<VMLogic>::promise_batch_create","value":"pub fn promise_batch_create(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached to it.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached to it.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91159,"byte_end":91247,"line_start":1044,"line_end":1044,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91252,"byte_end":91255,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91260,"byte_end":91272,"line_start":1046,"line_end":1046,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91277,"byte_end":91280,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91285,"byte_end":91374,"line_start":1048,"line_end":1048,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91379,"byte_end":91415,"line_start":1049,"line_end":1049,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91420,"byte_end":91480,"line_start":1050,"line_end":1050,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91485,"byte_end":91576,"line_start":1051,"line_end":1051,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91581,"byte_end":91617,"line_start":1052,"line_end":1052,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91622,"byte_end":91625,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91630,"byte_end":91643,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91648,"byte_end":91651,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91656,"byte_end":91748,"line_start":1056,"line_end":1056,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91753,"byte_end":91764,"line_start":1057,"line_end":1057,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91769,"byte_end":91772,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91777,"byte_end":91787,"line_start":1059,"line_end":1059,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91792,"byte_end":91795,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + cost of reading and decoding the account id + dispatch cost of the receipt`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91800,"byte_end":91901,"line_start":1061,"line_end":1061,"column_start":5,"column_end":106}},{"value":"/ `used_gas := burnt_gas + exec cost of the receipt`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":91906,"byte_end":91961,"line_start":1062,"line_end":1062,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93760,"byte_end":93778,"line_start":1105,"line_end":1105,"column_start":12,"column_end":30},"name":"promise_batch_then","qualname":"<VMLogic>::promise_batch_then","value":"pub fn promise_batch_then(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached, that is\n executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached, that is","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":92773,"byte_end":92863,"line_start":1084,"line_end":1084,"column_start":5,"column_end":95}},{"value":"/ executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":92868,"byte_end":92932,"line_start":1085,"line_end":1085,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":92937,"byte_end":92940,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":92945,"byte_end":92957,"line_start":1087,"line_end":1087,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":92962,"byte_end":92965,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":92970,"byte_end":93066,"line_start":1089,"line_end":1089,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93071,"byte_end":93160,"line_start":1090,"line_end":1090,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93165,"byte_end":93201,"line_start":1091,"line_end":1091,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93206,"byte_end":93266,"line_start":1092,"line_end":1092,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93271,"byte_end":93362,"line_start":1093,"line_end":1093,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93367,"byte_end":93403,"line_start":1094,"line_end":1094,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93408,"byte_end":93411,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93416,"byte_end":93429,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93434,"byte_end":93437,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93442,"byte_end":93534,"line_start":1098,"line_end":1098,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93539,"byte_end":93550,"line_start":1099,"line_end":1099,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93555,"byte_end":93558,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93563,"byte_end":93573,"line_start":1101,"line_end":1101,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93578,"byte_end":93581,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ `base + cost of reading and decoding the account id + dispatch&execution cost of the receipt","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93586,"byte_end":93682,"line_start":1103,"line_end":1103,"column_start":5,"column_end":101}},{"value":"/  + dispatch&execution base cost for each data dependency`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":93687,"byte_end":93748,"line_start":1104,"line_end":1104,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96986,"byte_end":97021,"line_start":1185,"line_end":1185,"column_start":12,"column_end":47},"name":"promise_batch_action_create_account","qualname":"<VMLogic>::promise_batch_action_create_account","value":"pub fn promise_batch_action_create_account(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `CreateAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `CreateAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96375,"byte_end":96466,"line_start":1171,"line_end":1171,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96471,"byte_end":96489,"line_start":1172,"line_end":1172,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96494,"byte_end":96497,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96502,"byte_end":96514,"line_start":1174,"line_end":1174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96519,"byte_end":96522,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96527,"byte_end":96623,"line_start":1176,"line_end":1176,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96628,"byte_end":96712,"line_start":1177,"line_end":1177,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96717,"byte_end":96778,"line_start":1178,"line_end":1178,"column_start":5,"column_end":66}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96783,"byte_end":96843,"line_start":1179,"line_end":1179,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96848,"byte_end":96851,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96856,"byte_end":96866,"line_start":1181,"line_end":1181,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96871,"byte_end":96874,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action fee`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96879,"byte_end":96924,"line_start":1183,"line_end":1183,"column_start":5,"column_end":50}},{"value":"/ `used_gas := burnt_gas + exec action fee`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":96929,"byte_end":96974,"line_start":1184,"line_end":1184,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98649,"byte_end":98685,"line_start":1222,"line_end":1222,"column_start":12,"column_end":48},"name":"promise_batch_action_deploy_contract","qualname":"<VMLogic>::promise_batch_action_deploy_contract","value":"pub fn promise_batch_action_deploy_contract(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeployContract` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeployContract` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":97686,"byte_end":97778,"line_start":1205,"line_end":1205,"column_start":5,"column_end":97}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":97783,"byte_end":97801,"line_start":1206,"line_end":1206,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":97806,"byte_end":97809,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":97814,"byte_end":97826,"line_start":1208,"line_end":1208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":97831,"byte_end":97834,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":97839,"byte_end":97935,"line_start":1210,"line_end":1210,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":97940,"byte_end":98024,"line_start":1211,"line_end":1211,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98029,"byte_end":98090,"line_start":1212,"line_end":1212,"column_start":5,"column_end":66}},{"value":"/ * If `code_len + code_ptr` points outside the memory of the guest or host returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98095,"byte_end":98180,"line_start":1213,"line_end":1213,"column_start":5,"column_end":90}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98185,"byte_end":98213,"line_start":1214,"line_end":1214,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98218,"byte_end":98278,"line_start":1215,"line_end":1215,"column_start":5,"column_end":65}},{"value":"/ * If the contract code length exceeds `max_contract_size` returns `ContractSizeExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98283,"byte_end":98376,"line_start":1216,"line_end":1216,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98381,"byte_end":98384,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98389,"byte_end":98399,"line_start":1218,"line_end":1218,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98404,"byte_end":98407,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory `","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98412,"byte_end":98543,"line_start":1220,"line_end":1220,"column_start":5,"column_end":136}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":98548,"byte_end":98637,"line_start":1221,"line_end":1221,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":101077,"byte_end":101111,"line_start":1281,"line_end":1281,"column_start":12,"column_end":46},"name":"promise_batch_action_function_call","qualname":"<VMLogic>::promise_batch_action_function_call","value":"pub fn promise_batch_action_function_call(&mut Self, u64, u64, u64, u64, u64,\n                                          u64, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `FunctionCall` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `FunctionCall` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100062,"byte_end":100152,"line_start":1263,"line_end":1263,"column_start":5,"column_end":95}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100157,"byte_end":100175,"line_start":1264,"line_end":1264,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100180,"byte_end":100183,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100188,"byte_end":100200,"line_start":1266,"line_end":1266,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100205,"byte_end":100208,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100213,"byte_end":100309,"line_start":1268,"line_end":1268,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100314,"byte_end":100398,"line_start":1269,"line_end":1269,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100403,"byte_end":100464,"line_start":1270,"line_end":1270,"column_start":5,"column_end":66}},{"value":"/ * If `method_name_len + method_name_ptr` or `arguments_len + arguments_ptr` or","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100469,"byte_end":100551,"line_start":1271,"line_end":1271,"column_start":5,"column_end":87}},{"value":"/ `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100556,"byte_end":100632,"line_start":1272,"line_end":1272,"column_start":5,"column_end":81}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100637,"byte_end":100665,"line_start":1273,"line_end":1273,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100670,"byte_end":100730,"line_start":1274,"line_end":1274,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100735,"byte_end":100738,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100743,"byte_end":100753,"line_start":1276,"line_end":1276,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100758,"byte_end":100761,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100766,"byte_end":100895,"line_start":1278,"line_end":1278,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_name and arguments from the memory`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100900,"byte_end":100971,"line_start":1279,"line_end":1279,"column_start":5,"column_end":76}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":100976,"byte_end":101065,"line_start":1280,"line_end":1280,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103649,"byte_end":103678,"line_start":1345,"line_end":1345,"column_start":12,"column_end":41},"name":"promise_batch_action_transfer","qualname":"<VMLogic>::promise_batch_action_transfer","value":"pub fn promise_batch_action_transfer(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Transfer` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Transfer` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":102796,"byte_end":102882,"line_start":1329,"line_end":1329,"column_start":5,"column_end":91}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":102887,"byte_end":102905,"line_start":1330,"line_end":1330,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":102910,"byte_end":102913,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":102918,"byte_end":102930,"line_start":1332,"line_end":1332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":102935,"byte_end":102938,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":102943,"byte_end":103039,"line_start":1334,"line_end":1334,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103044,"byte_end":103128,"line_start":1335,"line_end":1335,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103133,"byte_end":103194,"line_start":1336,"line_end":1336,"column_start":5,"column_end":66}},{"value":"/ * If `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103199,"byte_end":103280,"line_start":1337,"line_end":1337,"column_start":5,"column_end":86}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103285,"byte_end":103313,"line_start":1338,"line_end":1338,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103318,"byte_end":103378,"line_start":1339,"line_end":1339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103383,"byte_end":103386,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103391,"byte_end":103401,"line_start":1341,"line_end":1341,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103406,"byte_end":103409,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading u128 from memory `","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103414,"byte_end":103543,"line_start":1343,"line_end":1343,"column_start":5,"column_end":134}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":103548,"byte_end":103637,"line_start":1344,"line_end":1344,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105461,"byte_end":105487,"line_start":1390,"line_end":1390,"column_start":12,"column_end":38},"name":"promise_batch_action_stake","qualname":"<VMLogic>::promise_batch_action_stake","value":"pub fn promise_batch_action_stake(&mut Self, u64, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Stake` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Stake` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104471,"byte_end":104554,"line_start":1373,"line_end":1373,"column_start":5,"column_end":88}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104559,"byte_end":104577,"line_start":1374,"line_end":1374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104582,"byte_end":104585,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104590,"byte_end":104602,"line_start":1376,"line_end":1376,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104607,"byte_end":104610,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104615,"byte_end":104711,"line_start":1378,"line_end":1378,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104716,"byte_end":104800,"line_start":1379,"line_end":1379,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104805,"byte_end":104866,"line_start":1380,"line_end":1380,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104871,"byte_end":104963,"line_start":1381,"line_end":1381,"column_start":5,"column_end":97}},{"value":"/ * If `amount_ptr + 16` or `public_key_len + public_key_ptr` points outside the memory of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":104968,"byte_end":105064,"line_start":1382,"line_end":1382,"column_start":5,"column_end":101}},{"value":"/ guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105069,"byte_end":105119,"line_start":1383,"line_end":1383,"column_start":5,"column_end":55}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105124,"byte_end":105184,"line_start":1384,"line_end":1384,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105189,"byte_end":105192,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105197,"byte_end":105207,"line_start":1386,"line_end":1386,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105212,"byte_end":105215,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105220,"byte_end":105355,"line_start":1388,"line_end":1388,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":105360,"byte_end":105449,"line_start":1389,"line_end":1389,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107415,"byte_end":107460,"line_start":1436,"line_end":1436,"column_start":12,"column_end":57},"name":"promise_batch_action_add_key_with_full_access","qualname":"<VMLogic>::promise_batch_action_add_key_with_full_access","value":"pub fn promise_batch_action_add_key_with_full_access(&mut Self, u64, u64, u64,\n                                                     u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FullAccess` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106395,"byte_end":106479,"line_start":1419,"line_end":1419,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FullAccess` permission.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106484,"byte_end":106552,"line_start":1420,"line_end":1420,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106557,"byte_end":106560,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106565,"byte_end":106577,"line_start":1422,"line_end":1422,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106582,"byte_end":106585,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106590,"byte_end":106686,"line_start":1424,"line_end":1424,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106691,"byte_end":106775,"line_start":1425,"line_end":1425,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106780,"byte_end":106841,"line_start":1426,"line_end":1426,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106846,"byte_end":106938,"line_start":1427,"line_end":1427,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":106943,"byte_end":107032,"line_start":1428,"line_end":1428,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107037,"byte_end":107073,"line_start":1429,"line_end":1429,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107078,"byte_end":107138,"line_start":1430,"line_end":1430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107143,"byte_end":107146,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107151,"byte_end":107161,"line_start":1432,"line_end":1432,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107166,"byte_end":107169,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107174,"byte_end":107309,"line_start":1434,"line_end":1434,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":107314,"byte_end":107403,"line_start":1435,"line_end":1435,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109610,"byte_end":109657,"line_start":1483,"line_end":1483,"column_start":12,"column_end":59},"name":"promise_batch_action_add_key_with_function_call","qualname":"<VMLogic>::promise_batch_action_add_key_with_function_call","value":"pub fn promise_batch_action_add_key_with_function_call(&mut Self, u64, u64,\n                                                       u64, u64, u64, u64,\n                                                       u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FunctionCall` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108365,"byte_end":108449,"line_start":1464,"line_end":1464,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FunctionCall` permission.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108454,"byte_end":108524,"line_start":1465,"line_end":1465,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108529,"byte_end":108532,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108537,"byte_end":108549,"line_start":1467,"line_end":1467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108554,"byte_end":108557,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108562,"byte_end":108658,"line_start":1469,"line_end":1469,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108663,"byte_end":108747,"line_start":1470,"line_end":1470,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108752,"byte_end":108813,"line_start":1471,"line_end":1471,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108818,"byte_end":108910,"line_start":1472,"line_end":1472,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr`, `allowance_ptr + 16`,","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108915,"byte_end":108980,"line_start":1473,"line_end":1473,"column_start":5,"column_end":70}},{"value":"/ `receiver_id_len + receiver_id_ptr` or `method_names_len + method_names_ptr` points outside","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":108985,"byte_end":109080,"line_start":1474,"line_end":1474,"column_start":5,"column_end":100}},{"value":"/ the memory of the guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109085,"byte_end":109153,"line_start":1475,"line_end":1475,"column_start":5,"column_end":73}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109158,"byte_end":109218,"line_start":1476,"line_end":1476,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109223,"byte_end":109226,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109231,"byte_end":109241,"line_start":1478,"line_end":1478,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109246,"byte_end":109249,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109254,"byte_end":109383,"line_start":1480,"line_end":1480,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_names and public key from the memory + cost of reading and parsing account name`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109388,"byte_end":109504,"line_start":1481,"line_end":1481,"column_start":5,"column_end":121}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":109509,"byte_end":109598,"line_start":1482,"line_end":1482,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112614,"byte_end":112645,"line_start":1554,"line_end":1554,"column_start":12,"column_end":43},"name":"promise_batch_action_delete_key","qualname":"<VMLogic>::promise_batch_action_delete_key","value":"pub fn promise_batch_action_delete_key(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteKey` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111641,"byte_end":111728,"line_start":1537,"line_end":1537,"column_start":5,"column_end":92}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111733,"byte_end":111751,"line_start":1538,"line_end":1538,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111756,"byte_end":111759,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111764,"byte_end":111776,"line_start":1540,"line_end":1540,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111781,"byte_end":111784,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111789,"byte_end":111885,"line_start":1542,"line_end":1542,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111890,"byte_end":111974,"line_start":1543,"line_end":1543,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":111979,"byte_end":112040,"line_start":1544,"line_end":1544,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112045,"byte_end":112137,"line_start":1545,"line_end":1545,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112142,"byte_end":112231,"line_start":1546,"line_end":1546,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112236,"byte_end":112272,"line_start":1547,"line_end":1547,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112277,"byte_end":112337,"line_start":1548,"line_end":1548,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112342,"byte_end":112345,"line_start":1549,"line_end":1549,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112350,"byte_end":112360,"line_start":1550,"line_end":1550,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112365,"byte_end":112368,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112373,"byte_end":112508,"line_start":1552,"line_end":1552,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":112513,"byte_end":112602,"line_start":1553,"line_end":1553,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":114384,"byte_end":114419,"line_start":1597,"line_end":1597,"column_start":12,"column_end":47},"name":"promise_batch_action_delete_account","qualname":"<VMLogic>::promise_batch_action_delete_account","value":"pub fn promise_batch_action_delete_account(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113484,"byte_end":113575,"line_start":1581,"line_end":1581,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113580,"byte_end":113598,"line_start":1582,"line_end":1582,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113603,"byte_end":113606,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113611,"byte_end":113623,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113628,"byte_end":113631,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113636,"byte_end":113732,"line_start":1586,"line_end":1586,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113737,"byte_end":113821,"line_start":1587,"line_end":1587,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113826,"byte_end":113887,"line_start":1588,"line_end":1588,"column_start":5,"column_end":66}},{"value":"/ * If `beneficiary_id_len + beneficiary_id_ptr` points outside the memory of the guest or","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113892,"byte_end":113984,"line_start":1589,"line_end":1589,"column_start":5,"column_end":97}},{"value":"/ host returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":113989,"byte_end":114030,"line_start":1590,"line_end":1590,"column_start":5,"column_end":46}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":114035,"byte_end":114095,"line_start":1591,"line_end":1591,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":114100,"byte_end":114103,"line_start":1592,"line_end":1592,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":114108,"byte_end":114118,"line_start":1593,"line_end":1593,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":114123,"byte_end":114126,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading and parsing account id from memory `","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":114131,"byte_end":114278,"line_start":1595,"line_end":1595,"column_start":5,"column_end":152}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":114283,"byte_end":114372,"line_start":1596,"line_end":1596,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115929,"byte_end":115950,"line_start":1639,"line_end":1639,"column_start":12,"column_end":33},"name":"promise_results_count","qualname":"<VMLogic>::promise_results_count","value":"pub fn promise_results_count(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the number of complete and\n incomplete callbacks.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115304,"byte_end":115399,"line_start":1625,"line_end":1625,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the number of complete and","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115404,"byte_end":115491,"line_start":1626,"line_end":1626,"column_start":5,"column_end":92}},{"value":"/ incomplete callbacks.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115496,"byte_end":115521,"line_start":1627,"line_end":1627,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115526,"byte_end":115529,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ Note, we are only going to have incomplete callbacks once we have promise_or combinator.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115534,"byte_end":115626,"line_start":1629,"line_end":1629,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115631,"byte_end":115634,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115639,"byte_end":115642,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ * If there is only one callback returns `1`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115647,"byte_end":115695,"line_start":1632,"line_end":1632,"column_start":5,"column_end":53}},{"value":"/ * If there are multiple callbacks (e.g. created through `promise_and`) returns their number;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115700,"byte_end":115796,"line_start":1633,"line_end":1633,"column_start":5,"column_end":101}},{"value":"/ * If the function was called not through the callback returns `0`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115801,"byte_end":115871,"line_start":1634,"line_end":1634,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115876,"byte_end":115879,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115884,"byte_end":115894,"line_start":1636,"line_end":1636,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115899,"byte_end":115902,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":115907,"byte_end":115917,"line_start":1638,"line_end":1638,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":117302,"byte_end":117316,"line_start":1672,"line_end":1672,"column_start":12,"column_end":26},"name":"promise_result","qualname":"<VMLogic>::promise_result","value":"pub fn promise_result(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the result in blob format and\n places it into the register.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116275,"byte_end":116370,"line_start":1650,"line_end":1650,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the result in blob format and","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116375,"byte_end":116465,"line_start":1651,"line_end":1651,"column_start":5,"column_end":95}},{"value":"/ places it into the register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116470,"byte_end":116502,"line_start":1652,"line_end":1652,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116507,"byte_end":116510,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ * If promise result is complete and successful copies its blob into the register;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116515,"byte_end":116600,"line_start":1654,"line_end":1654,"column_start":5,"column_end":90}},{"value":"/ * If promise result is complete and failed or incomplete keeps register unused;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116605,"byte_end":116688,"line_start":1655,"line_end":1655,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116693,"byte_end":116696,"line_start":1656,"line_end":1656,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116701,"byte_end":116714,"line_start":1657,"line_end":1657,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116719,"byte_end":116722,"line_start":1658,"line_end":1658,"column_start":5,"column_end":8}},{"value":"/ * If promise result is not complete returns `0`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116727,"byte_end":116779,"line_start":1659,"line_end":1659,"column_start":5,"column_end":57}},{"value":"/ * If promise result is complete and successful returns `1`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116784,"byte_end":116847,"line_start":1660,"line_end":1660,"column_start":5,"column_end":68}},{"value":"/ * If promise result is complete and failed returns `2`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116852,"byte_end":116911,"line_start":1661,"line_end":1661,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116916,"byte_end":116919,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116924,"byte_end":116936,"line_start":1663,"line_end":1663,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116941,"byte_end":116944,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ * If `result_id` does not correspond to an existing result returns `InvalidPromiseResultIndex`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":116949,"byte_end":117048,"line_start":1665,"line_end":1665,"column_start":5,"column_end":104}},{"value":"/ * If copying the blob exhausts the memory limit it returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":117053,"byte_end":117140,"line_start":1666,"line_end":1666,"column_start":5,"column_end":92}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":117145,"byte_end":117205,"line_start":1667,"line_end":1667,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":117210,"byte_end":117213,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":117218,"byte_end":117228,"line_start":1669,"line_end":1669,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":117233,"byte_end":117236,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ `base + cost of writing data into a register`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":117241,"byte_end":117290,"line_start":1671,"line_end":1671,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118439,"byte_end":118453,"line_start":1704,"line_end":1704,"column_start":12,"column_end":26},"name":"promise_return","qualname":"<VMLogic>::promise_return","value":"pub fn promise_return(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" When promise `promise_idx` finishes executing its result is considered to be the result of\n the current function.","sig":null,"attributes":[{"value":"/ When promise `promise_idx` finishes executing its result is considered to be the result of","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118041,"byte_end":118135,"line_start":1693,"line_end":1693,"column_start":5,"column_end":99}},{"value":"/ the current function.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118140,"byte_end":118165,"line_start":1694,"line_end":1694,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118170,"byte_end":118173,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118178,"byte_end":118190,"line_start":1696,"line_end":1696,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118195,"byte_end":118198,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118203,"byte_end":118299,"line_start":1698,"line_end":1698,"column_start":5,"column_end":101}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118304,"byte_end":118364,"line_start":1699,"line_end":1699,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118369,"byte_end":118372,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118377,"byte_end":118387,"line_start":1701,"line_end":1701,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118392,"byte_end":118395,"line_start":1702,"line_end":1702,"column_start":5,"column_end":8}},{"value":"/ `base + promise_return`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":118400,"byte_end":118427,"line_start":1703,"line_end":1703,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119827,"byte_end":119839,"line_start":1740,"line_end":1740,"column_start":12,"column_end":24},"name":"value_return","qualname":"<VMLogic>::value_return","value":"pub fn value_return(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blob of data as the return value of the contract.","sig":null,"attributes":[{"value":"/ Sets the blob of data as the return value of the contract.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119286,"byte_end":119348,"line_start":1729,"line_end":1729,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119353,"byte_end":119356,"line_start":1730,"line_end":1730,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119361,"byte_end":119373,"line_start":1731,"line_end":1731,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119378,"byte_end":119381,"line_start":1732,"line_end":1732,"column_start":5,"column_end":8}},{"value":"/ * If `value_len + value_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119386,"byte_end":119482,"line_start":1733,"line_end":1733,"column_start":5,"column_end":101}},{"value":"/   returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119487,"byte_end":119525,"line_start":1734,"line_end":1734,"column_start":5,"column_end":43}},{"value":"/ * if the length of the returned data exceeds `max_length_returned_data` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119530,"byte_end":119613,"line_start":1735,"line_end":1735,"column_start":5,"column_end":88}},{"value":"/   `ReturnedValueLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119618,"byte_end":119654,"line_start":1736,"line_end":1736,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119659,"byte_end":119662,"line_start":1737,"line_end":1737,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119667,"byte_end":119677,"line_start":1738,"line_end":1738,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading return value from memory or register + dispatch&exec cost per byte of the data sent * num data receivers`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":119682,"byte_end":119815,"line_start":1739,"line_end":1739,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122011,"byte_end":122016,"line_start":1784,"line_end":1784,"column_start":12,"column_end":17},"name":"panic","qualname":"<VMLogic>::panic","value":"pub fn panic(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Terminates the execution of the program with panic `GuestPanic`.","sig":null,"attributes":[{"value":"/ Terminates the execution of the program with panic `GuestPanic`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":121885,"byte_end":121953,"line_start":1779,"line_end":1779,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":121958,"byte_end":121961,"line_start":1780,"line_end":1780,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":121966,"byte_end":121976,"line_start":1781,"line_end":1781,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":121981,"byte_end":121984,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":121989,"byte_end":121999,"line_start":1783,"line_end":1783,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122683,"byte_end":122693,"line_start":1800,"line_end":1800,"column_start":12,"column_end":22},"name":"panic_utf8","qualname":"<VMLogic>::panic_utf8","value":"pub fn panic_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Guest panics with the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Guest panics with the UTF-8 encoded string.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122189,"byte_end":122236,"line_start":1789,"line_end":1789,"column_start":5,"column_end":52}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122241,"byte_end":122330,"line_start":1790,"line_end":1790,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122335,"byte_end":122338,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122343,"byte_end":122355,"line_start":1792,"line_end":1792,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122360,"byte_end":122363,"line_start":1793,"line_end":1793,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122368,"byte_end":122453,"line_start":1794,"line_end":1794,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122458,"byte_end":122505,"line_start":1795,"line_end":1795,"column_start":5,"column_end":52}},{"value":"/ * If string is longer than `max_log_len` returns `TotalLogLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122510,"byte_end":122588,"line_start":1796,"line_end":1796,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122593,"byte_end":122596,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122601,"byte_end":122611,"line_start":1798,"line_end":1798,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading and decoding a utf8 string`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122616,"byte_end":122671,"line_start":1799,"line_end":1799,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123547,"byte_end":123555,"line_start":1820,"line_end":1820,"column_start":12,"column_end":20},"name":"log_utf8","qualname":"<VMLogic>::log_utf8","value":"pub fn log_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Logs the UTF-8 encoded string.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122883,"byte_end":122917,"line_start":1805,"line_end":1805,"column_start":5,"column_end":39}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":122922,"byte_end":123011,"line_start":1806,"line_end":1806,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123016,"byte_end":123019,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123024,"byte_end":123036,"line_start":1808,"line_end":1808,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123041,"byte_end":123044,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123049,"byte_end":123134,"line_start":1810,"line_end":1810,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123139,"byte_end":123186,"line_start":1811,"line_end":1811,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123191,"byte_end":123284,"line_start":1812,"line_end":1812,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123289,"byte_end":123320,"line_start":1813,"line_end":1813,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123325,"byte_end":123400,"line_start":1814,"line_end":1814,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123405,"byte_end":123434,"line_start":1815,"line_end":1815,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123439,"byte_end":123442,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123447,"byte_end":123457,"line_start":1817,"line_end":1817,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123462,"byte_end":123465,"line_start":1818,"line_end":1818,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte + num_bytes + utf8 decoding cost`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123470,"byte_end":123535,"line_start":1819,"line_end":1819,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124597,"byte_end":124606,"line_start":1844,"line_end":1844,"column_start":12,"column_end":21},"name":"log_utf16","qualname":"<VMLogic>::log_utf16","value":"pub fn log_utf16(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as\n null-terminated with two-byte sequence of `0x00 0x00`.","sig":null,"attributes":[{"value":"/ Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":123913,"byte_end":123995,"line_start":1829,"line_end":1829,"column_start":5,"column_end":87}},{"value":"/ null-terminated with two-byte sequence of `0x00 0x00`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124000,"byte_end":124058,"line_start":1830,"line_end":1830,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124063,"byte_end":124066,"line_start":1831,"line_end":1831,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124071,"byte_end":124083,"line_start":1832,"line_end":1832,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124088,"byte_end":124091,"line_start":1833,"line_end":1833,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124096,"byte_end":124181,"line_start":1834,"line_end":1834,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-16 returns `BadUtf16`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124186,"byte_end":124235,"line_start":1835,"line_end":1835,"column_start":5,"column_end":54}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124240,"byte_end":124333,"line_start":1836,"line_end":1836,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124338,"byte_end":124369,"line_start":1837,"line_end":1837,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124374,"byte_end":124449,"line_start":1838,"line_end":1838,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124454,"byte_end":124483,"line_start":1839,"line_end":1839,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124488,"byte_end":124491,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124496,"byte_end":124506,"line_start":1841,"line_end":1841,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124511,"byte_end":124514,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":124519,"byte_end":124585,"line_start":1843,"line_end":1843,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125775,"byte_end":125780,"line_start":1869,"line_end":1869,"column_start":12,"column_end":17},"name":"abort","qualname":"<VMLogic>::abort","value":"pub fn abort(&mut Self, u32, u32, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Special import kept for compatibility with AssemblyScript contracts. Not called by smart\n contracts directly, but instead called by the code generated by AssemblyScript.","sig":null,"attributes":[{"value":"/ Special import kept for compatibility with AssemblyScript contracts. Not called by smart","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125057,"byte_end":125149,"line_start":1854,"line_end":1854,"column_start":5,"column_end":97}},{"value":"/ contracts directly, but instead called by the code generated by AssemblyScript.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125154,"byte_end":125237,"line_start":1855,"line_end":1855,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125242,"byte_end":125245,"line_start":1856,"line_end":1856,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125250,"byte_end":125262,"line_start":1857,"line_end":1857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125267,"byte_end":125270,"line_start":1858,"line_end":1858,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125275,"byte_end":125360,"line_start":1859,"line_end":1859,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125365,"byte_end":125412,"line_start":1860,"line_end":1860,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125417,"byte_end":125510,"line_start":1861,"line_end":1861,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125515,"byte_end":125546,"line_start":1862,"line_end":1862,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125551,"byte_end":125626,"line_start":1863,"line_end":1863,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125631,"byte_end":125660,"line_start":1864,"line_end":1864,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125665,"byte_end":125668,"line_start":1865,"line_end":1865,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125673,"byte_end":125683,"line_start":1866,"line_end":1866,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125688,"byte_end":125691,"line_start":1867,"line_end":1867,"column_start":5,"column_end":8}},{"value":"/ `base +  log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":125696,"byte_end":125763,"line_start":1868,"line_end":1868,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128853,"byte_end":128866,"line_start":1935,"line_end":1935,"column_start":12,"column_end":25},"name":"storage_write","qualname":"<VMLogic>::storage_write","value":"pub fn storage_write(&mut Self, u64, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Writes key-value into storage.\n * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;\n * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","sig":null,"attributes":[{"value":"/ Writes key-value into storage.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":127622,"byte_end":127656,"line_start":1914,"line_end":1914,"column_start":5,"column_end":39}},{"value":"/ * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":127661,"byte_end":127764,"line_start":1915,"line_end":1915,"column_start":5,"column_end":108}},{"value":"/ * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":127769,"byte_end":127878,"line_start":1916,"line_end":1916,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":127883,"byte_end":127886,"line_start":1917,"line_end":1917,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":127891,"byte_end":127903,"line_start":1918,"line_end":1918,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":127908,"byte_end":127911,"line_start":1919,"line_end":1919,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` or `value_len + value_ptr` exceeds the memory container or points","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":127916,"byte_end":128010,"line_start":1920,"line_end":1920,"column_start":5,"column_end":99}},{"value":"/   to an unused register it returns `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128015,"byte_end":128078,"line_start":1921,"line_end":1921,"column_start":5,"column_end":68}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128083,"byte_end":128179,"line_start":1922,"line_end":1922,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128184,"byte_end":128214,"line_start":1923,"line_end":1923,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128219,"byte_end":128311,"line_start":1924,"line_end":1924,"column_start":5,"column_end":97}},{"value":"/ * If the length of the value exceeds `max_length_storage_value` returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128316,"byte_end":128391,"line_start":1925,"line_end":1925,"column_start":5,"column_end":80}},{"value":"/   `ValueLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128396,"byte_end":128424,"line_start":1926,"line_end":1926,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128429,"byte_end":128490,"line_start":1927,"line_end":1927,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128495,"byte_end":128498,"line_start":1928,"line_end":1928,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128503,"byte_end":128513,"line_start":1929,"line_end":1929,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128518,"byte_end":128521,"line_start":1930,"line_end":1930,"column_start":5,"column_end":8}},{"value":"/ `base + storage_write_base + storage_write_key_byte * num_key_bytes + storage_write_value_byte * num_value_bytes","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128526,"byte_end":128642,"line_start":1931,"line_end":1931,"column_start":5,"column_end":121}},{"value":"/ + get_vec_from_memory_or_register_cost x 2`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128647,"byte_end":128695,"line_start":1932,"line_end":1932,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128700,"byte_end":128703,"line_start":1933,"line_end":1933,"column_start":5,"column_end":8}},{"value":"/ If a value was evicted it costs additional `storage_write_value_evicted_byte * num_evicted_bytes + internal_write_register_cost`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":128708,"byte_end":128841,"line_start":1934,"line_end":1934,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":133352,"byte_end":133364,"line_start":2037,"line_end":2037,"column_start":12,"column_end":24},"name":"storage_read","qualname":"<VMLogic>::storage_read","value":"pub fn storage_read(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Reads the value stored under the given key.\n * If key is used copies the content of the value into the `register_id`, even if the content\n   is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`;","sig":null,"attributes":[{"value":"/ Reads the value stored under the given key.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132441,"byte_end":132488,"line_start":2020,"line_end":2020,"column_start":5,"column_end":52}},{"value":"/ * If key is used copies the content of the value into the `register_id`, even if the content","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132493,"byte_end":132589,"line_start":2021,"line_end":2021,"column_start":5,"column_end":101}},{"value":"/   is zero bytes. Returns `1`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132594,"byte_end":132627,"line_start":2022,"line_end":2022,"column_start":5,"column_end":38}},{"value":"/ * If key is not present then does not modify the register. Returns `0`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132632,"byte_end":132707,"line_start":2023,"line_end":2023,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132712,"byte_end":132715,"line_start":2024,"line_end":2024,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132720,"byte_end":132732,"line_start":2025,"line_end":2025,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132737,"byte_end":132740,"line_start":2026,"line_end":2026,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132745,"byte_end":132837,"line_start":2027,"line_end":2027,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132842,"byte_end":132880,"line_start":2028,"line_end":2028,"column_start":5,"column_end":43}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132885,"byte_end":132981,"line_start":2029,"line_end":2029,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":132986,"byte_end":133016,"line_start":2030,"line_end":2030,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":133021,"byte_end":133113,"line_start":2031,"line_end":2031,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":133118,"byte_end":133121,"line_start":2032,"line_end":2032,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":133126,"byte_end":133136,"line_start":2033,"line_end":2033,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":133141,"byte_end":133144,"line_start":2034,"line_end":2034,"column_start":5,"column_end":8}},{"value":"/ `base + storage_read_base + storage_read_key_byte * num_key_bytes + storage_read_value_byte + num_value_bytes","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":133149,"byte_end":133262,"line_start":2035,"line_end":2035,"column_start":5,"column_end":118}},{"value":"/  cost to read key from register + cost to write value into register`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":133267,"byte_end":133340,"line_start":2036,"line_end":2036,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135610,"byte_end":135624,"line_start":2082,"line_end":2082,"column_start":12,"column_end":26},"name":"storage_remove","qualname":"<VMLogic>::storage_remove","value":"pub fn storage_remove(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Removes the value stored under the given key.\n * If key is used, removes the key-value from the trie and copies the content of the value\n   into the `register_id`, even if the content is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`.","sig":null,"attributes":[{"value":"/ Removes the value stored under the given key.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134515,"byte_end":134564,"line_start":2063,"line_end":2063,"column_start":5,"column_end":54}},{"value":"/ * If key is used, removes the key-value from the trie and copies the content of the value","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134569,"byte_end":134662,"line_start":2064,"line_end":2064,"column_start":5,"column_end":98}},{"value":"/   into the `register_id`, even if the content is zero bytes. Returns `1`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134667,"byte_end":134744,"line_start":2065,"line_end":2065,"column_start":5,"column_end":82}},{"value":"/ * If key is not present then does not modify the register. Returns `0`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134749,"byte_end":134824,"line_start":2066,"line_end":2066,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134829,"byte_end":134832,"line_start":2067,"line_end":2067,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134837,"byte_end":134849,"line_start":2068,"line_end":2068,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134854,"byte_end":134857,"line_start":2069,"line_end":2069,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134862,"byte_end":134954,"line_start":2070,"line_end":2070,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":134959,"byte_end":134997,"line_start":2071,"line_end":2071,"column_start":5,"column_end":43}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135002,"byte_end":135081,"line_start":2072,"line_end":2072,"column_start":5,"column_end":84}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135086,"byte_end":135182,"line_start":2073,"line_end":2073,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135187,"byte_end":135217,"line_start":2074,"line_end":2074,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135222,"byte_end":135314,"line_start":2075,"line_end":2075,"column_start":5,"column_end":97}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135319,"byte_end":135380,"line_start":2076,"line_end":2076,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135385,"byte_end":135388,"line_start":2077,"line_end":2077,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135393,"byte_end":135403,"line_start":2078,"line_end":2078,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135408,"byte_end":135411,"line_start":2079,"line_end":2079,"column_start":5,"column_end":8}},{"value":"/ `base + storage_remove_base + storage_remove_key_byte * num_key_bytes + storage_remove_ret_value_byte * num_value_bytes","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135416,"byte_end":135539,"line_start":2080,"line_end":2080,"column_start":5,"column_end":128}},{"value":"/ + cost to read the key + cost to write the value`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":135544,"byte_end":135598,"line_start":2081,"line_end":2081,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":138083,"byte_end":138098,"line_start":2138,"line_end":2138,"column_start":12,"column_end":27},"name":"storage_has_key","qualname":"<VMLogic>::storage_has_key","value":"pub fn storage_has_key(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Checks if there is a key-value pair.\n * If key is used returns `1`, even if the value is zero bytes;\n * Otherwise returns `0`.","sig":null,"attributes":[{"value":"/ Checks if there is a key-value pair.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137573,"byte_end":137613,"line_start":2126,"line_end":2126,"column_start":5,"column_end":45}},{"value":"/ * If key is used returns `1`, even if the value is zero bytes;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137618,"byte_end":137684,"line_start":2127,"line_end":2127,"column_start":5,"column_end":71}},{"value":"/ * Otherwise returns `0`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137689,"byte_end":137717,"line_start":2128,"line_end":2128,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137722,"byte_end":137725,"line_start":2129,"line_end":2129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137730,"byte_end":137742,"line_start":2130,"line_end":2130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137747,"byte_end":137750,"line_start":2131,"line_end":2131,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container it returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137755,"byte_end":137848,"line_start":2132,"line_end":2132,"column_start":5,"column_end":98}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137853,"byte_end":137945,"line_start":2133,"line_end":2133,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137950,"byte_end":137953,"line_start":2134,"line_end":2134,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137958,"byte_end":137968,"line_start":2135,"line_end":2135,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137973,"byte_end":137976,"line_start":2136,"line_end":2136,"column_start":5,"column_end":8}},{"value":"/ `base + storage_has_key_base + storage_has_key_byte * num_bytes + cost of reading key`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":137981,"byte_end":138071,"line_start":2137,"line_end":2137,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139860,"byte_end":139879,"line_start":2174,"line_end":2174,"column_start":12,"column_end":31},"name":"storage_iter_prefix","qualname":"<VMLogic>::storage_iter_prefix","value":"pub fn storage_iter_prefix(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Creates an iterator object inside the host. Returns the identifier that uniquely\n differentiates the given iterator from other iterators that can be simultaneously created.\n * It iterates over the keys that have the provided prefix. The order of iteration is defined\n   by the lexicographic order of the bytes in the keys;\n * If there are no keys, it creates an empty iterator, see below on empty iterators.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":138976,"byte_end":138990,"line_start":2157,"line_end":2157,"column_start":5,"column_end":19}},{"value":"/ Creates an iterator object inside the host. Returns the identifier that uniquely","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":138995,"byte_end":139079,"line_start":2158,"line_end":2158,"column_start":5,"column_end":89}},{"value":"/ differentiates the given iterator from other iterators that can be simultaneously created.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139084,"byte_end":139178,"line_start":2159,"line_end":2159,"column_start":5,"column_end":99}},{"value":"/ * It iterates over the keys that have the provided prefix. The order of iteration is defined","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139183,"byte_end":139279,"line_start":2160,"line_end":2160,"column_start":5,"column_end":101}},{"value":"/   by the lexicographic order of the bytes in the keys;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139284,"byte_end":139342,"line_start":2161,"line_end":2161,"column_start":5,"column_end":63}},{"value":"/ * If there are no keys, it creates an empty iterator, see below on empty iterators.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139347,"byte_end":139434,"line_start":2162,"line_end":2162,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139439,"byte_end":139442,"line_start":2163,"line_end":2163,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139447,"byte_end":139459,"line_start":2164,"line_end":2164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139464,"byte_end":139467,"line_start":2165,"line_end":2165,"column_start":5,"column_end":8}},{"value":"/ * If `prefix_len + prefix_ptr` exceeds the memory container it returns","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139472,"byte_end":139546,"line_start":2166,"line_end":2166,"column_start":5,"column_end":79}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139551,"byte_end":139581,"line_start":2167,"line_end":2167,"column_start":5,"column_end":35}},{"value":"/ * If the length of the prefix exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139586,"byte_end":139681,"line_start":2168,"line_end":2168,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139686,"byte_end":139689,"line_start":2169,"line_end":2169,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139694,"byte_end":139704,"line_start":2170,"line_end":2170,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139709,"byte_end":139712,"line_start":2171,"line_end":2171,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_prefix_base + storage_iter_create_key_byte * num_prefix_bytes","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139717,"byte_end":139810,"line_start":2172,"line_end":2172,"column_start":5,"column_end":98}},{"value":"/  cost of reading the prefix`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":139815,"byte_end":139848,"line_start":2173,"line_end":2173,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141062,"byte_end":141080,"line_start":2197,"line_end":2197,"column_start":12,"column_end":30},"name":"storage_iter_range","qualname":"<VMLogic>::storage_iter_range","value":"pub fn storage_iter_range(&mut Self, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Iterates over all key-values such that keys are between `start` and `end`, where `start` is\n inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an\n empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist\n on the given trie.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140087,"byte_end":140101,"line_start":2180,"line_end":2180,"column_start":5,"column_end":19}},{"value":"/ Iterates over all key-values such that keys are between `start` and `end`, where `start` is","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140106,"byte_end":140201,"line_start":2181,"line_end":2181,"column_start":5,"column_end":100}},{"value":"/ inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140206,"byte_end":140297,"line_start":2182,"line_end":2182,"column_start":5,"column_end":96}},{"value":"/ empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140302,"byte_end":140398,"line_start":2183,"line_end":2183,"column_start":5,"column_end":101}},{"value":"/ on the given trie.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140403,"byte_end":140425,"line_start":2184,"line_end":2184,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140430,"byte_end":140433,"line_start":2185,"line_end":2185,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140438,"byte_end":140450,"line_start":2186,"line_end":2186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140455,"byte_end":140458,"line_start":2187,"line_end":2187,"column_start":5,"column_end":8}},{"value":"/ * If `start_len + start_ptr` or `end_len + end_ptr` exceeds the memory container or points to","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140463,"byte_end":140560,"line_start":2188,"line_end":2188,"column_start":5,"column_end":102}},{"value":"/   an unused register it returns `MemoryAccessViolation`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140565,"byte_end":140625,"line_start":2189,"line_end":2189,"column_start":5,"column_end":65}},{"value":"/ * If the length of the `start` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140630,"byte_end":140726,"line_start":2190,"line_end":2190,"column_start":5,"column_end":101}},{"value":"/ * If the length of the `end` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140731,"byte_end":140825,"line_start":2191,"line_end":2191,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140830,"byte_end":140833,"line_start":2192,"line_end":2192,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140838,"byte_end":140848,"line_start":2193,"line_end":2193,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140853,"byte_end":140856,"line_start":2194,"line_end":2194,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_range_base + storage_iter_create_from_byte * num_from_bytes","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140861,"byte_end":140952,"line_start":2195,"line_end":2195,"column_start":5,"column_end":96}},{"value":"/  + storage_iter_create_to_byte * num_to_bytes + reading from prefix + reading to prefix`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":140957,"byte_end":141050,"line_start":2196,"line_end":2196,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":143112,"byte_end":143129,"line_start":2237,"line_end":2237,"column_start":12,"column_end":29},"name":"storage_iter_next","qualname":"<VMLogic>::storage_iter_next","value":"pub fn storage_iter_next(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Advances iterator and saves the next key and value in the register.\n * If iterator is not empty (after calling next it points to a key-value), copies the key\n   into `key_register_id` and value into `value_register_id` and returns `1`;\n * If iterator is empty returns `0`;\n This allows us to iterate over the keys that have zero bytes stored in values.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141362,"byte_end":141376,"line_start":2209,"line_end":2209,"column_start":5,"column_end":19}},{"value":"/ Advances iterator and saves the next key and value in the register.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141381,"byte_end":141452,"line_start":2210,"line_end":2210,"column_start":5,"column_end":76}},{"value":"/ * If iterator is not empty (after calling next it points to a key-value), copies the key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141457,"byte_end":141549,"line_start":2211,"line_end":2211,"column_start":5,"column_end":97}},{"value":"/   into `key_register_id` and value into `value_register_id` and returns `1`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141554,"byte_end":141634,"line_start":2212,"line_end":2212,"column_start":5,"column_end":85}},{"value":"/ * If iterator is empty returns `0`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141639,"byte_end":141678,"line_start":2213,"line_end":2213,"column_start":5,"column_end":44}},{"value":"/ This allows us to iterate over the keys that have zero bytes stored in values.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141683,"byte_end":141765,"line_start":2214,"line_end":2214,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141770,"byte_end":141773,"line_start":2215,"line_end":2215,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141778,"byte_end":141790,"line_start":2216,"line_end":2216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141795,"byte_end":141798,"line_start":2217,"line_end":2217,"column_start":5,"column_end":8}},{"value":"/ * If `key_register_id == value_register_id` returns `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141803,"byte_end":141883,"line_start":2218,"line_end":2218,"column_start":5,"column_end":85}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141888,"byte_end":141967,"line_start":2219,"line_end":2219,"column_start":5,"column_end":84}},{"value":"/ * If `iterator_id` does not correspond to an existing iterator returns `InvalidIteratorId`;","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":141972,"byte_end":142067,"line_start":2220,"line_end":2220,"column_start":5,"column_end":100}},{"value":"/ * If between the creation of the iterator and calling `storage_iter_next` the range over","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142072,"byte_end":142164,"line_start":2221,"line_end":2221,"column_start":5,"column_end":97}},{"value":"/   which it iterates was modified returns `IteratorWasInvalidated`. Specifically, if","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142169,"byte_end":142256,"line_start":2222,"line_end":2222,"column_start":5,"column_end":92}},{"value":"/   `storage_write` or `storage_remove` was invoked on the key key such that:","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142261,"byte_end":142340,"line_start":2223,"line_end":2223,"column_start":5,"column_end":84}},{"value":"/   * in case of `storage_iter_prefix`. `key` has the given prefix and:","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142345,"byte_end":142418,"line_start":2224,"line_end":2224,"column_start":5,"column_end":78}},{"value":"/     * Iterator was not called next yet.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142423,"byte_end":142466,"line_start":2225,"line_end":2225,"column_start":5,"column_end":48}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the `key`","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142471,"byte_end":142564,"line_start":2226,"line_end":2226,"column_start":5,"column_end":98}},{"value":"/       `curr` such that `curr <= key`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142569,"byte_end":142610,"line_start":2227,"line_end":2227,"column_start":5,"column_end":46}},{"value":"/   * in case of `storage_iter_range`. `start<=key<end` and:","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142615,"byte_end":142677,"line_start":2228,"line_end":2228,"column_start":5,"column_end":67}},{"value":"/     * Iterator was not called `next` yet.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142682,"byte_end":142727,"line_start":2229,"line_end":2229,"column_start":5,"column_end":50}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the key","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142732,"byte_end":142823,"line_start":2230,"line_end":2230,"column_start":5,"column_end":96}},{"value":"/       `curr` such that `curr<=key<end`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142828,"byte_end":142871,"line_start":2231,"line_end":2231,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142876,"byte_end":142879,"line_start":2232,"line_end":2232,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142884,"byte_end":142894,"line_start":2233,"line_end":2233,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142899,"byte_end":142902,"line_start":2234,"line_end":2234,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_next_base + storage_iter_next_key_byte * num_key_bytes + storage_iter_next_value_byte * num_value_bytes","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":142907,"byte_end":143035,"line_start":2235,"line_end":2235,"column_start":5,"column_end":133}},{"value":"/  + writing key to register + writing value to register`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":143040,"byte_end":143100,"line_start":2236,"line_end":2236,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":143455,"byte_end":143462,"line_start":2249,"line_end":2249,"column_start":12,"column_end":19},"name":"outcome","qualname":"<VMLogic>::outcome","value":"pub fn outcome(Self) -> VMOutcome","parent":null,"children":[],"decl_id":null,"docs":" Computes the outcome of execution.\n","sig":null,"attributes":[{"value":"/ Computes the outcome of execution.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":143405,"byte_end":143443,"line_start":2248,"line_end":2248,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":143855,"byte_end":143868,"line_start":2261,"line_end":2261,"column_start":12,"column_end":25},"name":"clone_outcome","qualname":"<VMLogic>::clone_outcome","value":"pub fn clone_outcome(&Self) -> VMOutcome","parent":null,"children":[],"decl_id":null,"docs":" clones the outcome of execution.\n","sig":null,"attributes":[{"value":"/ clones the outcome of execution.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":143807,"byte_end":143843,"line_start":2260,"line_end":2260,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144282,"byte_end":144306,"line_start":2274,"line_end":2274,"column_start":12,"column_end":36},"name":"add_contract_compile_fee","qualname":"<VMLogic>::add_contract_compile_fee","value":"pub fn add_contract_compile_fee(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1590},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144559,"byte_end":144568,"line_start":2281,"line_end":2281,"column_start":12,"column_end":21},"name":"VMOutcome","qualname":"::logic::VMOutcome","value":"VMOutcome { balance, storage_usage, return_data, burnt_gas, used_gas, logs }","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1596},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144637,"byte_end":144644,"line_start":2283,"line_end":2283,"column_start":9,"column_end":16},"name":"balance","qualname":"::logic::VMOutcome::balance","value":"u128","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::u128_dec_format\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144575,"byte_end":144628,"line_start":2282,"line_end":2282,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1591},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144663,"byte_end":144676,"line_start":2284,"line_end":2284,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::logic::VMOutcome::storage_usage","value":"u64","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1592},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144700,"byte_end":144711,"line_start":2285,"line_end":2285,"column_start":9,"column_end":20},"name":"return_data","qualname":"::logic::VMOutcome::return_data","value":"types::ReturnData","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1593},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144733,"byte_end":144742,"line_start":2286,"line_end":2286,"column_start":9,"column_end":18},"name":"burnt_gas","qualname":"::logic::VMOutcome::burnt_gas","value":"u64","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1594},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144757,"byte_end":144765,"line_start":2287,"line_end":2287,"column_start":9,"column_end":17},"name":"used_gas","qualname":"::logic::VMOutcome::used_gas","value":"u64","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1595},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":144780,"byte_end":144784,"line_start":2288,"line_end":2288,"column_start":9,"column_end":13},"name":"logs","qualname":"::logic::VMOutcome::logs","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":398},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocks","qualname":"::mocks","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mod.rs","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":468}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":399},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_external","qualname":"::mocks::mock_external","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":1689},{"krate":0,"index":1693},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":1695},{"krate":0,"index":1748},{"krate":0,"index":1703},{"krate":0,"index":1701},{"krate":0,"index":1699},{"krate":0,"index":1754},{"krate":0,"index":1838},{"krate":0,"index":1785},{"krate":0,"index":1783},{"krate":0,"index":1781},{"krate":0,"index":1844},{"krate":0,"index":1891},{"krate":0,"index":1850},{"krate":0,"index":1848},{"krate":0,"index":1846},{"krate":0,"index":1897},{"krate":0,"index":1991},{"krate":0,"index":1906},{"krate":0,"index":1904},{"krate":0,"index":1902},{"krate":0,"index":2013},{"krate":0,"index":2060},{"krate":0,"index":2019},{"krate":0,"index":2017},{"krate":0,"index":2015},{"krate":0,"index":2066},{"krate":0,"index":2135},{"krate":0,"index":2073},{"krate":0,"index":2071},{"krate":0,"index":2069},{"krate":0,"index":2149},{"krate":0,"index":2218},{"krate":0,"index":2156},{"krate":0,"index":2154},{"krate":0,"index":2152},{"krate":0,"index":2232},{"krate":0,"index":2329},{"krate":0,"index":2242},{"krate":0,"index":2240},{"krate":0,"index":2238},{"krate":0,"index":2351},{"krate":0,"index":2417},{"krate":0,"index":2357},{"krate":0,"index":2355},{"krate":0,"index":2353},{"krate":0,"index":2431},{"krate":0,"index":2478},{"krate":0,"index":2437},{"krate":0,"index":2435},{"krate":0,"index":2433}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1689},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145116,"byte_end":145130,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"MockedExternal","qualname":"::mocks::mock_external::MockedExternal","value":"MockedExternal { fake_trie, validators }","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692}],"decl_id":null,"docs":" Emulates the trie and the mock handling code.\n","sig":null,"attributes":[{"value":"/ Emulates the trie and the mock handling code.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145055,"byte_end":145104,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1690},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145141,"byte_end":145150,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"fake_trie","qualname":"::mocks::mock_external::MockedExternal::fake_trie","value":"std::collections::HashMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1692},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145215,"byte_end":145225,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"validators","qualname":"::mocks::mock_external::MockedExternal::validators","value":"std::collections::HashMap<std::string::String, u128>","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":433},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145270,"byte_end":145284,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"MockedValuePtr","qualname":"::mocks::mock_external::MockedValuePtr","value":"MockedValuePtr {  }","parent":null,"children":[{"krate":0,"index":434}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145343,"byte_end":145346,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedValuePtr>::new","value":"pub fn new<T>(T) -> Self where T: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145711,"byte_end":145714,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedExternal>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145847,"byte_end":145871,"line_start":44,"line_end":44,"column_start":12,"column_end":36},"name":"get_receipt_create_calls","qualname":"<MockedExternal>::get_receipt_create_calls","value":"pub fn get_receipt_create_calls(&Self) -> &Vec<Receipt>","parent":null,"children":[],"decl_id":null,"docs":" Get calls to receipt create that were performed during contract call.\n","sig":null,"attributes":[{"value":"/ Get calls to receipt create that were performed during contract call.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145762,"byte_end":145835,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1695},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":150845,"byte_end":150852,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"Receipt","qualname":"::mocks::mock_external::Receipt","value":"Receipt {  }","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1755},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151010,"byte_end":151023,"line_start":219,"line_end":219,"column_start":5,"column_end":18},"name":"CreateAccount","qualname":"::mocks::mock_external::Action::CreateAccount","value":"Action::CreateAccount","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1757},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151029,"byte_end":151043,"line_start":220,"line_end":220,"column_start":5,"column_end":19},"name":"DeployContract","qualname":"::mocks::mock_external::Action::DeployContract","value":"Action::DeployContract(DeployContractAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1760},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151071,"byte_end":151083,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"FunctionCall","qualname":"::mocks::mock_external::Action::FunctionCall","value":"Action::FunctionCall(FunctionCallAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1763},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151109,"byte_end":151117,"line_start":222,"line_end":222,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::mocks::mock_external::Action::Transfer","value":"Action::Transfer(TransferAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1766},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151139,"byte_end":151144,"line_start":223,"line_end":223,"column_start":5,"column_end":10},"name":"Stake","qualname":"::mocks::mock_external::Action::Stake","value":"Action::Stake(StakeAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1769},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151163,"byte_end":151183,"line_start":224,"line_end":224,"column_start":5,"column_end":25},"name":"AddKeyWithFullAccess","qualname":"::mocks::mock_external::Action::AddKeyWithFullAccess","value":"Action::AddKeyWithFullAccess(AddKeyWithFullAccessAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1772},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151217,"byte_end":151239,"line_start":225,"line_end":225,"column_start":5,"column_end":27},"name":"AddKeyWithFunctionCall","qualname":"::mocks::mock_external::Action::AddKeyWithFunctionCall","value":"Action::AddKeyWithFunctionCall(AddKeyWithFunctionCallAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1775},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151275,"byte_end":151284,"line_start":226,"line_end":226,"column_start":5,"column_end":14},"name":"DeleteKey","qualname":"::mocks::mock_external::Action::DeleteKey","value":"Action::DeleteKey(DeleteKeyAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1778},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151307,"byte_end":151320,"line_start":227,"line_end":227,"column_start":5,"column_end":18},"name":"DeleteAccount","qualname":"::mocks::mock_external::Action::DeleteAccount","value":"Action::DeleteAccount(DeleteAccountAction)","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1754},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":150997,"byte_end":151003,"line_start":218,"line_end":218,"column_start":10,"column_end":16},"name":"Action","qualname":"::mocks::mock_external::Action","value":"pub enum Action {\n    CreateAccount,\n    DeployContract(DeployContractAction),\n    FunctionCall(FunctionCallAction),\n    Transfer(TransferAction),\n    Stake(StakeAction),\n    AddKeyWithFullAccess(AddKeyWithFullAccessAction),\n    AddKeyWithFunctionCall(AddKeyWithFunctionCallAction),\n    DeleteKey(DeleteKeyAction),\n    DeleteAccount(DeleteAccountAction),\n}","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1844},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151405,"byte_end":151425,"line_start":231,"line_end":231,"column_start":12,"column_end":32},"name":"DeployContractAction","qualname":"::mocks::mock_external::DeployContractAction","value":"DeployContractAction { code }","parent":null,"children":[{"krate":0,"index":1845}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1845},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151436,"byte_end":151440,"line_start":232,"line_end":232,"column_start":9,"column_end":13},"name":"code","qualname":"::mocks::mock_external::DeployContractAction::code","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1897},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":151513,"byte_end":151531,"line_start":236,"line_end":236,"column_start":12,"column_end":30},"name":"FunctionCallAction","qualname":"::mocks::mock_external::FunctionCallAction","value":"FunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1898},{"krate":0,"index":1899}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2013},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":152120,"byte_end":152134,"line_start":250,"line_end":250,"column_start":12,"column_end":26},"name":"TransferAction","qualname":"::mocks::mock_external::TransferAction","value":"TransferAction {  }","parent":null,"children":[{"krate":0,"index":2014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2066},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":152221,"byte_end":152232,"line_start":255,"line_end":255,"column_start":12,"column_end":23},"name":"StakeAction","qualname":"::mocks::mock_external::StakeAction","value":"StakeAction {  }","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2149},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":152402,"byte_end":152428,"line_start":262,"line_end":262,"column_start":12,"column_end":38},"name":"AddKeyWithFullAccessAction","qualname":"::mocks::mock_external::AddKeyWithFullAccessAction","value":"AddKeyWithFullAccessAction {  }","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2232},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":152594,"byte_end":152622,"line_start":269,"line_end":269,"column_start":12,"column_end":40},"name":"AddKeyWithFunctionCallAction","qualname":"::mocks::mock_external::AddKeyWithFunctionCallAction","value":"AddKeyWithFunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2351},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":152939,"byte_end":152954,"line_start":280,"line_end":280,"column_start":12,"column_end":27},"name":"DeleteKeyAction","qualname":"::mocks::mock_external::DeleteKeyAction","value":"DeleteKeyAction {  }","parent":null,"children":[{"krate":0,"index":2352}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2431},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":153104,"byte_end":153123,"line_start":286,"line_end":286,"column_start":12,"column_end":31},"name":"DeleteAccountAction","qualname":"::mocks::mock_external::DeleteAccountAction","value":"DeleteAccountAction {  }","parent":null,"children":[{"krate":0,"index":2432}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":468},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_memory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_memory","qualname":"::mocks::mock_memory","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_memory.rs","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2484},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_memory.rs","byte_start":153214,"byte_end":153226,"line_start":4,"line_end":4,"column_start":12,"column_end":24},"name":"MockedMemory","qualname":"::mocks::mock_memory::MockedMemory","value":"MockedMemory {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":477},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_with","qualname":"::serde_with","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":494},{"krate":0,"index":510},{"krate":0,"index":526},{"krate":0,"index":560},{"krate":0,"index":579}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":478},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":153954,"byte_end":153969,"line_start":2,"line_end":2,"column_start":9,"column_end":24},"name":"bytes_as_base64","qualname":"::serde_with::bytes_as_base64","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":491}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base64 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base64 encoding.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":153902,"byte_end":153945,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":154040,"byte_end":154049,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base64::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":154222,"byte_end":154233,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base64::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":494},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":154517,"byte_end":154529,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"name":"bytes_as_str","qualname":"::serde_with::bytes_as_str","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":507}],"decl_id":null,"docs":" Serialize `Vec<u8>` as `String`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as `String`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":154472,"byte_end":154508,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":154600,"byte_end":154609,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":154802,"byte_end":154813,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":510},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":155054,"byte_end":155069,"line_start":42,"line_end":42,"column_start":9,"column_end":24},"name":"bytes_as_base58","qualname":"::serde_with::bytes_as_base58","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":523}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base58 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base58 encoding.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":155002,"byte_end":155045,"line_start":41,"line_end":41,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":155140,"byte_end":155149,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base58::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":155334,"byte_end":155345,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base58::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":526},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":155647,"byte_end":155663,"line_start":62,"line_end":62,"column_start":9,"column_end":25},"name":"vec_bytes_as_str","qualname":"::serde_with::vec_bytes_as_str","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":557}],"decl_id":null,"docs":" Serialize `Vec<Vec<u8>>` as `Vec<String>`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<Vec<u8>>` as `Vec<String>`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":155592,"byte_end":155638,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":155815,"byte_end":155824,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::vec_bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<Vec<u8>>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":557},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":156752,"byte_end":156763,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::vec_bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<Vec<u8>>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":560},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":156943,"byte_end":156958,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"name":"u128_dec_format","qualname":"::serde_with::u128_dec_format","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":576}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":574},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157048,"byte_end":157057,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::u128_dec_format::serialize","value":"pub fn serialize<S>(&u128, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":576},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157226,"byte_end":157237,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":579},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157468,"byte_end":157494,"line_start":129,"line_end":129,"column_start":9,"column_end":35},"name":"u128_dec_format_compatible","qualname":"::serde_with::u128_dec_format_compatible","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":2487},{"krate":0,"index":2494},{"krate":0,"index":593}],"decl_id":null,"docs":" This in an extension to `u128_dec_format` that serves a compatibility layer role to\n deserialize u128 from a \"small\" JSON number (u64).","sig":null,"attributes":[{"value":"/ This in an extension to `u128_dec_format` that serves a compatibility layer role to","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157501,"byte_end":157588,"line_start":130,"line_end":130,"column_start":5,"column_end":92}},{"value":"/ deserialize u128 from a \"small\" JSON number (u64).","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157593,"byte_end":157647,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157652,"byte_end":157655,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ It is unfortunate that we cannot enable \"arbitrary_precision\" feature in serde_json due to","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157660,"byte_end":157754,"line_start":133,"line_end":133,"column_start":5,"column_end":99}},{"value":"/ a bug: https://github.com/serde-rs/json/issues/505","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":157759,"byte_end":157813,"line_start":134,"line_end":134,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":593},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":158040,"byte_end":158051,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format_compatible::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":596},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":2501},{"krate":0,"index":2581},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2563},{"krate":0,"index":2512},{"krate":0,"index":2510},{"krate":0,"index":2583},{"krate":0,"index":2660},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2642},{"krate":0,"index":2591},{"krate":0,"index":627}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":617},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158495,"byte_end":158504,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"AccountId","qualname":"::types::AccountId","value":"String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":618},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158524,"byte_end":158533,"line_start":7,"line_end":7,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::types::PublicKey","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":619},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158554,"byte_end":158565,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"BlockHeight","qualname":"::types::BlockHeight","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":620},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158582,"byte_end":158593,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"EpochHeight","qualname":"::types::EpochHeight","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":621},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158610,"byte_end":158617,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Balance","qualname":"::types::Balance","value":"u128","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":622},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158635,"byte_end":158638,"line_start":11,"line_end":11,"column_start":10,"column_end":13},"name":"Gas","qualname":"::types::Gas","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":623},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158655,"byte_end":158667,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"PromiseIndex","qualname":"::types::PromiseIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":624},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158684,"byte_end":158696,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"ReceiptIndex","qualname":"::types::ReceiptIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":625},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158713,"byte_end":158726,"line_start":14,"line_end":14,"column_start":10,"column_end":23},"name":"IteratorIndex","qualname":"::types::IteratorIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":626},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158743,"byte_end":158755,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"StorageUsage","qualname":"::types::StorageUsage","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2507},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158948,"byte_end":158953,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Value","qualname":"::types::ReturnData::Value","value":"ReturnData::Value(Vec<u8>)","parent":{"krate":0,"index":2501},"children":[],"decl_id":null,"docs":" Method returned some value or data.\n","sig":null,"attributes":[{"value":"/ Method returned some value or data.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158849,"byte_end":158888,"line_start":19,"line_end":19,"column_start":5,"column_end":44}},{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158893,"byte_end":158943,"line_start":20,"line_end":20,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2502},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159106,"byte_end":159118,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"ReceiptIndex","qualname":"::types::ReturnData::ReceiptIndex","value":"ReturnData::ReceiptIndex(ReceiptIndex)","parent":{"krate":0,"index":2501},"children":[],"decl_id":null,"docs":" The return value of the method should be taken from the return value of another method\n identified through receipt index.\n","sig":null,"attributes":[{"value":"/ The return value of the method should be taken from the return value of another method","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158969,"byte_end":159059,"line_start":23,"line_end":23,"column_start":5,"column_end":95}},{"value":"/ identified through receipt index.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159064,"byte_end":159101,"line_start":24,"line_end":24,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2505},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159191,"byte_end":159195,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"None","qualname":"::types::ReturnData::None","value":"ReturnData::None","parent":{"krate":0,"index":2501},"children":[],"decl_id":null,"docs":" Method hasn't returned any data or promise.\n","sig":null,"attributes":[{"value":"/ Method hasn't returned any data or promise.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159139,"byte_end":159186,"line_start":27,"line_end":27,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2501},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":158832,"byte_end":158842,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"name":"ReturnData","qualname":"::types::ReturnData","value":"pub enum ReturnData { Value(Vec<u8>), ReceiptIndex(ReceiptIndex), None, }","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2502},{"krate":0,"index":2505}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2584},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159531,"byte_end":159539,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::types::PromiseResult::NotReady","value":"PromiseResult::NotReady","parent":{"krate":0,"index":2583},"children":[],"decl_id":null,"docs":" Current version of the protocol never returns `PromiseResult::NotReady`.\n","sig":null,"attributes":[{"value":"/ Current version of the protocol never returns `PromiseResult::NotReady`.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159450,"byte_end":159526,"line_start":35,"line_end":35,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2588},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159600,"byte_end":159610,"line_start":38,"line_end":38,"column_start":5,"column_end":15},"name":"Successful","qualname":"::types::PromiseResult::Successful","value":"PromiseResult::Successful(Vec<u8>)","parent":{"krate":0,"index":2583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159545,"byte_end":159595,"line_start":37,"line_end":37,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159625,"byte_end":159631,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Failed","qualname":"::types::PromiseResult::Failed","value":"PromiseResult::Failed","parent":{"krate":0,"index":2583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2583},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159430,"byte_end":159443,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"name":"PromiseResult","qualname":"::types::PromiseResult","value":"pub enum PromiseResult { NotReady, Successful(Vec<u8>), Failed, }","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2588},{"krate":0,"index":2586}],"decl_id":null,"docs":" When there is a callback attached to one or more contract calls the execution results of these\n calls are available to the contract invoked through the callback.\n","sig":null,"attributes":[{"value":"/ When there is a callback attached to one or more contract calls the execution results of these","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159200,"byte_end":159298,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ calls are available to the contract invoked through the callback.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159299,"byte_end":159368,"line_start":32,"line_end":32,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":627},"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159677,"byte_end":159688,"line_start":43,"line_end":43,"column_start":10,"column_end":21},"name":"ProfileData","qualname":"::types::ProfileData","value":"Rc<RefCell<[u64; ]>>","parent":null,"children":[],"decl_id":null,"docs":" Profile of gas consumption.\n","sig":null,"attributes":[{"value":"/ Profile of gas consumption.","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/types.rs","byte_start":159636,"byte_end":159667,"line_start":42,"line_end":42,"column_start":1,"column_end":32}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":817,"byte_end":823,"line_start":15,"line_end":15,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3903,"byte_end":3911,"line_start":105,"line_end":105,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4158,"byte_end":4166,"line_start":116,"line_end":116,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4867,"byte_end":4880,"line_start":140,"line_end":140,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":11476,"byte_end":11490,"line_start":323,"line_end":323,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":14661,"byte_end":14675,"line_start":379,"line_end":379,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18339,"byte_end":18350,"line_start":506,"line_end":506,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18492,"byte_end":18503,"line_start":512,"line_end":512,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18977,"byte_end":18985,"line_start":533,"line_end":533,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":19124,"byte_end":19132,"line_start":539,"line_end":539,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","byte_start":43453,"byte_end":43463,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":53588,"byte_end":53595,"line_start":94,"line_end":94,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":1589},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145315,"byte_end":145329,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145493,"byte_end":145507,"line_start":28,"line_end":28,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145683,"byte_end":145697,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145982,"byte_end":145996,"line_start":51,"line_end":51,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_memory.rs","byte_start":153251,"byte_end":153263,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":156192,"byte_end":156207,"line_start":82,"line_end":82,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":79,"byte_end":84,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":398}},{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mod.rs","byte_start":144810,"byte_end":144823,"line_start":1,"line_end":1,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":399}},{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mod.rs","byte_start":144833,"byte_end":144844,"line_start":2,"line_end":2,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":468}},{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":94,"byte_end":104,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":477}},{"kind":"Mod","span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/lib.rs","byte_start":114,"byte_end":119,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":596}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":817,"byte_end":823,"line_start":15,"line_end":15,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":3903,"byte_end":3911,"line_start":105,"line_end":105,"column_start":18,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4158,"byte_end":4166,"line_start":116,"line_end":116,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":4867,"byte_end":4880,"line_start":140,"line_end":140,"column_start":18,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":11476,"byte_end":11490,"line_start":323,"line_end":323,"column_start":18,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":947},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":14661,"byte_end":14675,"line_start":379,"line_end":379,"column_start":6,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18339,"byte_end":18350,"line_start":506,"line_end":506,"column_start":23,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1271},"to":{"krate":2,"index":8728}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18492,"byte_end":18503,"line_start":512,"line_end":512,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":18977,"byte_end":18985,"line_start":533,"line_end":533,"column_start":23,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":8728}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/config.rs","byte_start":19124,"byte_end":19132,"line_start":539,"line_end":539,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/gas_counter.rs","byte_start":43453,"byte_end":43463,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/logic.rs","byte_start":53588,"byte_end":53595,"line_start":94,"line_end":94,"column_start":10,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145315,"byte_end":145329,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145493,"byte_end":145507,"line_start":28,"line_end":28,"column_start":19,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":433},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145683,"byte_end":145697,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_external.rs","byte_start":145982,"byte_end":145996,"line_start":51,"line_end":51,"column_start":19,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1689},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/mocks/mock_memory.rs","byte_start":153251,"byte_end":153263,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2484},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/marcio/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-2.0.0/src/serde_with.rs","byte_start":156192,"byte_end":156207,"line_start":82,"line_end":82,"column_start":32,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":549},"to":{"krate":18,"index":1531}}]}